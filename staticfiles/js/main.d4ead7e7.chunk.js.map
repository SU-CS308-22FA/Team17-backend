{"version":3,"sources":["constants/userConstants.js","constants/profileConstants.js","constants/blogConstants.js","constants/commentsConstants.js","store.js","reducers/userReducers.js","reducers/profileReducers.js","reducers/blogReducers.js","reducers/commentsReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/MyProfileScreen.js","actions/profileActions.js","components/Posts.js","screens/MyBlogScreen.js","actions/blogActions.js","screens/BlogListScreen.js","screens/CreateBlogScreen.js","components/comments.js","screens/BlogDetailScreen.js","actions/commentsActions.js","screens/FanatikaScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_MYDETAILS_REQUEST","USER_MYDETAILS_SUCCESS","USER_MYDETAILS_FAIL","USER_MYDETAILS_RESET","USER_UPDATE_MYPROFILE_REQUEST","USER_UPDATE_MYPROFILE_SUCCESS","USER_UPDATE_MYPROFILE_FAIL","USER_UPDATE_MYPROFILE_RESET","USER_MYLIST_REQUEST","USER_MYLIST_SUCCESS","USER_MYLIST_FAIL","USER_MYLIST_RESET","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_LIST_RESET","POST_MYLIST_REQUEST","POST_MYLIST_SUCCESS","POST_MYLIST_FAIL","POST_MYLIST_RESET","COMMENTS_CREATE_REQUEST","COMMENTS_CREATE_SUCCESS","COMMENTS_CREATE_FAIL","COMMENTS_CREATE_RESET","COMMENTS_LIST_REQUEST","COMMENTS_LIST_SUCCESS","COMMENTS_LIST_FAIL","COMMENTS_LIST_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","usermyDetails","Myuser","usermyUpdateProfile","usermyList","Myusers","postCreate","post","postmyList","Myposts","postallList","Allposts","postdetails","comments","postcomment","comment","commentalllist","commentsAll","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","className","Fragment","NavDropdown","title","name","Item","onClick","removeItem","Link","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Paginate","pages","page","keyword","split","Pagination","Array","keys","map","x","active","HomeScreen","history","productList","location","search","useEffect","position","right","color","top","fontWeight","fontSize","fontFamily","textAlign","zIndex","backgroundColor","borderColor","class","left","src","alt","FormContainer","xs","md","LoginScreen","useState","email","setEmail","password","setPassword","redirect","push","Form","onSubmit","e","preventDefault","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","team","setTeam","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","_id","put","updateUserProfile","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","UserEditScreen","match","userId","params","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","Number","updateUser","Check","label","checked","MyProfileScreen","bio","setBio","rating","setRating","birth_date","setBirth_date","Posts","Card","cssClass","card","background","Body","Title","as","Text","total_comments","slug","MyBlogScreen","sm","lg","xl","BlogListScreen","CreateBlogScreen","setTitle","body","setBody","short","setShort","published","createPost","rows","Comments","Comment","Detail","Date","published_on","toDateString","BlogDetailScreen","PostBodyDiv","PublishedDate","PostBody","PostInfo","author_full_name","CommentHeading","comments_list","createComment","FanatikaScreen","wordSpacing","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4ead7e7.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const USER_MYDETAILS_REQUEST = 'USER_MYDETAILS_REQUEST'\r\nexport const USER_MYDETAILS_SUCCESS = 'USER_MYDETAILS_SUCCESS'\r\nexport const USER_MYDETAILS_FAIL = 'USER_MYDETAILS_FAIL'\r\nexport const USER_MYDETAILS_RESET = 'USER_MYDETAILS_RESET'\r\n\r\nexport const USER_UPDATE_MYPROFILE_REQUEST = 'USER_UPDATE_MYPROFILE_REQUEST'\r\nexport const USER_UPDATE_MYPROFILE_SUCCESS = 'USER_UPDATE_MYPROFILE_SUCCESS'\r\nexport const USER_UPDATE_MYPROFILE_FAIL = 'USER_UPDATE_MYPROFILE_FAIL'\r\nexport const USER_UPDATE_MYPROFILE_RESET = 'USER_UPDATE_MYPROFILE_RESET'\r\n\r\nexport const USER_MYLIST_REQUEST = 'USER_MYLIST_REQUEST'\r\nexport const USER_MYLIST_SUCCESS = 'USER_MYLIST_SUCCESS'\r\nexport const USER_MYLIST_FAIL = 'USER_MYLIST_FAIL'\r\nexport const USER_MYLIST_RESET = 'USER_MYLIST_RESET'\r\n","export const POST_CREATE_REQUEST = 'POST_CREATE_REQUEST'\r\nexport const POST_CREATE_SUCCESS = 'POST_CREATE_SUCCESS'\r\nexport const POST_CREATE_FAIL = 'POST_CREATE_FAIL'\r\nexport const POST_CREATE_RESET = 'POST_CREATE_RESET'\r\n\r\n\r\nexport const POST_DETAILS_REQUEST = 'POST_DETAILS_REQUEST'\r\nexport const POST_DETAILS_SUCCESS = 'POST_DETAILS_SUCCESS'\r\nexport const POST_DETAILS_FAIL = 'POST_DETAILS_FAIL'\r\nexport const POST_DETAILS_RESET = 'POST_DETAILS_RESET'\r\n\r\nexport const POST_LIST_REQUEST = 'POST_LIST_REQUEST'\r\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS'\r\nexport const POST_LIST_FAIL = 'POST_LIST_FAIL'\r\nexport const POST_LIST_RESET = 'POST_LIST_RESET'\r\n\r\n\r\nexport const POST_MYLIST_REQUEST = 'POST_MYLIST_REQUEST'\r\nexport const POST_MYLIST_SUCCESS = 'POST_MYLIST_SUCCESS'\r\nexport const POST_MYLIST_FAIL = 'POST_MYLIST_FAIL'\r\nexport const POST_MYLIST_RESET = 'POST_MYLIST_RESET'\r\n\r\n\r\nexport const POST_DELETE_REQUEST = 'POST_DELETE_REQUEST'\r\nexport const POST_DELETE_SUCCESS = 'POST_DELETE_SUCCESS'\r\nexport const POST_DELETE_FAIL = 'POST_DELETE_FAIL'\r\n\r\n\r\nexport const POST_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const POST_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const POST_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const POST_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const COMMENTS_CREATE_REQUEST = 'COMMENTS_CREATE_REQUEST'\r\nexport const COMMENTS_CREATE_SUCCESS = 'COMMENTS_CREATE_SUCCESS'\r\nexport const COMMENTS_CREATE_FAIL = 'COMMENTS_CREATE_FAIL'\r\nexport const COMMENTS_CREATE_RESET = 'COMMENTS_CREATE_RESET'\r\n\r\n\r\nexport const COMMENTS_DETAILS_REQUEST = 'COMMENTS_DETAILS_REQUEST'\r\nexport const COMMENTS_DETAILS_SUCCESS = 'COMMENTS_DETAILS_SUCCESS'\r\nexport const COMMENTS_DETAILS_FAIL = 'COMMENTS_DETAILS_FAIL'\r\nexport const COMMENTS_DETAILS_RESET = 'COMMENTS_DETAILS_RESET'\r\n\r\nexport const COMMENTS_LIST_REQUEST = 'POST_LIST_REQUEST'\r\nexport const COMMENTS_LIST_SUCCESS = 'POST_LIST_SUCCESS'\r\nexport const COMMENTS_LIST_FAIL = 'POST_LIST_FAIL'\r\nexport const COMMENTS_LIST_RESET = 'POST_LIST_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    userMyDetailsReducer,\r\n    userUpdateMyProfileReducer,\r\n    userMyListReducer,\r\n} from './reducers/profileReducers'\r\n\r\nimport {\r\n    postCreateReducer, postMyListReducer,\r\n    postAllListReducer,\r\n    postDetailsReducer,\r\n} from './reducers/blogReducers'\r\n\r\nimport {\r\n    commentCreateReducer,\r\n    CommentAllList,\r\n} from './reducers/commentsReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    usermyDetails: userMyDetailsReducer,\r\n    usermyUpdateProfile: userUpdateMyProfileReducer,\r\n    usermyList: userMyListReducer,\r\n\r\n    postCreate:postCreateReducer,\r\n    postmyList:postMyListReducer,\r\n    postallList:postAllListReducer,\r\n    postdetails:postDetailsReducer,\r\n\r\n    postcomment :commentCreateReducer,\r\n    commentalllist:CommentAllList,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_MYDETAILS_FAIL,\r\n    USER_MYDETAILS_SUCCESS,\r\n    USER_MYDETAILS_REQUEST,\r\n    USER_MYDETAILS_RESET,\r\n    USER_UPDATE_MYPROFILE_REQUEST,\r\n    USER_UPDATE_MYPROFILE_SUCCESS,\r\n    USER_UPDATE_MYPROFILE_FAIL,\r\n    USER_UPDATE_MYPROFILE_RESET,\r\n    USER_MYLIST_REQUEST,\r\n    USER_MYLIST_SUCCESS,\r\n    USER_MYLIST_FAIL,\r\n    USER_MYLIST_RESET,\r\n} from '../constants/profileConstants'\r\n\r\n\r\nexport const userMyDetailsReducer = (state = { Myuser: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_MYDETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_MYDETAILS_SUCCESS:\r\n            return { loading: false, Myuser: action.payload }\r\n\r\n        case USER_MYDETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_MYDETAILS_RESET:\r\n            return { Myuser: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateMyProfileReducer = (state = { Myuser: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_MYPROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_MYPROFILE_SUCCESS:\r\n            return { loading: false, success: true}\r\n\r\n        case USER_UPDATE_MYPROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_MYPROFILE_RESET:\r\n            return {Myuser:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userMyListReducer = (state = { Myusers: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_MYLIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_MYLIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_MYLIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_MYLIST_RESET:\r\n            return { Myusers: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    POST_CREATE_RESET,\r\n\r\n    POST_DETAILS_REQUEST,\r\n    POST_DETAILS_SUCCESS,\r\n    POST_DETAILS_FAIL,\r\n    POST_DETAILS_RESET,\r\n\r\n    POST_LIST_REQUEST,\r\n    POST_LIST_SUCCESS,\r\n    POST_LIST_FAIL,\r\n    POST_LIST_RESET,\r\n\r\n    POST_MYLIST_REQUEST,\r\n    POST_MYLIST_SUCCESS,\r\n    POST_MYLIST_FAIL,\r\n    POST_MYLIST_RESET,\r\n\r\n    POST_DELETE_REQUEST,\r\n    POST_DELETE_SUCCESS,\r\n    POST_DELETE_FAIL,\r\n} from '../constants/blogConstants'\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case POST_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_CREATE_SUCCESS:\r\n            return { loading: false, success: true, post: action.payload }\r\n\r\n        case POST_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postMyListReducer = (state = { Myposts: [] }, action) => {\r\n    switch (action.type) {\r\n        case POST_MYLIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_MYLIST_SUCCESS:\r\n            return { loading: false, Myposts: action.payload }\r\n\r\n        case POST_MYLIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_MYLIST_RESET:\r\n            return { Myposts: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const postAllListReducer = (state = { Allposts: [] }, action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_LIST_SUCCESS:\r\n            return { loading: false, Allposts: action.payload }\r\n\r\n        case POST_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_LIST_RESET:\r\n            return { Allposts: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postDetailsReducer = (state = { post: { comments: [] } }, action) => {\r\n    switch (action.type) {\r\n        case POST_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case POST_DETAILS_SUCCESS:\r\n            return { loading: false, post: action.payload }\r\n\r\n        case POST_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    COMMENTS_CREATE_REQUEST,\r\n    COMMENTS_CREATE_SUCCESS,\r\n    COMMENTS_CREATE_FAIL,\r\n    COMMENTS_CREATE_RESET,\r\n\r\n    COMMENTS_DETAILS_REQUEST,\r\n    COMMENTS_DETAILS_SUCCESS,\r\n    COMMENTS_DETAILS_FAIL,\r\n    COMMENTS_DETAILS_RESET,\r\n\r\n    COMMENTS_LIST_REQUEST,\r\n    COMMENTS_LIST_SUCCESS,\r\n    COMMENTS_LIST_FAIL,\r\n    COMMENTS_LIST_RESET,\r\n} from '../constants/commentsConstants'\r\n\r\n\r\nexport const commentCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case COMMENTS_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case COMMENTS_CREATE_SUCCESS:\r\n            return { loading: false, success: true, comment: action.payload }\r\n\r\n        case COMMENTS_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case COMMENTS_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const CommentAllList = (state = { commentsAll: [] }, action) => {\r\n    switch (action.type) {\r\n        case COMMENTS_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case COMMENTS_LIST_SUCCESS:\r\n            return { loading: false, commentsAll: action.payload }\r\n\r\n        case COMMENTS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case COMMENTS_LIST_RESET:\r\n            return { commentsAll: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport {\r\n    USER_MYDETAILS_RESET,\r\n} from '../constants/profileConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: USER_MYDETAILS_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email,team, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'team': team, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            {userInfo ? (\r\n                                <React.Fragment>\r\n                                    <LinkContainer to='/bloglist'>\r\n                                        <Navbar.Brand>Blogs</Navbar.Brand>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Account Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/my/profile'>\r\n                                        <NavDropdown.Item>My Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/my/blog'>\r\n                                        <NavDropdown.Item>My Blog Posts</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/createblog'>\r\n                                        <NavDropdown.Item>Create Blog</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                                </React.Fragment>\r\n\r\n                            ) : (\r\n                                <Container>\r\n\r\n                                <LinkContainer to='/fanatika'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Fanatika Nedir?</Nav.Link>\r\n                                </LinkContainer>\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Giriş Yap</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/register'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Kayıt Ol</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    \r\n                                </Container>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">© 2022 Fanatika,Inc. Her hakkı saklıdır</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state)\r\n    const { error, loading, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <h2\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: 40,\r\n                            color: \"#434343\",\r\n                            top: 500,\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"35px\",\r\n                            fontFamily: \"Verdana\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 1,\r\n                        }}\r\n                        >\r\n                        Hem Takımını Destekle, Hem Ödülleri Kap\r\n                        <br /> \r\n                        Futbolu Takip Ederken, Eğlen\r\n                        </h2>\r\n                        \r\n                        <Link to=\"/fanatika\">\r\n                        <button style={{position: \"absolute\",\r\n                        right: 450,\r\n                        top: 700,\r\n                        width: \"250px\",\r\n                        height: \"65px\",\r\n                        color: \"white\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"15px\",\r\n                        backgroundColor: \"black\",\r\n                        borderColor: \"red\",}}\r\n                        type=\"button\" class=\"btn btn-info\">Öğrenmeye Başla</button>\r\n                        </Link>\r\n\r\n\r\n                        <Link to=\"/\">\r\n                        <button style={{position: \"absolute\",\r\n                        right: 1000,\r\n                        top: 1950,\r\n                        width: \"250px\",\r\n                        height: \"65px\",\r\n                        color: \"white\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"15px\",\r\n                        backgroundColor: \"black\",\r\n                        borderColor: \"red\",}}\r\n                        type=\"button\" class=\"btn btn-info\">GÖSTER</button>\r\n                        </Link>\r\n\r\n                        <h2\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: 550,\r\n                            color: \"#434343\",\r\n                            top: 1800,\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"35px\",\r\n                            fontFamily: \"Verdana\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 1,\r\n                        }}\r\n                        >\r\n                        Bu Ay Olan Ödüllerİ\r\n                        <br /> \r\n                        Sıralamanın Nasıl Olduğunu Merak Ediyorsan\r\n                        </h2>\r\n                        \r\n                        \r\n                        \r\n\r\n                        <img \r\n                        style={{position: \"absolute\",\r\n                        left: 500,\r\n                        top: 1200,\r\n                        width: \"1350px\",\r\n                        height: \"500px\",}}\r\n                        \r\n                        src=\"./71179.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                        <img \r\n                        style={{position: \"absolute\",\r\n                        left: 250,\r\n                        top: 250,\r\n                        width: \"1000px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./bacground.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                        \r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomeScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/profile'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Giriş Yap</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adresi</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder=' Email Gir'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Şifre</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Şifreni Gir'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Giriş Yap\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Yeni Kullanıcı? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Kayıt Ol\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [team, setTeam] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Şifre Aynı Değil')\r\n        } else {\r\n            dispatch(register(name, email, team, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Kayıt Ol</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>İsim</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='İsim Gir'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adresi</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Email Gir'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='team'>\r\n                    <Form.Label>Takım</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='team'\r\n                        placeholder='Takımını Gir'\r\n                        value={team}\r\n                        onChange={(e) => setTeam(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Şifre</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Şifre Gir'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Şifre Onay</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Şifreni Tekrar Gir'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Kayıt Ol\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Zaten Hesabın Var Mı? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Giriş Yap\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\r\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\r\nfunction MyProfileScreen({ history }) {\r\n\r\n    const [bio, setBio] = useState('')\r\n    const [team, setTeam] = useState('')\r\n    const [rating, setRating] = useState('')\r\n    const [birth_date, setBirth_date] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usermyDetails = useSelector(state => state.usermyDetails)\r\n\r\n    const { error, loading, Myuser } = usermyDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\r\n    const {success: successUpdate  } = usermyUpdateProfile\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!Myuser.team || !Myuser || successUpdate || userInfo._id !== Myuser.id) {\r\n            dispatch({ type: USER_UPDATE_MYPROFILE_RESET })\r\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\r\n        } else {\r\n            setTeam(Myuser.team)\r\n            setBio(Myuser.bio)\r\n            setRating(Myuser.rating)\r\n            setBirth_date(Myuser.birth_date)\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, Myuser, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateMyUserProfile({\r\n            'id': Myuser.id,\r\n            'user':Myuser.user,\r\n            'team': team,\r\n            'bio': bio,\r\n            'birth_date': birth_date,\r\n            'rating': rating\r\n        }))\r\n        setMessage('')\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n                <h2>{userInfo.name} Detail Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='team'>\r\n                        <Form.Label>Your Team</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='team'\r\n                            placeholder='Enter your team'\r\n                            value={team}\r\n                            onChange={(e) => setTeam(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='bio'>\r\n                        <Form.Label>Your Bio</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='bio'\r\n                            placeholder='Enter bio'\r\n                            value={bio}\r\n                            onChange={(e) => setBio(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='rating'>\r\n                        <Form.Label>Your rating</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='rating'\r\n                            placeholder='Your Ream'\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='birth_date'>\r\n                        <Form.Label>Your birth date</Form.Label>\r\n                        <Form.Control\r\n                            type='birth_date'\r\n                            placeholder='change your birth_date'\r\n                            value={birth_date}\r\n                            onChange={(e) => setBirth_date(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    USER_MYDETAILS_FAIL,\r\n    USER_MYDETAILS_SUCCESS,\r\n    USER_MYDETAILS_REQUEST,\r\n    USER_MYDETAILS_RESET,\r\n    USER_UPDATE_MYPROFILE_REQUEST,\r\n    USER_UPDATE_MYPROFILE_SUCCESS,\r\n    USER_UPDATE_MYPROFILE_FAIL,\r\n    USER_UPDATE_MYPROFILE_RESET,\r\n    USER_MYLIST_REQUEST,\r\n    USER_MYLIST_SUCCESS,\r\n    USER_MYLIST_FAIL,\r\n    USER_MYLIST_RESET,\r\n} from '../constants/profileConstants'\r\n\r\nexport const getMyUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_MYDETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/my/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_MYDETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_MYDETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateMyUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/my/profile/${user.id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_MYDETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport cssClass from \"./card.css\";\r\n\r\nfunction Posts({ post }) {\r\n    return (\r\n        <Card className={cssClass.card}  style= {{ background: \"#004700\" }} >\r\n                <Card.Body style= {{ color: \"white\" }}>\r\n\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{post.title}</strong>\r\n                    </Card.Title>\r\n\r\n                    <Card.Text >\r\n                        <p class=\"card-text\"><small class=\"text-muted\">Number of comments: {post.total_comments}</small></p>\r\n                    </Card.Text>\r\n\r\n                    <Link to={`/post/${post.slug}`}>\r\n                        <Card.Text as=\"div\" style= {{ color: \"white\" }}>\r\n                            <strong>Read More</strong>\r\n                        </Card.Text>\r\n                    </Link>\r\n\r\n                </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listMyPosts } from '../actions/blogActions'\r\nimport Posts from '../components/Posts'\r\n\r\n\r\n\r\nfunction MyBlogScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postmyList = useSelector(state => state.postmyList)\r\n    const { loading, error, Myposts } = postmyList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo ) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listMyPosts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Posts</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {Myposts.map(post => (\r\n                                <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Posts post={post} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyBlogScreen\r\n","import axios from 'axios'\r\nimport {\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    POST_CREATE_RESET,\r\n\r\n    POST_DETAILS_REQUEST,\r\n    POST_DETAILS_SUCCESS,\r\n    POST_DETAILS_FAIL,\r\n    POST_DETAILS_RESET,\r\n\r\n    POST_LIST_REQUEST,\r\n    POST_LIST_SUCCESS,\r\n    POST_LIST_FAIL,\r\n    POST_LIST_RESET,\r\n\r\n    POST_MYLIST_REQUEST,\r\n    POST_MYLIST_SUCCESS,\r\n    POST_MYLIST_FAIL,\r\n    POST_MYLIST_RESET,\r\n\r\n    POST_DELETE_REQUEST,\r\n    POST_DELETE_SUCCESS,\r\n    POST_DELETE_FAIL,\r\n} from '../constants/blogConstants'\r\n\r\nexport const createPost = (title,body,short,published) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/posts/create-new-post/`,\r\n            {'title':title,'body':body,'short_description':short,'is_published':published},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: POST_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyPosts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_MYLIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/posts/post-list/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: POST_MYLIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_MYLIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAllPosts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/posts/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: POST_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const PostDetails = (slug) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/posts/view/${slug}`)\r\n\r\n        dispatch({\r\n            type: POST_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listAllPosts } from '../actions/blogActions'\r\nimport Posts from '../components/Posts'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\n\r\nfunction BlogListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postallList = useSelector(state => state.postallList)\r\n    const { loading, error, Allposts } = postallList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo ) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listAllPosts())\r\n\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Posts</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {Allposts.map(post => (\r\n                            <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Posts post={post} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlogListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table, ModalTitle } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { createPost } from '../actions/blogActions'\r\nimport { POST_CREATE_RESET } from '../constants/blogConstants'\r\n\r\n\r\nfunction CreateBlogScreen({ history }) {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [short, setShort] = useState('')\r\n    const [published, setPublished] = useState(true)\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const postCreate = useSelector(state => state.postCreate)\r\n    const { error, loading, post } = postCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            dispatch({ type: POST_CREATE_RESET })\r\n            history.push('/my/blog')\r\n        }\r\n    }, [history, post])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createPost(title,body,short,published))\r\n        setMessage('')\r\n\r\n    }\r\n    return (\r\n            <Col md={20}>\r\n                <h2>Blog Oluştur</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' form-control-lg>\r\n                        <Form.Label>Başlık</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Başlık Ekle'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label>Blog</Form.Label>\r\n                        <textarea class=\"form-control\" id=\"form4Example3\" rows=\"4\" required type='name' placeholder='Blog Ekle ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Açıklama Ekle</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='name'\r\n                            placeholder='Açıklama Ekle'\r\n                            value={short}\r\n                            onChange={(e) => setShort(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Oluştur\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n    )\r\n}\r\n\r\nexport default CreateBlogScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport cssClass from \"./comments.css\";\r\nimport hr from './HR/hr.js'\r\n\r\nfunction Comments({ comments }) {\r\n    return (\r\n\r\n        <div className={cssClass.Comment}>\r\n            <hr />\r\n            <div className={cssClass.Detail}>\r\n                <strong>Name:</strong> {comments.name}\r\n            </div>\r\n            <div className={cssClass.Body}>\r\n                <strong>Comment:</strong> {comments.body}\r\n            </div>\r\n            <div className={cssClass.Detail}>\r\n                <strong>On:</strong>{\" \"}\r\n                {new Date(comments.published_on).toDateString()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { PostDetails } from '../actions/blogActions'\r\nimport cssClass from '../components/details.css'\r\nimport hr from '../components/HR/hr.js'\r\nimport { COMMENTS_CREATE_RESET } from '../constants/commentsConstants'\r\nimport { CommentList, createComment } from '../actions/commentsActions'\r\nimport Comments from '../components/comments'\r\nimport { POST_DETAILS_SUCCESS } from '../constants/blogConstants'\r\n\r\nfunction BlogDetailScreen({ match, history }) {\r\n    const [body, setBody] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postdetails = useSelector(state => state.postdetails)\r\n    const { loading, error, post } = postdetails\r\n\r\n    const postcomment = useSelector(state => state.postcomment)\r\n    const { error:error1, loading:loading1, success, comment } = postcomment\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if(success){\r\n            setBody(\"\")\r\n            dispatch({ type: COMMENTS_CREATE_RESET})\r\n        }\r\n        dispatch(PostDetails(match.params.slug))\r\n\r\n\r\n    }, [dispatch, match, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createComment(match.params.slug,userInfo.name,body,userInfo.email))\r\n        setMessage('')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n                {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div className={cssClass.PostBodyDiv}>\r\n                        <h1 className={cssClass.Title}>\r\n                            {post.title}\r\n                        </h1>\r\n\r\n                        <p className={cssClass.PublishedDate}>\r\n                            {new Date(\r\n                                post.published_on\r\n                            ).toDateString()}\r\n                        </p>\r\n                        <hr />\r\n                        <p className={cssClass.PostBody}>\r\n                            {post.body}\r\n                        </p>\r\n                        <hr />\r\n                        <div className={cssClass.PostInfo}>\r\n                            <p> - {post.author_full_name}</p>\r\n                        </div>\r\n                        <h1 className={cssClass.CommentHeading}>\r\n                            Comments: {post.total_comments}\r\n                        </h1>\r\n\r\n                        {post.comments_list && post.comments_list.map(comment => (\r\n                            <Col key={comment._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Comments comments={comment} />\r\n                            </Col>\r\n                        ))}\r\n\r\n                        <hr />\r\n                        <h1 className={cssClass.CommentHeading}>\r\n                            Add a comment\r\n                        </h1>\r\n                        <hr />\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\r\n                                <textarea class=\"form-control\" id=\"form4Example3\" rows=\"5\" required type='name' placeholder='Enter Comment ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\r\n                            </Form.Group>\r\n\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create\r\n                            </Button>\r\n\r\n                        </Form>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BlogDetailScreen\r\n","import axios from 'axios'\r\nimport {\r\n    COMMENTS_CREATE_REQUEST,\r\n    COMMENTS_CREATE_SUCCESS,\r\n    COMMENTS_CREATE_FAIL,\r\n    COMMENTS_CREATE_RESET,\r\n\r\n    COMMENTS_DETAILS_REQUEST,\r\n    COMMENTS_DETAILS_SUCCESS,\r\n    COMMENTS_DETAILS_FAIL,\r\n    COMMENTS_DETAILS_RESET,\r\n\r\n    COMMENTS_LIST_REQUEST,\r\n    COMMENTS_LIST_SUCCESS,\r\n    COMMENTS_LIST_FAIL,\r\n    COMMENTS_LIST_RESET,\r\n} from '../constants/commentsConstants'\r\n\r\n\r\nexport const createComment = (slug,name,body,email) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: COMMENTS_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/comments/create/${slug}/`,\r\n            {'name':name,'body':body,'email':email},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: COMMENTS_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMMENTS_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const CommentList = (slug) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: COMMENTS_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/comments/${slug}`)\r\n\r\n        dispatch({\r\n            type: COMMENTS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMMENTS_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\n\r\n\r\nfunction FanatikaScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state)\r\n    const { error, loading, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                        <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  left: 110,\r\n                  top: 320,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"Green\",\r\n                  }}\r\n                >\r\n                  Fanatika Nedir?\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Taraftarında Futbolun içinde\r\n                  <br />\r\n                  Olduğu Hem Ligi Takip Ederken\r\n                  <br />\r\n                  Hem Hediyeler Kazandığı Futbol Sitesidir\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Taraftaların\r\n                  <br />\r\n                  Hem takımlar - Hem Federasyon\r\n                  <br/>\r\n                  Hakkında Fikirlerini Tartışabildiği Bir Ortam\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  right: 110,\r\n                  top: 1300,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"Green\",\r\n                  }}\r\n                >\r\n                  Quiz\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Türkiye Futbol Ligi Hakkında Sorular\r\n                  <br />\r\n                  Hem O Haftanın Ligi Hakkında\r\n                  <br />\r\n                  Hem Desteklediğin Takım Hakkında Sorular\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Lig Hakkında 8\r\n                  <br />\r\n                  Takımın Hakkında 7 Soru\r\n                  <br/>\r\n                  Doğru Cevap Kadar Süreninde Önemi Var\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  left: 65,\r\n                  top: 2200,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"green\",\r\n                  }}\r\n                >\r\n                  Ödüller\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Ödüller Her Ay Başı Belli Olur\r\n                  <br />\r\n                  Her Takım İçin Ödüller Farklı Olabilir\r\n                  <br />\r\n                  Ödülleri Takım Sahipleri Belirler\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Her Takımın İlk 3 Taraftarı Hediye Kazanır\r\n                  <br />\r\n                  Quizde Kazandığın Puanlara Göre Sıralaman Belirlenir\r\n                  <br/>\r\n                  Futbol Bilgine Ve Hızına Güveniyorsan \r\n                  <br/>\r\n                  Bedava Hediyenin Tadını Çıkar\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  right: 20,\r\n                  top: 3100,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"green\",\r\n                  }}\r\n                >\r\n                  Blog - Chat\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Takımın Ve Lig Hakkında \r\n                  <br />\r\n                  Düşüncelerini Belirt, Federasyon Ne Hakkında\r\n                  <br />\r\n                   Daha İyi Olabilir, Yorumlarını Yaz\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Blog Kısmında Diğer Taraftarlar İle Ligi Tartış\r\n                  <br />\r\n                  Chat Kısmında Maçlar Hakkında Düşüncelerini Belirt\r\n                  <br/>\r\n                  Hem Ligi Takip Et, Hem Sosyalleş\r\n                </p>\r\n\r\n              </h2>\r\n\r\n\r\n              <img \r\n                        style={{position: \"absolute\",\r\n                        right: 100,\r\n                        top: 200,\r\n                        width: \"900px\",\r\n                        height: \"800px\",}}\r\n                        \r\n                        src=\"./logo.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n              <img \r\n                        style={{position: \"absolute\",\r\n                        left: 230,\r\n                        top: 1195,\r\n                        width: \"700px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./quiz.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                <img \r\n                        style={{position: \"absolute\",\r\n                        right: 160,\r\n                        top: 2100,\r\n                        width: \"800px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./asd.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                <img \r\n                        style={{position: \"absolute\",\r\n                        left: 220,\r\n                        top: 3000,\r\n                        width: \"800px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./comment.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FanatikaScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport MyProfileScreen from './screens/MyProfileScreen'\r\nimport MyBlogScreen from './screens/MyBlogScreen'\r\nimport BlogListScreen from './screens/BlogListScreen'\r\nimport CreateBlogScreen from './screens/CreateBlogScreen'\r\nimport BlogDetailScreen from './screens/BlogDetailScreen'\r\nimport FanatikaScreen from './screens/FanatikaScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/my/profile' component={MyProfileScreen} />\r\n          <Route path='/my/blog' component={MyBlogScreen} />\r\n          <Route path='/createblog' component={CreateBlogScreen} />\r\n          <Route path='/bloglist' component={BlogListScreen} />\r\n          <Route path='/post/:slug' component={BlogDetailScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/fanatika' component={FanatikaScreen} />\r\n\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}