{"version":3,"sources":["constants/userConstants.js","constants/profileConstants.js","store.js","reducers/userReducers.js","reducers/profileReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/MyProfileScreen.js","actions/profileActions.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_MYDETAILS_REQUEST","USER_MYDETAILS_SUCCESS","USER_MYDETAILS_FAIL","USER_MYDETAILS_RESET","USER_UPDATE_MYPROFILE_REQUEST","USER_UPDATE_MYPROFILE_SUCCESS","USER_UPDATE_MYPROFILE_FAIL","USER_UPDATE_MYPROFILE_RESET","USER_MYLIST_REQUEST","USER_MYLIST_SUCCESS","USER_MYLIST_FAIL","USER_MYLIST_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","usermyDetails","Myuser","usermyUpdateProfile","usermyList","Myusers","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","className","NavDropdown","title","name","Item","onClick","removeItem","Link","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Paginate","pages","page","keyword","split","Pagination","Array","keys","map","x","active","HomeScreen","history","productList","location","search","useEffect","position","left","FormContainer","xs","md","LoginScreen","useState","email","setEmail","password","setPassword","redirect","push","Form","onSubmit","e","preventDefault","post","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","team","setTeam","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","_id","put","updateUserProfile","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","color","UserEditScreen","match","userId","params","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","Number","updateUser","Check","label","checked","MyProfileScreen","bio","setBio","rating","setRating","birth_date","setBirth_date","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60c35a87.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const USER_MYDETAILS_REQUEST = 'USER_MYDETAILS_REQUEST'\nexport const USER_MYDETAILS_SUCCESS = 'USER_MYDETAILS_SUCCESS'\nexport const USER_MYDETAILS_FAIL = 'USER_MYDETAILS_FAIL'\nexport const USER_MYDETAILS_RESET = 'USER_MYDETAILS_RESET'\n\nexport const USER_UPDATE_MYPROFILE_REQUEST = 'USER_UPDATE_MYPROFILE_REQUEST'\nexport const USER_UPDATE_MYPROFILE_SUCCESS = 'USER_UPDATE_MYPROFILE_SUCCESS'\nexport const USER_UPDATE_MYPROFILE_FAIL = 'USER_UPDATE_MYPROFILE_FAIL'\nexport const USER_UPDATE_MYPROFILE_RESET = 'USER_UPDATE_MYPROFILE_RESET'\n\nexport const USER_MYLIST_REQUEST = 'USER_MYLIST_REQUEST'\nexport const USER_MYLIST_SUCCESS = 'USER_MYLIST_SUCCESS'\nexport const USER_MYLIST_FAIL = 'USER_MYLIST_FAIL'\nexport const USER_MYLIST_RESET = 'USER_MYLIST_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    userMyDetailsReducer,\n    userUpdateMyProfileReducer,\n    userMyListReducer,\n} from './reducers/profileReducers'\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    usermyDetails: userMyDetailsReducer,\n    usermyUpdateProfile: userUpdateMyProfileReducer,\n    usermyList: userMyListReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    USER_MYDETAILS_FAIL,\n    USER_MYDETAILS_SUCCESS,\n    USER_MYDETAILS_REQUEST,\n    USER_MYDETAILS_RESET,\n    USER_UPDATE_MYPROFILE_REQUEST,\n    USER_UPDATE_MYPROFILE_SUCCESS,\n    USER_UPDATE_MYPROFILE_FAIL,\n    USER_UPDATE_MYPROFILE_RESET,\n    USER_MYLIST_REQUEST,\n    USER_MYLIST_SUCCESS,\n    USER_MYLIST_FAIL,\n    USER_MYLIST_RESET,\n} from '../constants/profileConstants'\n\n\nexport const userMyDetailsReducer = (state = { Myuser: {} }, action) => {\n    switch (action.type) {\n        case USER_MYDETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_MYDETAILS_SUCCESS:\n            return { loading: false, Myuser: action.payload }\n\n        case USER_MYDETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_MYDETAILS_RESET:\n            return { Myuser: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateMyProfileReducer = (state = { Myuser: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_MYPROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_MYPROFILE_SUCCESS:\n            return { loading: false, success: true}\n\n        case USER_UPDATE_MYPROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_MYPROFILE_RESET:\n            return {Myuser:{}}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userMyListReducer = (state = { Myusers: [] }, action) => {\n    switch (action.type) {\n        case USER_MYLIST_REQUEST:\n            return { loading: true }\n\n        case USER_MYLIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_MYLIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_MYLIST_RESET:\n            return { Myusers: [] }\n\n        default:\n            return state\n    }\n}\n\n\n\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport {\n    USER_MYDETAILS_RESET,\n} from '../constants/profileConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    dispatch({ type: USER_MYDETAILS_RESET })\n}\n\n\nexport const register = (name, email,team, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'team': team, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                        <Nav className=\"ml-auto\">\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Account Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/my/profile'>\n                                        <NavDropdown.Item>My Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">© 2022 Fanatika,Inc. Her hakkı saklıdır</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1 style= {{position:'absolute', left:800}}>Futbolun Kalbinde Sen de Yer Al</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/profile'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [team, setTeam] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, team, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='team'>\n                    <Form.Label>Your Team</Form.Label>\n                    <Form.Control\n                        required\n                        type='team'\n                        placeholder='Enter team'\n                        value={team}\n                        onChange={(e) => setTeam(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\nfunction MyProfileScreen({ history }) {\n\n    const [bio, setBio] = useState('')\n    const [team, setTeam] = useState('')\n    const [rating, setRating] = useState('')\n    const [birth_date, setBirth_date] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n\n    const { error, loading, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\n    const {success: successUpdate  } = usermyUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!Myuser.team || !Myuser || successUpdate || userInfo._id !== Myuser.id) {\n            dispatch({ type: USER_UPDATE_MYPROFILE_RESET })\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            setTeam(Myuser.team)\n            setBio(Myuser.bio)\n            setRating(Myuser.rating)\n            setBirth_date(Myuser.birth_date)\n        }\n\n    }, [dispatch, history, userInfo, Myuser, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateMyUserProfile({\n            'id': Myuser.id,\n            'user':Myuser.user,\n            'team': team,\n            'bio': bio,\n            'birth_date': birth_date,\n            'rating': rating\n        }))\n        setMessage('')\n\n\n    }\n\n    return (\n        <Row>\n            <Col md={4}>\n                <h2>{userInfo.name} Detail Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='team'>\n                        <Form.Label>Your Team</Form.Label>\n                        <Form.Control\n                            required\n                            type='team'\n                            placeholder='Enter your team'\n                            value={team}\n                            onChange={(e) => setTeam(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='bio'>\n                        <Form.Label>Your Bio</Form.Label>\n                        <Form.Control\n                            required\n                            type='bio'\n                            placeholder='Enter bio'\n                            value={bio}\n                            onChange={(e) => setBio(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='rating'>\n                        <Form.Label>Your rating</Form.Label>\n                        <Form.Control\n                            required\n                            type='rating'\n                            placeholder='Your Ream'\n                            value={rating}\n                            onChange={(e) => setRating(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='birth_date'>\n                        <Form.Label>Your birth date</Form.Label>\n                        <Form.Control\n                            type='birth_date'\n                            placeholder='change your birth_date'\n                            value={birth_date}\n                            onChange={(e) => setBirth_date(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default MyProfileScreen\n","import axios from 'axios'\nimport {\n    USER_MYDETAILS_FAIL,\n    USER_MYDETAILS_SUCCESS,\n    USER_MYDETAILS_REQUEST,\n    USER_MYDETAILS_RESET,\n    USER_UPDATE_MYPROFILE_REQUEST,\n    USER_UPDATE_MYPROFILE_SUCCESS,\n    USER_UPDATE_MYPROFILE_FAIL,\n    USER_UPDATE_MYPROFILE_RESET,\n    USER_MYLIST_REQUEST,\n    USER_MYLIST_SUCCESS,\n    USER_MYLIST_FAIL,\n    USER_MYLIST_RESET,\n} from '../constants/profileConstants'\n\nexport const getMyUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_MYDETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/my/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_MYDETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateMyUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/my/profile/${user.id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport MyProfileScreen from './screens/MyProfileScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/my/profile' component={MyProfileScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}