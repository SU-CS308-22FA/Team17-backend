{"version":3,"sources":["constants/userConstants.js","store.js","reducers/userReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","className","NavDropdown","title","name","Item","onClick","removeItem","Link","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Paginate","pages","page","keyword","split","Pagination","Array","keys","map","x","active","HomeScreen","history","productList","location","search","useEffect","position","left","FormContainer","xs","md","LoginScreen","useState","email","setEmail","password","setPassword","redirect","push","Form","onSubmit","e","preventDefault","post","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","_id","put","updateUserProfile","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","color","UserEditScreen","match","userId","params","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","Number","updateUser","Check","label","checked","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9603a7c6.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                        <Nav className=\"ml-auto\">\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                    \n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">© 2022 Fanatika,Inc. Her hakkı saklıdır</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1 style= {{position:'absolute', left:800}}>Futbolun Kalbinde Sen de Yer Al</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/profile'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}