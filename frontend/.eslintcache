[{"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/index.js":"1","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/store.js":"2","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/App.js":"3","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reportWebVitals.js":"4","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/userReducers.js":"5","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/HomeScreen.js":"6","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Header.js":"7","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Footer.js":"8","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/LoginScreen.js":"9","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/ProfileScreen.js":"10","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/UserEditScreen.js":"11","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/UserListScreen.js":"12","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/RegisterScreen.js":"13","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Message.js":"14","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Paginate.js":"15","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/FormContainer.js":"16","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Loader.js":"17","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/userConstants.js":"18","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/userActions.js":"19","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/profileConstants.js":"20","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/MyProfileScreen.js":"21","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/profileActions.js":"22","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/profileReducers.js":"23","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/BlogListScreen.js":"24","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/CreateBlogScreen.js":"25","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/MyBlogScreen.js":"26","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/blogReducers.js":"27","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/blogConstants.js":"28","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/blogActions.js":"29","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Posts.js":"30"},{"size":593,"mtime":1667815821826,"results":"31","hashOfConfig":"32"},{"size":1496,"mtime":1668701866007,"results":"33","hashOfConfig":"32"},{"size":1566,"mtime":1668619642945,"results":"34","hashOfConfig":"32"},{"size":362,"mtime":1667815821827,"results":"35","hashOfConfig":"32"},{"size":3926,"mtime":1667815821827,"results":"36","hashOfConfig":"32"},{"size":1064,"mtime":1667815821828,"results":"37","hashOfConfig":"32"},{"size":3246,"mtime":1668621391265,"results":"38","hashOfConfig":"32"},{"size":378,"mtime":1667815821824,"results":"39","hashOfConfig":"32"},{"size":2556,"mtime":1668557146727,"results":"40","hashOfConfig":"32"},{"size":4514,"mtime":1668555372024,"results":"41","hashOfConfig":"32"},{"size":3912,"mtime":1667815821829,"results":"42","hashOfConfig":"32"},{"size":3510,"mtime":1667815821829,"results":"43","hashOfConfig":"32"},{"size":4414,"mtime":1668344402632,"results":"44","hashOfConfig":"32"},{"size":228,"mtime":1667815821825,"results":"45","hashOfConfig":"32"},{"size":859,"mtime":1667815821825,"results":"46","hashOfConfig":"32"},{"size":378,"mtime":1667815821824,"results":"47","hashOfConfig":"32"},{"size":458,"mtime":1667815821825,"results":"48","hashOfConfig":"32"},{"size":1478,"mtime":1667815821826,"results":"49","hashOfConfig":"32"},{"size":7399,"mtime":1668554220673,"results":"50","hashOfConfig":"32"},{"size":760,"mtime":1668361947497,"results":"51","hashOfConfig":"32"},{"size":4565,"mtime":1668591969696,"results":"52","hashOfConfig":"32"},{"size":2273,"mtime":1668552374099,"results":"53","hashOfConfig":"32"},{"size":1888,"mtime":1668552294846,"results":"54","hashOfConfig":"32"},{"size":1526,"mtime":1668714842795,"results":"55","hashOfConfig":"32"},{"size":3786,"mtime":1668700739093,"results":"56","hashOfConfig":"32"},{"size":1543,"mtime":1668705085172,"results":"57","hashOfConfig":"32"},{"size":1924,"mtime":1668701956668,"results":"58","hashOfConfig":"32"},{"size":1256,"mtime":1668680334792,"results":"59","hashOfConfig":"32"},{"size":3185,"mtime":1668701956669,"results":"60","hashOfConfig":"32"},{"size":1308,"mtime":1668713216387,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"hyhtc6",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/index.js",[],["132","133"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/store.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/App.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reportWebVitals.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/userReducers.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/HomeScreen.js",["134","135"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1 style= {{position:'absolute', left:800}}>Futbolun Kalbinde Sen de Yer Al</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Header.js",["136"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                        <Nav className=\"ml-auto\">\n\n                            {userInfo ? (\n                                <React.Fragment>\n                                    <LinkContainer to='/bloglist'>\n                                        <Navbar.Brand>Blogs</Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Account Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/my/profile'>\n                                        <NavDropdown.Item>My Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/my/blog'>\n                                        <NavDropdown.Item>My Blog Posts</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/createblog'>\n                                        <NavDropdown.Item>Create Blog</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n\n                                </React.Fragment>\n\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Footer.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/LoginScreen.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/ProfileScreen.js",["137","138","139"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/UserEditScreen.js",["140"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/UserListScreen.js",["141"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/RegisterScreen.js",["142"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [team, setTeam] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, team, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='team'>\n                    <Form.Label>Your Team</Form.Label>\n                    <Form.Control\n                        required\n                        type='team'\n                        placeholder='Enter team'\n                        value={team}\n                        onChange={(e) => setTeam(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Message.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Paginate.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/FormContainer.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Loader.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/userConstants.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/userActions.js",["143"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport {\n    USER_MYDETAILS_RESET,\n} from '../constants/profileConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    dispatch({ type: USER_MYDETAILS_RESET })\n}\n\n\nexport const register = (name, email,team, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'team': team, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/profileConstants.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/MyProfileScreen.js",["144","145","146"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\nfunction MyProfileScreen({ history }) {\n\n    const [bio, setBio] = useState('')\n    const [team, setTeam] = useState('')\n    const [rating, setRating] = useState('')\n    const [birth_date, setBirth_date] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n\n    const { error, loading, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\n    const {success: successUpdate  } = usermyUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!Myuser.team || !Myuser || successUpdate || userInfo._id !== Myuser.id) {\n            dispatch({ type: USER_UPDATE_MYPROFILE_RESET })\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            setTeam(Myuser.team)\n            setBio(Myuser.bio)\n            setRating(Myuser.rating)\n            setBirth_date(Myuser.birth_date)\n        }\n\n    }, [dispatch, history, userInfo, Myuser, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateMyUserProfile({\n            'id': Myuser.id,\n            'user':Myuser.user,\n            'team': team,\n            'bio': bio,\n            'birth_date': birth_date,\n            'rating': rating\n        }))\n        setMessage('')\n\n\n    }\n\n    return (\n        <Row>\n            <Col md={4}>\n                <h2>{userInfo.name} Detail Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='team'>\n                        <Form.Label>Your Team</Form.Label>\n                        <Form.Control\n                            required\n                            type='team'\n                            placeholder='Enter your team'\n                            value={team}\n                            onChange={(e) => setTeam(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='bio'>\n                        <Form.Label>Your Bio</Form.Label>\n                        <Form.Control\n                            required\n                            type='bio'\n                            placeholder='Enter bio'\n                            value={bio}\n                            onChange={(e) => setBio(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='rating'>\n                        <Form.Label>Your rating</Form.Label>\n                        <Form.Control\n                            required\n                            type='rating'\n                            placeholder='Your Ream'\n                            value={rating}\n                            onChange={(e) => setRating(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='birth_date'>\n                        <Form.Label>Your birth date</Form.Label>\n                        <Form.Control\n                            type='birth_date'\n                            placeholder='change your birth_date'\n                            value={birth_date}\n                            onChange={(e) => setBirth_date(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default MyProfileScreen\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/profileActions.js",["147","148","149","150","151","152"],"import axios from 'axios'\nimport {\n    USER_MYDETAILS_FAIL,\n    USER_MYDETAILS_SUCCESS,\n    USER_MYDETAILS_REQUEST,\n    USER_MYDETAILS_RESET,\n    USER_UPDATE_MYPROFILE_REQUEST,\n    USER_UPDATE_MYPROFILE_SUCCESS,\n    USER_UPDATE_MYPROFILE_FAIL,\n    USER_UPDATE_MYPROFILE_RESET,\n    USER_MYLIST_REQUEST,\n    USER_MYLIST_SUCCESS,\n    USER_MYLIST_FAIL,\n    USER_MYLIST_RESET,\n} from '../constants/profileConstants'\n\nexport const getMyUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_MYDETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/my/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_MYDETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateMyUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/my/profile/${user.id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/profileReducers.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/BlogListScreen.js",["153","154","155","156","157","158"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/CreateBlogScreen.js",["159","160","161","162","163","164","165","166","167","168"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/screens/MyBlogScreen.js",["169","170","171","172","173","174"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/reducers/blogReducers.js",["175","176","177","178","179","180","181"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/constants/blogConstants.js",[],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/actions/blogActions.js",["182","183","184","185","186","187","188","189","190","191"],"/Users/ardagoktas/team17-backend/Team17-backend/frontend/src/components/Posts.js",["192","193","194","195","196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"205","line":3,"column":15,"nodeType":"203","messageId":"204","endLine":3,"endColumn":18},{"ruleId":"201","severity":1,"message":"206","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":37},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"208","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"209","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"210","severity":1,"message":"211","line":43,"column":8,"nodeType":"212","endLine":43,"endColumn":46,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":35,"column":22,"nodeType":"216","messageId":"217","endLine":35,"endColumn":24},{"ruleId":"201","severity":1,"message":"218","line":21,"column":5,"nodeType":"203","messageId":"204","endLine":21,"endColumn":30},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"208","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"209","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"219","line":6,"column":5,"nodeType":"203","messageId":"204","endLine":6,"endColumn":25},{"ruleId":"201","severity":1,"message":"220","line":10,"column":5,"nodeType":"203","messageId":"204","endLine":10,"endColumn":32},{"ruleId":"201","severity":1,"message":"221","line":11,"column":5,"nodeType":"203","messageId":"204","endLine":11,"endColumn":24},{"ruleId":"201","severity":1,"message":"222","line":12,"column":5,"nodeType":"203","messageId":"204","endLine":12,"endColumn":24},{"ruleId":"201","severity":1,"message":"223","line":13,"column":5,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},{"ruleId":"201","severity":1,"message":"224","line":14,"column":5,"nodeType":"203","messageId":"204","endLine":14,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"225","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"226","line":3,"column":16,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"208","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"209","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"206","line":3,"column":24,"nodeType":"203","messageId":"204","endLine":3,"endColumn":27},{"ruleId":"201","severity":1,"message":"208","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"227","line":3,"column":41,"nodeType":"203","messageId":"204","endLine":3,"endColumn":51},{"ruleId":"201","severity":1,"message":"209","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"228","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":24},{"ruleId":"201","severity":1,"message":"229","line":8,"column":26,"nodeType":"203","messageId":"204","endLine":8,"endColumn":43},{"ruleId":"201","severity":1,"message":"218","line":9,"column":10,"nodeType":"203","messageId":"204","endLine":9,"endColumn":35},{"ruleId":"201","severity":1,"message":"230","line":29,"column":13,"nodeType":"203","messageId":"204","endLine":29,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":36,"column":8,"nodeType":"212","endLine":36,"endColumn":23,"suggestions":"231"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"225","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"226","line":3,"column":16,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"201","severity":1,"message":"208","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":39},{"ruleId":"201","severity":1,"message":"209","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"232","line":7,"column":5,"nodeType":"203","messageId":"204","endLine":7,"endColumn":25},{"ruleId":"201","severity":1,"message":"233","line":8,"column":5,"nodeType":"203","messageId":"204","endLine":8,"endColumn":25},{"ruleId":"201","severity":1,"message":"234","line":9,"column":5,"nodeType":"203","messageId":"204","endLine":9,"endColumn":22},{"ruleId":"201","severity":1,"message":"235","line":10,"column":5,"nodeType":"203","messageId":"204","endLine":10,"endColumn":23},{"ruleId":"201","severity":1,"message":"236","line":22,"column":5,"nodeType":"203","messageId":"204","endLine":22,"endColumn":24},{"ruleId":"201","severity":1,"message":"237","line":23,"column":5,"nodeType":"203","messageId":"204","endLine":23,"endColumn":24},{"ruleId":"201","severity":1,"message":"238","line":24,"column":5,"nodeType":"203","messageId":"204","endLine":24,"endColumn":21},{"ruleId":"201","severity":1,"message":"239","line":6,"column":5,"nodeType":"203","messageId":"204","endLine":6,"endColumn":22},{"ruleId":"201","severity":1,"message":"232","line":8,"column":5,"nodeType":"203","messageId":"204","endLine":8,"endColumn":25},{"ruleId":"201","severity":1,"message":"233","line":9,"column":5,"nodeType":"203","messageId":"204","endLine":9,"endColumn":25},{"ruleId":"201","severity":1,"message":"234","line":10,"column":5,"nodeType":"203","messageId":"204","endLine":10,"endColumn":22},{"ruleId":"201","severity":1,"message":"235","line":11,"column":5,"nodeType":"203","messageId":"204","endLine":11,"endColumn":23},{"ruleId":"201","severity":1,"message":"240","line":16,"column":5,"nodeType":"203","messageId":"204","endLine":16,"endColumn":20},{"ruleId":"201","severity":1,"message":"241","line":21,"column":5,"nodeType":"203","messageId":"204","endLine":21,"endColumn":22},{"ruleId":"201","severity":1,"message":"236","line":23,"column":5,"nodeType":"203","messageId":"204","endLine":23,"endColumn":24},{"ruleId":"201","severity":1,"message":"237","line":24,"column":5,"nodeType":"203","messageId":"204","endLine":24,"endColumn":24},{"ruleId":"201","severity":1,"message":"238","line":25,"column":5,"nodeType":"203","messageId":"204","endLine":25,"endColumn":21},{"ruleId":"201","severity":1,"message":"207","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"242","line":7,"column":11,"nodeType":"203","messageId":"204","endLine":7,"endColumn":23},{"ruleId":"201","severity":1,"message":"243","line":18,"column":11,"nodeType":"203","messageId":"204","endLine":18,"endColumn":18},{"ruleId":"201","severity":1,"message":"244","line":30,"column":11,"nodeType":"203","messageId":"204","endLine":30,"endColumn":26},{"ruleId":"201","severity":1,"message":"245","line":32,"column":11,"nodeType":"203","messageId":"204","endLine":32,"endColumn":24},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["248"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_MYDETAILS_RESET' is defined but never used.","'USER_UPDATE_MYPROFILE_RESET' is defined but never used.","'USER_MYLIST_REQUEST' is defined but never used.","'USER_MYLIST_SUCCESS' is defined but never used.","'USER_MYLIST_FAIL' is defined but never used.","'USER_MYLIST_RESET' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'ModalTitle' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'userInfo' is assigned a value but never used.",["249"],"'POST_DETAILS_REQUEST' is defined but never used.","'POST_DETAILS_SUCCESS' is defined but never used.","'POST_DETAILS_FAIL' is defined but never used.","'POST_DETAILS_RESET' is defined but never used.","'POST_DELETE_REQUEST' is defined but never used.","'POST_DELETE_SUCCESS' is defined but never used.","'POST_DELETE_FAIL' is defined but never used.","'POST_CREATE_RESET' is defined but never used.","'POST_LIST_RESET' is defined but never used.","'POST_MYLIST_RESET' is defined but never used.","'articleClass' is assigned a value but never used.","'h1Class' is assigned a value but never used.","'articleDivClass' is assigned a value but never used.","'articlePClass' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, history, post]",{"range":"256","text":"257"},[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1286,1301],"[dispatch, history, post]"]