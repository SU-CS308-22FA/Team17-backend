[{"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\index.js":"1","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\store.js":"2","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\App.js":"4","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\profileReducers.js":"5","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\commentsReducers.js":"6","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\blogReducers.js":"7","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\UserListScreen.js":"9","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\ProfileScreen.js":"11","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\MyProfileScreen.js":"12","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\RegisterScreen.js":"13","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\UserEditScreen.js":"14","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\LoginScreen.js":"15","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\CreateBlogScreen.js":"16","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\MyBlogScreen.js":"17","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\BlogListScreen.js":"18","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\BlogDetailScreen.js":"19","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Header.js":"20","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\FanatikaScreen.js":"21","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\GiftScreen.js":"22","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Hakkımızda.js":"23","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Sıksorulanlar.js":"24","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Leaderboard.js":"25","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\HR\\hr.js":"26","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\blogConstants.js":"27","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\commentsConstants.js":"28","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\userConstants.js":"29","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Message.js":"30","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\profileConstants.js":"31","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Paginate.js":"32","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Loader.js":"33","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\FormContainer.js":"34","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Posts.js":"35","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\comments.js":"36","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\userActions.js":"37","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\commentsActions.js":"38","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\profileActions.js":"39","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\blogActions.js":"40","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\HomeScreen.js":"41"},{"size":612,"mtime":1669117093926,"results":"42","hashOfConfig":"43"},{"size":1791,"mtime":1669117093935,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1669117093929,"results":"45","hashOfConfig":"43"},{"size":2309,"mtime":1669223330991,"results":"46","hashOfConfig":"43"},{"size":1966,"mtime":1669117093928,"results":"47","hashOfConfig":"43"},{"size":1423,"mtime":1669117093928,"results":"48","hashOfConfig":"43"},{"size":2457,"mtime":1669117093927,"results":"49","hashOfConfig":"43"},{"size":4100,"mtime":1669117093929,"results":"50","hashOfConfig":"43"},{"size":3600,"mtime":1669117093935,"results":"51","hashOfConfig":"43"},{"size":394,"mtime":1669117093917,"results":"52","hashOfConfig":"43"},{"size":4644,"mtime":1669117093934,"results":"53","hashOfConfig":"43"},{"size":4696,"mtime":1669117093933,"results":"54","hashOfConfig":"43"},{"size":4544,"mtime":1669117427882,"results":"55","hashOfConfig":"43"},{"size":4022,"mtime":1669117093934,"results":"56","hashOfConfig":"43"},{"size":2641,"mtime":1669117414192,"results":"57","hashOfConfig":"43"},{"size":3410,"mtime":1669119054288,"results":"58","hashOfConfig":"43"},{"size":1596,"mtime":1669117093933,"results":"59","hashOfConfig":"43"},{"size":1625,"mtime":1669117093931,"results":"60","hashOfConfig":"43"},{"size":4053,"mtime":1669223297333,"results":"61","hashOfConfig":"43"},{"size":4841,"mtime":1669223571861,"results":"62","hashOfConfig":"43"},{"size":8256,"mtime":1669223128959,"results":"63","hashOfConfig":"43"},{"size":1559,"mtime":1669223547940,"results":"64","hashOfConfig":"43"},{"size":4248,"mtime":1669229606659,"results":"65","hashOfConfig":"43"},{"size":8197,"mtime":1669222406167,"results":"66","hashOfConfig":"43"},{"size":1819,"mtime":1669222406167,"results":"67","hashOfConfig":"43"},{"size":138,"mtime":1669117093918,"results":"68","hashOfConfig":"43"},{"size":1288,"mtime":1669117093923,"results":"69","hashOfConfig":"43"},{"size":744,"mtime":1669117093924,"results":"70","hashOfConfig":"43"},{"size":1512,"mtime":1669117093925,"results":"71","hashOfConfig":"43"},{"size":240,"mtime":1669117093919,"results":"72","hashOfConfig":"43"},{"size":774,"mtime":1669117093925,"results":"73","hashOfConfig":"43"},{"size":887,"mtime":1669117093920,"results":"74","hashOfConfig":"43"},{"size":479,"mtime":1669117093919,"results":"75","hashOfConfig":"43"},{"size":394,"mtime":1669117093917,"results":"76","hashOfConfig":"43"},{"size":993,"mtime":1669117093920,"results":"77","hashOfConfig":"43"},{"size":730,"mtime":1669117093922,"results":"78","hashOfConfig":"43"},{"size":7731,"mtime":1669117093915,"results":"79","hashOfConfig":"43"},{"size":1959,"mtime":1669117093914,"results":"80","hashOfConfig":"43"},{"size":2369,"mtime":1669117093914,"results":"81","hashOfConfig":"43"},{"size":3875,"mtime":1669117093913,"results":"82","hashOfConfig":"43"},{"size":4586,"mtime":1669223241420,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1yh9w3z",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"86"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"86"},"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\index.js",[],["189","190"],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\store.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\App.js",["191"],"import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './components/HomeScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport MyProfileScreen from './screens/MyProfileScreen'\r\nimport MyBlogScreen from './screens/MyBlogScreen'\r\nimport BlogListScreen from './screens/BlogListScreen'\r\nimport CreateBlogScreen from './screens/CreateBlogScreen'\r\nimport BlogDetailScreen from './screens/BlogDetailScreen'\r\nimport FanatikaScreen from './screens/FanatikaScreen'\r\nimport GiftScreen from './screens/GiftScreen'\r\nimport Leaderboard from './screens/Leaderboard'\r\nimport Hakkımızda from './screens/Hakkımızda'\r\nimport Sıksorulanlar from './screens/Sıksorulanlar'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/my/profile' component={MyProfileScreen} />\r\n          <Route path='/my/blog' component={MyBlogScreen} />\r\n          <Route path='/createblog' component={CreateBlogScreen} />\r\n          <Route path='/bloglist' component={BlogListScreen} />\r\n          <Route path='/post/:slug' component={BlogDetailScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/fanatika' component={FanatikaScreen} />\r\n          <Route path='/leaderboard' component={Leaderboard}/>\r\n          <Route path='/gift' component={GiftScreen}/>\r\n          <Route path='/FAQ' component={Sıksorulanlar} />\r\n          <Route path='/about' component={Hakkımızda} />\r\n\r\n        </Container>\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\profileReducers.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\commentsReducers.js",["192","193","194","195"],"import {\r\n    COMMENTS_CREATE_REQUEST,\r\n    COMMENTS_CREATE_SUCCESS,\r\n    COMMENTS_CREATE_FAIL,\r\n    COMMENTS_CREATE_RESET,\r\n\r\n    COMMENTS_DETAILS_REQUEST,\r\n    COMMENTS_DETAILS_SUCCESS,\r\n    COMMENTS_DETAILS_FAIL,\r\n    COMMENTS_DETAILS_RESET,\r\n\r\n    COMMENTS_LIST_REQUEST,\r\n    COMMENTS_LIST_SUCCESS,\r\n    COMMENTS_LIST_FAIL,\r\n    COMMENTS_LIST_RESET,\r\n} from '../constants/commentsConstants'\r\n\r\n\r\nexport const commentCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case COMMENTS_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case COMMENTS_CREATE_SUCCESS:\r\n            return { loading: false, success: true, comment: action.payload }\r\n\r\n        case COMMENTS_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case COMMENTS_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const CommentAllList = (state = { commentsAll: [] }, action) => {\r\n    switch (action.type) {\r\n        case COMMENTS_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case COMMENTS_LIST_SUCCESS:\r\n            return { loading: false, commentsAll: action.payload }\r\n\r\n        case COMMENTS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case COMMENTS_LIST_RESET:\r\n            return { commentsAll: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\blogReducers.js",["196","197","198","199"],"import {\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    POST_CREATE_RESET,\r\n\r\n    POST_DETAILS_REQUEST,\r\n    POST_DETAILS_SUCCESS,\r\n    POST_DETAILS_FAIL,\r\n    POST_DETAILS_RESET,\r\n\r\n    POST_LIST_REQUEST,\r\n    POST_LIST_SUCCESS,\r\n    POST_LIST_FAIL,\r\n    POST_LIST_RESET,\r\n\r\n    POST_MYLIST_REQUEST,\r\n    POST_MYLIST_SUCCESS,\r\n    POST_MYLIST_FAIL,\r\n    POST_MYLIST_RESET,\r\n\r\n    POST_DELETE_REQUEST,\r\n    POST_DELETE_SUCCESS,\r\n    POST_DELETE_FAIL,\r\n} from '../constants/blogConstants'\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case POST_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_CREATE_SUCCESS:\r\n            return { loading: false, success: true, post: action.payload }\r\n\r\n        case POST_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postMyListReducer = (state = { Myposts: [] }, action) => {\r\n    switch (action.type) {\r\n        case POST_MYLIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_MYLIST_SUCCESS:\r\n            return { loading: false, Myposts: action.payload }\r\n\r\n        case POST_MYLIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_MYLIST_RESET:\r\n            return { Myposts: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const postAllListReducer = (state = { Allposts: [] }, action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case POST_LIST_SUCCESS:\r\n            return { loading: false, Allposts: action.payload }\r\n\r\n        case POST_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case POST_LIST_RESET:\r\n            return { Allposts: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const postDetailsReducer = (state = { post: { comments: [] } }, action) => {\r\n    switch (action.type) {\r\n        case POST_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case POST_DETAILS_SUCCESS:\r\n            return { loading: false, post: action.payload }\r\n\r\n        case POST_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\UserListScreen.js",["200"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\ProfileScreen.js",["201","202","203"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\MyProfileScreen.js",["204","205","206"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\r\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\r\nfunction MyProfileScreen({ history }) {\r\n\r\n    const [bio, setBio] = useState('')\r\n    const [team, setTeam] = useState('')\r\n    const [rating, setRating] = useState('')\r\n    const [birth_date, setBirth_date] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usermyDetails = useSelector(state => state.usermyDetails)\r\n\r\n    const { error, loading, Myuser } = usermyDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\r\n    const {success: successUpdate  } = usermyUpdateProfile\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!Myuser.team || !Myuser || successUpdate || userInfo._id !== Myuser.id) {\r\n            dispatch({ type: USER_UPDATE_MYPROFILE_RESET })\r\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\r\n        } else {\r\n            setTeam(Myuser.team)\r\n            setBio(Myuser.bio)\r\n            setRating(Myuser.rating)\r\n            setBirth_date(Myuser.birth_date)\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, Myuser, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateMyUserProfile({\r\n            'id': Myuser.id,\r\n            'user':Myuser.user,\r\n            'team': team,\r\n            'bio': bio,\r\n            'birth_date': birth_date,\r\n            'rating': rating\r\n        }))\r\n        setMessage('')\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n                <h2>{userInfo.name} Detail Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='team'>\r\n                        <Form.Label>Your Team</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='team'\r\n                            placeholder='Enter your team'\r\n                            value={team}\r\n                            onChange={(e) => setTeam(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='bio'>\r\n                        <Form.Label>Your Bio</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='bio'\r\n                            placeholder='Enter bio'\r\n                            value={bio}\r\n                            onChange={(e) => setBio(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='rating'>\r\n                        <Form.Label>Your rating</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='rating'\r\n                            placeholder='Your Ream'\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='birth_date'>\r\n                        <Form.Label>Your birth date</Form.Label>\r\n                        <Form.Control\r\n                            type='birth_date'\r\n                            placeholder='change your birth_date'\r\n                            value={birth_date}\r\n                            onChange={(e) => setBirth_date(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyProfileScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\RegisterScreen.js",["207"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [team, setTeam] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Şifre Aynı Değil')\r\n        } else {\r\n            dispatch(register(name, email, team, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Kayıt Ol</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>İsim</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='İsim Gir'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Adresi</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Email Gir'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='team'>\r\n                    <Form.Label>Takım</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='team'\r\n                        placeholder='Takımını Gir'\r\n                        value={team}\r\n                        onChange={(e) => setTeam(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Şifre</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Şifre Gir'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Şifre Onay</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Şifreni Tekrar Gir'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Kayıt Ol\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Zaten Hesabın Var Mı? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Giriş Yap\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\UserEditScreen.js",["208"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\CreateBlogScreen.js",["209","210","211","212","213","214","215","216","217","218","219"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table, ModalTitle } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { createPost } from '../actions/blogActions'\r\nimport { POST_CREATE_RESET } from '../constants/blogConstants'\r\n\r\n\r\nfunction CreateBlogScreen({ history }) {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [short, setShort] = useState('')\r\n    const [published, setPublished] = useState(true)\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const postCreate = useSelector(state => state.postCreate)\r\n    const { error, loading, post } = postCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            dispatch({ type: POST_CREATE_RESET })\r\n            history.push('/my/blog')\r\n        }\r\n    }, [history, post])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createPost(title,body,short,published))\r\n        setMessage('')\r\n\r\n    }\r\n    return (\r\n            <Col md={20}>\r\n                <h2>Blog Oluştur</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' form-control-lg>\r\n                        <Form.Label>Başlık</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Başlık Ekle'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\r\n                        <Form.Label>Blog</Form.Label>\r\n                        <textarea class=\"form-control\" id=\"form4Example3\" rows=\"4\" required type='name' placeholder='Blog Ekle ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Açıklama Ekle</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='name'\r\n                            placeholder='Açıklama Ekle'\r\n                            value={short}\r\n                            onChange={(e) => setShort(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Oluştur\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n    )\r\n}\r\n\r\nexport default CreateBlogScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\MyBlogScreen.js",["220","221","222","223","224","225"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listMyPosts } from '../actions/blogActions'\r\nimport Posts from '../components/Posts'\r\n\r\n\r\n\r\nfunction MyBlogScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postmyList = useSelector(state => state.postmyList)\r\n    const { loading, error, Myposts } = postmyList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo ) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listMyPosts())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Posts</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {Myposts.map(post => (\r\n                                <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Posts post={post} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyBlogScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\BlogListScreen.js",["226","227","228","229","230","231","232"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listAllPosts } from '../actions/blogActions'\r\nimport Posts from '../components/Posts'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\n\r\nfunction BlogListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postallList = useSelector(state => state.postallList)\r\n    const { loading, error, Allposts } = postallList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo ) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listAllPosts())\r\n\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Posts</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {Allposts.map(post => (\r\n                            <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Posts post={post} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlogListScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\BlogDetailScreen.js",["233","234","235","236","237","238","239","240","241","242","243","244"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { PostDetails } from '../actions/blogActions'\r\nimport cssClass from '../components/details.css'\r\nimport hr from '../components/HR/hr.js'\r\nimport { COMMENTS_CREATE_RESET } from '../constants/commentsConstants'\r\nimport { CommentList, createComment } from '../actions/commentsActions'\r\nimport Comments from '../components/comments'\r\nimport { POST_DETAILS_SUCCESS } from '../constants/blogConstants'\r\n\r\nfunction BlogDetailScreen({ match, history }) {\r\n    const [body, setBody] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const postdetails = useSelector(state => state.postdetails)\r\n    const { loading, error, post } = postdetails\r\n\r\n    const postcomment = useSelector(state => state.postcomment)\r\n    const { error:error1, loading:loading1, success, comment } = postcomment\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if(success){\r\n            setBody(\"\")\r\n            dispatch({ type: COMMENTS_CREATE_RESET})\r\n        }\r\n        dispatch(PostDetails(match.params.slug))\r\n\r\n\r\n    }, [dispatch, match, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createComment(match.params.slug,userInfo.name,body,userInfo.email))\r\n        setMessage('')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n                {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div className={cssClass.PostBodyDiv}>\r\n                        <h1 className={cssClass.Title}>\r\n                            {post.title}\r\n                        </h1>\r\n\r\n                        <p className={cssClass.PublishedDate}>\r\n                            {new Date(\r\n                                post.published_on\r\n                            ).toDateString()}\r\n                        </p>\r\n                        <hr />\r\n                        <p className={cssClass.PostBody}>\r\n                            {post.body}\r\n                        </p>\r\n                        <hr />\r\n                        <div className={cssClass.PostInfo}>\r\n                            <p> - {post.author_full_name}</p>\r\n                        </div>\r\n                        <h1 className={cssClass.CommentHeading}>\r\n                            Comments: {post.total_comments}\r\n                        </h1>\r\n\r\n                        {post.comments_list && post.comments_list.map(comment => (\r\n                            <Col key={comment._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Comments comments={comment} />\r\n                            </Col>\r\n                        ))}\r\n\r\n                        <hr />\r\n                        <h1 className={cssClass.CommentHeading}>\r\n                            Add a comment\r\n                        </h1>\r\n                        <hr />\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\r\n                                <textarea class=\"form-control\" id=\"form4Example3\" rows=\"5\" required type='name' placeholder='Enter Comment ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\r\n                            </Form.Group>\r\n\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create\r\n                            </Button>\r\n\r\n                        </Form>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BlogDetailScreen\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Header.js",["245"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            {userInfo ? (\r\n                                <React.Fragment>\r\n                                    <LinkContainer to='/bloglist'>\r\n                                        <Navbar.Brand>Blogs</Navbar.Brand>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Account Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/my/profile'>\r\n                                        <NavDropdown.Item>My Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/my/blog'>\r\n                                        <NavDropdown.Item>My Blog Posts</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/createblog'>\r\n                                        <NavDropdown.Item>Create Blog</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                                </React.Fragment>\r\n\r\n                            ) : (\r\n                                <Container>\r\n\r\n                                    \r\n                                    <LinkContainer to='/about'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Hakkımızda</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/gift'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Ödüller</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/leaderboard'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Puan Tablosu</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                <LinkContainer to='/fanatika'>\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Fanatika Nedir?</Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/FAQ'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>FAQ</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Giriş Yap</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/register'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Kayıt Ol</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    \r\n                                </Container>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\FanatikaScreen.js",["246","247","248","249","250","251","252","253","254"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\n\r\n\r\nfunction FanatikaScreen({ history }) {\r\n    return (\r\n    <>\r\n            <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  left: 110,\r\n                  top: 320,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"Green\",\r\n                  }}\r\n                >\r\n                  Fanatika Nedir?\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Taraftarında Futbolun içinde\r\n                  <br />\r\n                  Olduğu Hem Ligi Takip Ederken\r\n                  <br />\r\n                  Hem Hediyeler Kazandığı Futbol Sitesidir\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Taraftaların\r\n                  <br />\r\n                  Hem takımlar - Hem Federasyon\r\n                  <br/>\r\n                  Hakkında Fikirlerini Tartışabildiği Bir Ortam\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  right: 110,\r\n                  top: 1300,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"Green\",\r\n                  }}\r\n                >\r\n                  Quiz\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Türkiye Futbol Ligi Hakkında Sorular\r\n                  <br />\r\n                  Hem O Haftanın Ligi Hakkında\r\n                  <br />\r\n                  Hem Desteklediğin Takım Hakkında Sorular\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Lig Hakkında 8\r\n                  <br />\r\n                  Takımın Hakkında 7 Soru\r\n                  <br/>\r\n                  Doğru Cevap Kadar Süreninde Önemi Var\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  left: 65,\r\n                  top: 2200,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"green\",\r\n                  }}\r\n                >\r\n                  Ödüller\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Ödüller Her Ay Başı Belli Olur\r\n                  <br />\r\n                  Her Takım İçin Ödüller Farklı Olabilir\r\n                  <br />\r\n                  Ödülleri Takım Sahipleri Belirler\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Her Takımın İlk 3 Taraftarı Hediye Kazanır\r\n                  <br />\r\n                  Quizde Kazandığın Puanlara Göre Sıralaman Belirlenir\r\n                  <br/>\r\n                  Futbol Bilgine Ve Hızına Güveniyorsan \r\n                  <br/>\r\n                  Bedava Hediyenin Tadını Çıkar\r\n                </p>\r\n\r\n              </h2>\r\n\r\n              <h2\r\n                style={{\r\n                  fontWeight: \"regular\",\r\n                  fontSize: \"25px\",\r\n                  position: \"absolute\",\r\n                  right: 20,\r\n                  top: 3100,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"60px\",\r\n                    color: \"green\",\r\n                  }}\r\n                >\r\n                  Blog - Chat\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"44px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  <br />\r\n                  Takımın Ve Lig Hakkında \r\n                  <br />\r\n                  Düşüncelerini Belirt, Federasyon Ne Hakkında\r\n                  <br />\r\n                   Daha İyi Olabilir, Yorumlarını Yaz\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    fontWeight: \"regular\",\r\n                    fontSize: \"36px\",\r\n                    color: \"#434343\",\r\n                    wordSpacing: 3,\r\n                  }}\r\n                >\r\n                  Blog Kısmında Diğer Taraftarlar İle Ligi Tartış\r\n                  <br />\r\n                  Chat Kısmında Maçlar Hakkında Düşüncelerini Belirt\r\n                  <br/>\r\n                  Hem Ligi Takip Et, Hem Sosyalleş\r\n                </p>\r\n\r\n              </h2>\r\n\r\n\r\n              <img \r\n                        style={{position: \"absolute\",\r\n                        right: 100,\r\n                        top: 200,\r\n                        width: \"900px\",\r\n                        height: \"800px\",}}\r\n                        \r\n                        src=\"./static/logo.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n              <img \r\n                        style={{position: \"absolute\",\r\n                        left: 230,\r\n                        top: 1195,\r\n                        width: \"700px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./static/quiz.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                <img \r\n                        style={{position: \"absolute\",\r\n                        right: 160,\r\n                        top: 2100,\r\n                        width: \"800px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./static/asd.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                <img \r\n                        style={{position: \"absolute\",\r\n                        left: 220,\r\n                        top: 3000,\r\n                        width: \"800px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./static/comment.png\" class=\"img-thumbnail\" alt=\"...\"></img></>\r\n    )\r\n}\r\n\r\nexport default FanatikaScreen","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\GiftScreen.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Hakkımızda.js",["255","256","257","258","259","260","261"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\n\r\n\r\nfunction Hakkımızda({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state)\r\n    const { error, loading, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            <h2 style= {{position:'absolute', left:1100, top:180}}><a href=\"#\" class=\"text-danger\">BİZ KİMİZ?</a></h2>\r\n\r\n            <p style= {{position:'absolute', left:1090, top:230}}>2022 - 2023 Güz Dönemi</p>\r\n            <p style= {{position:'absolute', left:1100, top:250}}>CS 308 Öğrencileriyiz.</p>\r\n\r\n            <h4 style= {{position:'absolute', left:1050, top:340}}><a href=\"#\" class=\"text-info\">Takım ÜYELERİMİZ</a></h4>\r\n\r\n            <p style= {{position:'absolute', left:1130, top:380}}> Arda Göktaş</p>\r\n            <p style= {{position:'absolute', left:1100, top:400}}> Melike Sena Özgen</p>\r\n            <p style= {{position:'absolute', left:1080, top:420}}> Mustafa Sergen Haysal</p>\r\n            <p style= {{position:'absolute', left:1140, top:440}}> Ufuk Atay</p>\r\n            \r\n\r\n\r\n            \r\n            <img  style= {{position:'absolute', left:1050, top:520}} src=\"./static/TFF_logo.png\" class=\"img-fluid\" alt=\"...\"></img>\r\n          \r\n\r\n        \r\n\r\n           \r\n            <h5 style= {{position:'absolute', left:850, top:880}} class=\"font-weight-bold\"> <a href=\"#\" class=\"text-warning\"> Vİzyonumuz</a></h5>\r\n            <h5 style= {{position:'absolute', left:1410, top:880}} class=\"font-weight-bold\"> <a href=\"#\" class=\"text-warning\">Mİsyonumuz</a></h5>\r\n\r\n            <div style= {{position:'absolute', top:930}} class=\"container text-center\">\r\n                    \r\n                   \r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                        Taraftarlar İçin \r\n                        </div>\r\n                        <div class=\"col\">\r\n                        Kullanıcı Dostu Ve Eğlenceli Ürünümüzle \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                        Quiz Sistemi İle Birlikte\r\n                        </div>\r\n                        <div class=\"col\">\r\n                        Taraftarların Futbolu Daha Sıkı\r\n                        </div>\r\n                        \r\n                    </div>   \r\n\r\n                    <div class=\"row \">\r\n                        <div class=\"col\">\r\n                        Futobol Sitesi Hizmeti Veren\r\n                        </div>\r\n                        <div class=\"col\">\r\n                         Takip Etmesini Sağlamak Bunu Yaparken \r\n                        </div>\r\n                        \r\n                    </div>   \r\n                    <div class=\"row \">\r\n                        <div class=\"col\">\r\n                        Siteler İçerisinde\r\n                        </div>\r\n                        <div class=\"col\">\r\n                        Kullanıcılarımızı Eğlendirmek Ve Aynı \r\n                        </div>\r\n                        \r\n                    </div>   \r\n\r\n                    <div class=\"row \">\r\n                        <div class=\"col\">\r\n                        1 Numara Olmak!\r\n                        </div>\r\n                        <div class=\"col\">\r\n                        Zamanda Ödüller Kazandırmaktır.\r\n                        </div>\r\n                        \r\n                    </div>   \r\n\r\n\r\n            </div>\r\n                        \r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Hakkımızda","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Sıksorulanlar.js",["262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\n\r\n\r\nfunction Sıksorulanlar({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state)\r\n    const { error, loading, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n    },[dispatch, keyword])\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div id=\"accordion\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingOne\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                Fanatika Hesabı Nasıl Oluştururum?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n\r\n            <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\" >\r\n            <div class=\"card-body\">\r\n                Fanatika hesabını ana sayfada yer alan Kayıt Ol kısmından kullanıcı bilgilerin ve takım bilgilerinle yapabilirsin. Aramıza katılmana çok sevindik!\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"card-header\" id=\"headingOne\" >\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\r\n                Fanatika Hesabımla Neler Yapabilirim?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n\r\n            <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\" >\r\n            <div class=\"card-body\" >\r\n                Fanatika hesabınla maçları canlı olarak takip edebilir, maç esnasında taraftarlarla konuşabilir, haftalık quizlere katılarak ödüller kazanabilirsin.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingTwo\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Fanatika Takım Bilgilerimi Nasıl Değiştiririm?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseTwo\" class=\"collapse show\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Takım bilgilerini kişisel profil sayfasından değiştirebilir ve diğer takımlar için tasarladığımız arayüzleri inceleyebilirsin.  \r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Kullanıcı Olarak Bilgilerim Güvenli Saklanıyor Mu?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Kullanıcı bilgilerin Fanatika altyapısıyla güvenle saklanmaktadır. Kullandığımız yöntemler sayesinde dışarıdan yapılacak cyber saldırılara karşı güvenlikli bir databesimiz bulunmaktadır. \r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Diğer Kullanıcılarla Nasıl Etkileşime Geçebilirim?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Fanatika da bulunan Blog üzerinden yorumlarını paylaşabilir ve diğer kullanıcıların yorumlarını görebilirsin. Aynı zamanda kullanıcılarımız için oluşturduğumuz live chatbox dan maç esnasında yorumlar yapabilir ve maçları yayındayken yorumlayabilirsin.\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Ödül Kazanırsam Ödülüm Bana Nasıl Ulaşacak?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Ödül kazandığın taktirde sana bir tebrik maili göndereceğiz ve bu mailde adres bilgilerini girmeni isteyeceğiz. Seçeceğin anlaşmalı firmalarımızdan kargonun teslimat sürecini takip edebilirsin.  \r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Takım Bilgilerim Neden gerekli?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Fanatika tuttuğun takıma özgü kişiselleştirilmiş profil sayfaları sunar. Daha iyi bir kullanıcı deneyimi ve kişiselleştirilmiş tasarımlarımızı görmeniz için takım bilgilerinizle giriş yapmanizi tavsiye ederiz.\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Fanatika Gündeminden Nasıl Haberdar Olurum?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Fanatika sadece bir websitesi olmaktan öte sürekli futbol gündemiyle iç içe kalmanızı da hedefler. Bu amacımız doğrultusunda üyelik oluştururken bülten haberleri almak istiyorum seçeneğini seçerek günlük mail alabilir, futbolu yakından takipte kalabilirsiniz.\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-header\" id=\"headingThree\">\r\n            <h5 class=\"mb-0\">\r\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                Fanatika Hesabimi Nasıl Kapatabilirim?\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\r\n            <div class=\"card-body\">\r\n                Aramızdan ayrılmana çok üzüldük! Fanatika hesabını kullanıcı profilinden hesabımı sil kısmından kapatabilirsin. Kendimizi geliştirmemiz için site hakkında yorumunu bizlerle paylaşabilirsin. \r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Sıksorulanlar","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\screens\\Leaderboard.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\HR\\hr.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\blogConstants.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\commentsConstants.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Message.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\constants\\profileConstants.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\Posts.js",[],"C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\comments.js",["272","273"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport cssClass from \"./comments.css\";\r\nimport hr from './HR/hr.js'\r\n\r\nfunction Comments({ comments }) {\r\n    return (\r\n\r\n        <div className={cssClass.Comment}>\r\n            <hr />\r\n            <div className={cssClass.Detail}>\r\n                <strong>Name:</strong> {comments.name}\r\n            </div>\r\n            <div className={cssClass.Body}>\r\n                <strong>Comment:</strong> {comments.body}\r\n            </div>\r\n            <div className={cssClass.Detail}>\r\n                <strong>On:</strong>{\" \"}\r\n                {new Date(comments.published_on).toDateString()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\userActions.js",["274"],"import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport {\r\n    USER_MYDETAILS_RESET,\r\n} from '../constants/profileConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: USER_MYDETAILS_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email,team, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'team': team, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\commentsActions.js",["275","276","277","278","279","280"],"import axios from 'axios'\r\nimport {\r\n    COMMENTS_CREATE_REQUEST,\r\n    COMMENTS_CREATE_SUCCESS,\r\n    COMMENTS_CREATE_FAIL,\r\n    COMMENTS_CREATE_RESET,\r\n\r\n    COMMENTS_DETAILS_REQUEST,\r\n    COMMENTS_DETAILS_SUCCESS,\r\n    COMMENTS_DETAILS_FAIL,\r\n    COMMENTS_DETAILS_RESET,\r\n\r\n    COMMENTS_LIST_REQUEST,\r\n    COMMENTS_LIST_SUCCESS,\r\n    COMMENTS_LIST_FAIL,\r\n    COMMENTS_LIST_RESET,\r\n} from '../constants/commentsConstants'\r\n\r\n\r\nexport const createComment = (slug,name,body,email) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: COMMENTS_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/comments/create/${slug}/`,\r\n            {'name':name,'body':body,'email':email},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: COMMENTS_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMMENTS_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const CommentList = (slug) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: COMMENTS_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/comments/${slug}`)\r\n\r\n        dispatch({\r\n            type: COMMENTS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMMENTS_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\profileActions.js",["281","282","283","284","285","286"],"import axios from 'axios'\r\nimport {\r\n    USER_MYDETAILS_FAIL,\r\n    USER_MYDETAILS_SUCCESS,\r\n    USER_MYDETAILS_REQUEST,\r\n    USER_MYDETAILS_RESET,\r\n    USER_UPDATE_MYPROFILE_REQUEST,\r\n    USER_UPDATE_MYPROFILE_SUCCESS,\r\n    USER_UPDATE_MYPROFILE_FAIL,\r\n    USER_UPDATE_MYPROFILE_RESET,\r\n    USER_MYLIST_REQUEST,\r\n    USER_MYLIST_SUCCESS,\r\n    USER_MYLIST_FAIL,\r\n    USER_MYLIST_RESET,\r\n} from '../constants/profileConstants'\r\n\r\nexport const getMyUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_MYDETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/my/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_MYDETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_MYDETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateMyUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/my/profile/${user.id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_MYDETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_MYPROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\actions\\blogActions.js",["287","288","289","290","291","292","293"],"import axios from 'axios'\r\nimport {\r\n    POST_CREATE_REQUEST,\r\n    POST_CREATE_SUCCESS,\r\n    POST_CREATE_FAIL,\r\n    POST_CREATE_RESET,\r\n\r\n    POST_DETAILS_REQUEST,\r\n    POST_DETAILS_SUCCESS,\r\n    POST_DETAILS_FAIL,\r\n    POST_DETAILS_RESET,\r\n\r\n    POST_LIST_REQUEST,\r\n    POST_LIST_SUCCESS,\r\n    POST_LIST_FAIL,\r\n    POST_LIST_RESET,\r\n\r\n    POST_MYLIST_REQUEST,\r\n    POST_MYLIST_SUCCESS,\r\n    POST_MYLIST_FAIL,\r\n    POST_MYLIST_RESET,\r\n\r\n    POST_DELETE_REQUEST,\r\n    POST_DELETE_SUCCESS,\r\n    POST_DELETE_FAIL,\r\n} from '../constants/blogConstants'\r\n\r\nexport const createPost = (title,body,short,published) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/posts/create-new-post/`,\r\n            {'title':title,'body':body,'short_description':short,'is_published':published},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: POST_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyPosts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_MYLIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/posts/post-list/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: POST_MYLIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_MYLIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAllPosts = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/posts/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: POST_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const PostDetails = (slug) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: POST_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/posts/view/${slug}`)\r\n\r\n        dispatch({\r\n            type: POST_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\serge\\OneDrive\\Belgeler\\GitHub\\Team17-backend\\frontend\\src\\components\\HomeScreen.js",["294","295","296"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport Paginate from './Paginate'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state)\r\n    const { error, loading, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <h2\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: 40,\r\n                            color: \"#434343\",\r\n                            top: 500,\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"35px\",\r\n                            fontFamily: \"Verdana\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 1,\r\n                        }}\r\n                        >\r\n                        Hem Takımını Destekle, Hem Ödülleri Kap\r\n                        <br /> \r\n                        Futbolu Takip Ederken, Eğlen\r\n                        </h2>\r\n                        \r\n                        <Link to=\"/fanatika\">\r\n                        <button style={{position: \"absolute\",\r\n                        right: 450,\r\n                        top: 700,\r\n                        width: \"250px\",\r\n                        height: \"65px\",\r\n                        color: \"white\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"15px\",\r\n                        backgroundColor: \"black\",\r\n                        borderColor: \"red\",}}\r\n                        type=\"button\" class=\"btn btn-info\">Öğrenmeye Başla</button>\r\n                        </Link>\r\n\r\n\r\n                        <Link to=\"/leaderboard\">\r\n                        <button style={{position: \"absolute\",\r\n                        right: 1000,\r\n                        top: 1950,\r\n                        width: \"250px\",\r\n                        height: \"65px\",\r\n                        color: \"white\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"15px\",\r\n                        backgroundColor: \"black\",\r\n                        borderColor: \"red\",}}\r\n                        type=\"button\" class=\"btn btn-info\">GÖSTER</button>\r\n                        </Link>\r\n\r\n                        <h2\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: 550,\r\n                            color: \"#434343\",\r\n                            top: 1800,\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"35px\",\r\n                            fontFamily: \"Verdana\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 1,\r\n                        }}\r\n                        >\r\n                        Bu Ay Olan Ödüllerİ\r\n                        <br /> \r\n                        Sıralamanın Nasıl Olduğunu Merak Ediyorsan\r\n                        </h2>\r\n                        \r\n                        \r\n                        \r\n\r\n                        <img \r\n                        style={{position: \"absolute\",\r\n                        left: 500,\r\n                        top: 1200,\r\n                        width: \"1350px\",\r\n                        height: \"500px\",}}\r\n                        \r\n                        src=\"./static/71179.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                        <img \r\n                        style={{position: \"absolute\",\r\n                        left: 250,\r\n                        top: 250,\r\n                        width: \"1000px\",\r\n                        height: \"700px\",}}\r\n                        \r\n                        src=\"./static/bacground.png\" class=\"img-thumbnail\" alt=\"...\"></img>\r\n                        \r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomeScreen",{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":14},{"ruleId":"301","severity":1,"message":"305","line":7,"column":5,"nodeType":"303","messageId":"304","endLine":7,"endColumn":29},{"ruleId":"301","severity":1,"message":"306","line":8,"column":5,"nodeType":"303","messageId":"304","endLine":8,"endColumn":29},{"ruleId":"301","severity":1,"message":"307","line":9,"column":5,"nodeType":"303","messageId":"304","endLine":9,"endColumn":26},{"ruleId":"301","severity":1,"message":"308","line":10,"column":5,"nodeType":"303","messageId":"304","endLine":10,"endColumn":27},{"ruleId":"301","severity":1,"message":"309","line":10,"column":5,"nodeType":"303","messageId":"304","endLine":10,"endColumn":23},{"ruleId":"301","severity":1,"message":"310","line":22,"column":5,"nodeType":"303","messageId":"304","endLine":22,"endColumn":24},{"ruleId":"301","severity":1,"message":"311","line":23,"column":5,"nodeType":"303","messageId":"304","endLine":23,"endColumn":24},{"ruleId":"301","severity":1,"message":"312","line":24,"column":5,"nodeType":"303","messageId":"304","endLine":24,"endColumn":21},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"315","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":39},{"ruleId":"301","severity":1,"message":"316","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":23},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"315","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":39},{"ruleId":"301","severity":1,"message":"316","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":35,"column":22,"nodeType":"319","messageId":"320","endLine":35,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":43,"column":8,"nodeType":"323","endLine":43,"endColumn":46,"suggestions":"324"},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"325","line":3,"column":24,"nodeType":"303","messageId":"304","endLine":3,"endColumn":27},{"ruleId":"301","severity":1,"message":"315","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":39},{"ruleId":"301","severity":1,"message":"326","line":3,"column":41,"nodeType":"303","messageId":"304","endLine":3,"endColumn":51},{"ruleId":"301","severity":1,"message":"316","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":23},{"ruleId":"301","severity":1,"message":"327","line":8,"column":10,"nodeType":"303","messageId":"304","endLine":8,"endColumn":24},{"ruleId":"301","severity":1,"message":"328","line":8,"column":26,"nodeType":"303","messageId":"304","endLine":8,"endColumn":43},{"ruleId":"301","severity":1,"message":"329","line":9,"column":10,"nodeType":"303","messageId":"304","endLine":9,"endColumn":35},{"ruleId":"301","severity":1,"message":"330","line":19,"column":23,"nodeType":"303","messageId":"304","endLine":19,"endColumn":35},{"ruleId":"301","severity":1,"message":"331","line":29,"column":13,"nodeType":"303","messageId":"304","endLine":29,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":36,"column":8,"nodeType":"323","endLine":36,"endColumn":23,"suggestions":"332"},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"333","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":14},{"ruleId":"301","severity":1,"message":"334","line":3,"column":16,"nodeType":"303","messageId":"304","endLine":3,"endColumn":22},{"ruleId":"301","severity":1,"message":"315","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":39},{"ruleId":"301","severity":1,"message":"316","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":23},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"333","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":14},{"ruleId":"301","severity":1,"message":"334","line":3,"column":16,"nodeType":"303","messageId":"304","endLine":3,"endColumn":22},{"ruleId":"301","severity":1,"message":"315","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":39},{"ruleId":"301","severity":1,"message":"316","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":23},{"ruleId":"301","severity":1,"message":"335","line":10,"column":10,"nodeType":"303","messageId":"304","endLine":10,"endColumn":18},{"ruleId":"301","severity":1,"message":"314","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":14},{"ruleId":"301","severity":1,"message":"325","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":13},{"ruleId":"301","severity":1,"message":"336","line":4,"column":20,"nodeType":"303","messageId":"304","endLine":4,"endColumn":25},{"ruleId":"301","severity":1,"message":"337","line":4,"column":27,"nodeType":"303","messageId":"304","endLine":4,"endColumn":36},{"ruleId":"301","severity":1,"message":"338","line":4,"column":46,"nodeType":"303","messageId":"304","endLine":4,"endColumn":50},{"ruleId":"301","severity":1,"message":"339","line":9,"column":8,"nodeType":"303","messageId":"304","endLine":9,"endColumn":10},{"ruleId":"301","severity":1,"message":"340","line":11,"column":10,"nodeType":"303","messageId":"304","endLine":11,"endColumn":21},{"ruleId":"301","severity":1,"message":"341","line":13,"column":10,"nodeType":"303","messageId":"304","endLine":13,"endColumn":30},{"ruleId":"301","severity":1,"message":"342","line":24,"column":19,"nodeType":"303","messageId":"304","endLine":24,"endColumn":25},{"ruleId":"301","severity":1,"message":"343","line":24,"column":35,"nodeType":"303","messageId":"304","endLine":24,"endColumn":43},{"ruleId":"301","severity":1,"message":"344","line":24,"column":54,"nodeType":"303","messageId":"304","endLine":24,"endColumn":61},{"ruleId":"301","severity":1,"message":"345","line":29,"column":12,"nodeType":"303","messageId":"304","endLine":29,"endColumn":19},{"ruleId":"301","severity":1,"message":"325","line":3,"column":34,"nodeType":"303","messageId":"304","endLine":3,"endColumn":37},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"346","line":1,"column":27,"nodeType":"303","messageId":"304","endLine":1,"endColumn":36},{"ruleId":"301","severity":1,"message":"347","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":21},{"ruleId":"301","severity":1,"message":"348","line":2,"column":23,"nodeType":"303","messageId":"304","endLine":2,"endColumn":34},{"ruleId":"301","severity":1,"message":"325","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":13},{"ruleId":"301","severity":1,"message":"349","line":3,"column":15,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},{"ruleId":"301","severity":1,"message":"350","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":14},{"ruleId":"301","severity":1,"message":"351","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":15},{"ruleId":"301","severity":1,"message":"352","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":16},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"325","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":13},{"ruleId":"301","severity":1,"message":"349","line":3,"column":15,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},{"ruleId":"353","severity":1,"message":"354","line":23,"column":68,"nodeType":"355","endLine":23,"endColumn":100},{"ruleId":"353","severity":1,"message":"354","line":28,"column":68,"nodeType":"355","endLine":28,"endColumn":98},{"ruleId":"353","severity":1,"message":"354","line":44,"column":93,"nodeType":"355","endLine":44,"endColumn":126},{"ruleId":"353","severity":1,"message":"354","line":45,"column":94,"nodeType":"355","endLine":45,"endColumn":127},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"325","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":13},{"ruleId":"301","severity":1,"message":"349","line":3,"column":15,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},{"ruleId":"301","severity":1,"message":"350","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":14},{"ruleId":"301","severity":1,"message":"351","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":15},{"ruleId":"301","severity":1,"message":"352","line":6,"column":8,"nodeType":"303","messageId":"304","endLine":6,"endColumn":16},{"ruleId":"301","severity":1,"message":"356","line":13,"column":13,"nodeType":"303","messageId":"304","endLine":13,"endColumn":18},{"ruleId":"301","severity":1,"message":"357","line":13,"column":20,"nodeType":"303","messageId":"304","endLine":13,"endColumn":27},{"ruleId":"301","severity":1,"message":"358","line":13,"column":29,"nodeType":"303","messageId":"304","endLine":13,"endColumn":33},{"ruleId":"301","severity":1,"message":"359","line":13,"column":35,"nodeType":"303","messageId":"304","endLine":13,"endColumn":40},{"ruleId":"301","severity":1,"message":"314","line":2,"column":10,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"339","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":10},{"ruleId":"301","severity":1,"message":"329","line":21,"column":5,"nodeType":"303","messageId":"304","endLine":21,"endColumn":30},{"ruleId":"301","severity":1,"message":"360","line":6,"column":5,"nodeType":"303","messageId":"304","endLine":6,"endColumn":26},{"ruleId":"301","severity":1,"message":"305","line":8,"column":5,"nodeType":"303","messageId":"304","endLine":8,"endColumn":29},{"ruleId":"301","severity":1,"message":"306","line":9,"column":5,"nodeType":"303","messageId":"304","endLine":9,"endColumn":29},{"ruleId":"301","severity":1,"message":"307","line":10,"column":5,"nodeType":"303","messageId":"304","endLine":10,"endColumn":26},{"ruleId":"301","severity":1,"message":"308","line":11,"column":5,"nodeType":"303","messageId":"304","endLine":11,"endColumn":27},{"ruleId":"301","severity":1,"message":"361","line":16,"column":5,"nodeType":"303","messageId":"304","endLine":16,"endColumn":24},{"ruleId":"301","severity":1,"message":"362","line":6,"column":5,"nodeType":"303","messageId":"304","endLine":6,"endColumn":25},{"ruleId":"301","severity":1,"message":"363","line":10,"column":5,"nodeType":"303","messageId":"304","endLine":10,"endColumn":32},{"ruleId":"301","severity":1,"message":"364","line":11,"column":5,"nodeType":"303","messageId":"304","endLine":11,"endColumn":24},{"ruleId":"301","severity":1,"message":"365","line":12,"column":5,"nodeType":"303","messageId":"304","endLine":12,"endColumn":24},{"ruleId":"301","severity":1,"message":"366","line":13,"column":5,"nodeType":"303","messageId":"304","endLine":13,"endColumn":21},{"ruleId":"301","severity":1,"message":"367","line":14,"column":5,"nodeType":"303","messageId":"304","endLine":14,"endColumn":22},{"ruleId":"301","severity":1,"message":"368","line":6,"column":5,"nodeType":"303","messageId":"304","endLine":6,"endColumn":22},{"ruleId":"301","severity":1,"message":"309","line":11,"column":5,"nodeType":"303","messageId":"304","endLine":11,"endColumn":23},{"ruleId":"301","severity":1,"message":"369","line":16,"column":5,"nodeType":"303","messageId":"304","endLine":16,"endColumn":20},{"ruleId":"301","severity":1,"message":"370","line":21,"column":5,"nodeType":"303","messageId":"304","endLine":21,"endColumn":22},{"ruleId":"301","severity":1,"message":"310","line":23,"column":5,"nodeType":"303","messageId":"304","endLine":23,"endColumn":24},{"ruleId":"301","severity":1,"message":"311","line":24,"column":5,"nodeType":"303","messageId":"304","endLine":24,"endColumn":24},{"ruleId":"301","severity":1,"message":"312","line":25,"column":5,"nodeType":"303","messageId":"304","endLine":25,"endColumn":21},{"ruleId":"301","severity":1,"message":"313","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"325","line":3,"column":10,"nodeType":"303","messageId":"304","endLine":3,"endColumn":13},{"ruleId":"301","severity":1,"message":"349","line":3,"column":15,"nodeType":"303","messageId":"304","endLine":3,"endColumn":18},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'COMMENTS_DETAILS_REQUEST' is defined but never used.","'COMMENTS_DETAILS_SUCCESS' is defined but never used.","'COMMENTS_DETAILS_FAIL' is defined but never used.","'COMMENTS_DETAILS_RESET' is defined but never used.","'POST_DETAILS_RESET' is defined but never used.","'POST_DELETE_REQUEST' is defined but never used.","'POST_DELETE_SUCCESS' is defined but never used.","'POST_DELETE_FAIL' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["373"],"'Row' is defined but never used.","'ModalTitle' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'setPublished' is assigned a value but never used.","'userInfo' is assigned a value but never used.",["374"],"'Form' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'hr' is defined but never used.","'CommentList' is defined but never used.","'POST_DETAILS_SUCCESS' is defined but never used.","'error1' is assigned a value but never used.","'loading1' is assigned a value but never used.","'comment' is assigned a value but never used.","'message' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Col' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'Paginate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'page' is assigned a value but never used.","'pages' is assigned a value but never used.","'COMMENTS_CREATE_RESET' is defined but never used.","'COMMENTS_LIST_RESET' is defined but never used.","'USER_MYDETAILS_RESET' is defined but never used.","'USER_UPDATE_MYPROFILE_RESET' is defined but never used.","'USER_MYLIST_REQUEST' is defined but never used.","'USER_MYLIST_SUCCESS' is defined but never used.","'USER_MYLIST_FAIL' is defined but never used.","'USER_MYLIST_RESET' is defined but never used.","'POST_CREATE_RESET' is defined but never used.","'POST_LIST_RESET' is defined but never used.","'POST_MYLIST_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"379","text":"380"},"Update the dependencies array to be: [dispatch, history, post]",{"range":"381","text":"382"},[1474,1512],"[user, userId, successUpdate, history, dispatch]",[1321,1336],"[dispatch, history, post]"]