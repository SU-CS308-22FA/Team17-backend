[{"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/index.js":"1","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/store.js":"2","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/App.js":"3","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reportWebVitals.js":"4","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/quizReducers.js":"5","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/commentsReducers.js":"6","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/blogReducers.js":"7","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/profileReducers.js":"8","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/userReducers.js":"9","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/LoginScreen.js":"10","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Header.js":"11","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/MyProfileScreen.js":"12","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/UserEditScreen.js":"13","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/RegisterScreen.js":"14","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/UserListScreen.js":"15","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/CreateBlogScreen.js":"16","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/BlogListScreen.js":"17","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/BlogDetailScreen.js":"18","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/FanatikaScreen.js":"19","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/MyBlogScreen.js":"20","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/GiftScreen.js":"21","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Hakkımızda.js":"22","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/CategoryList.js":"23","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AddCategory.js":"24","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/HomeScreen.js":"25","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Sıksorulanlar.js":"26","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizAddScreen.js":"27","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AnswerList.js":"28","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizCategory.js":"29","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizAttemptScreen.js":"30","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/PrizeWinner.js":"31","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Footer.js":"32","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AdminPrizeAdd.js":"33","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ResultPage.js":"34","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ProfileScreen.js":"35","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Leaderboard.js":"36","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Loader.js":"37","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Message.js":"38","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/FormContainer.js":"39","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/comments.js":"40","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/blogConstants.js":"41","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/commentsConstants.js":"42","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/userConstants.js":"43","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/quizConstants.js":"44","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/profileConstants.js":"45","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/profileActions.js":"46","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/quizActions.js":"47","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/blogActions.js":"48","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/userActions.js":"49","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/answers.js":"50","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/HR/hr.js":"51","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/utils/getLetter.js":"52","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Paginate.js":"53","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Posts.js":"54","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/commentsActions.js":"55","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/PlayerRatings.js":"56","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/TeamStatistics.js":"57","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/galatasarayReducers.js":"58","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/galatasarayConstants.js":"59","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/galatasarayActions.js":"60","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/fenerbahceReducers.js":"61","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/fenerbahceActions.js":"62","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/fenerbahceConstants.js":"63","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AddPlayer.js":"64","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/playerReducers.js":"65","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/playerConstants.js":"66","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/playerActions.js":"67","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AllPlayer.js":"68","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ScorePlayer.js":"69","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/generalReducers.js":"70","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/generalConstants.js":"71","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/generalActions.js":"72","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/prizeReducers.js":"73","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/prizeConstants.js":"74","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/prizeActions.js":"75","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ProfilePage.js":"76"},{"size":593,"mtime":1672593376458,"results":"77","hashOfConfig":"78"},{"size":3190,"mtime":1672762429761,"results":"79","hashOfConfig":"78"},{"size":4033,"mtime":1672780301781,"results":"80","hashOfConfig":"78"},{"size":362,"mtime":1672593376459,"results":"81","hashOfConfig":"78"},{"size":5265,"mtime":1672593376459,"results":"82","hashOfConfig":"78"},{"size":1368,"mtime":1672593376458,"results":"83","hashOfConfig":"78"},{"size":2358,"mtime":1672593376458,"results":"84","hashOfConfig":"78"},{"size":1888,"mtime":1672593376459,"results":"85","hashOfConfig":"78"},{"size":3926,"mtime":1672593376459,"results":"86","hashOfConfig":"78"},{"size":2566,"mtime":1672780335855,"results":"87","hashOfConfig":"78"},{"size":6981,"mtime":1672778526259,"results":"88","hashOfConfig":"78"},{"size":4565,"mtime":1672593376462,"results":"89","hashOfConfig":"78"},{"size":3912,"mtime":1672593376465,"results":"90","hashOfConfig":"78"},{"size":4415,"mtime":1672593376464,"results":"91","hashOfConfig":"78"},{"size":3510,"mtime":1672593376466,"results":"92","hashOfConfig":"78"},{"size":3318,"mtime":1672593376461,"results":"93","hashOfConfig":"78"},{"size":1571,"mtime":1672593376461,"results":"94","hashOfConfig":"78"},{"size":3938,"mtime":1672593376460,"results":"95","hashOfConfig":"78"},{"size":8002,"mtime":1672593376461,"results":"96","hashOfConfig":"78"},{"size":1543,"mtime":1672593376462,"results":"97","hashOfConfig":"78"},{"size":5078,"mtime":1672768491368,"results":"98","hashOfConfig":"78"},{"size":4134,"mtime":1672593376461,"results":"99","hashOfConfig":"78"},{"size":3358,"mtime":1672593376461,"results":"100","hashOfConfig":"78"},{"size":2146,"mtime":1672593376460,"results":"101","hashOfConfig":"78"},{"size":4179,"mtime":1672778526278,"results":"102","hashOfConfig":"78"},{"size":8030,"mtime":1672593376465,"results":"103","hashOfConfig":"78"},{"size":4805,"mtime":1672593376464,"results":"104","hashOfConfig":"78"},{"size":5092,"mtime":1672593376460,"results":"105","hashOfConfig":"78"},{"size":2805,"mtime":1672593376464,"results":"106","hashOfConfig":"78"},{"size":6578,"mtime":1672593376464,"results":"107","hashOfConfig":"78"},{"size":5629,"mtime":1672768208340,"results":"108","hashOfConfig":"78"},{"size":378,"mtime":1672593376453,"results":"109","hashOfConfig":"78"},{"size":4024,"mtime":1672768395893,"results":"110","hashOfConfig":"78"},{"size":3599,"mtime":1672593376465,"results":"111","hashOfConfig":"78"},{"size":4514,"mtime":1672593376463,"results":"112","hashOfConfig":"78"},{"size":1762,"mtime":1672593376462,"results":"113","hashOfConfig":"78"},{"size":458,"mtime":1672593376454,"results":"114","hashOfConfig":"78"},{"size":228,"mtime":1672593376455,"results":"115","hashOfConfig":"78"},{"size":378,"mtime":1672593376453,"results":"116","hashOfConfig":"78"},{"size":705,"mtime":1672593376456,"results":"117","hashOfConfig":"78"},{"size":1256,"mtime":1672593376457,"results":"118","hashOfConfig":"78"},{"size":729,"mtime":1672593376457,"results":"119","hashOfConfig":"78"},{"size":1478,"mtime":1672593376457,"results":"120","hashOfConfig":"78"},{"size":2230,"mtime":1672593376457,"results":"121","hashOfConfig":"78"},{"size":760,"mtime":1672593376457,"results":"122","hashOfConfig":"78"},{"size":2273,"mtime":1672593376452,"results":"123","hashOfConfig":"78"},{"size":9077,"mtime":1672593376452,"results":"124","hashOfConfig":"78"},{"size":3713,"mtime":1672593376451,"results":"125","hashOfConfig":"78"},{"size":7399,"mtime":1672593376452,"results":"126","hashOfConfig":"78"},{"size":383,"mtime":1672593376456,"results":"127","hashOfConfig":"78"},{"size":131,"mtime":1672593376454,"results":"128","hashOfConfig":"78"},{"size":390,"mtime":1672593376466,"results":"129","hashOfConfig":"78"},{"size":859,"mtime":1672593376455,"results":"130","hashOfConfig":"78"},{"size":962,"mtime":1672593376455,"results":"131","hashOfConfig":"78"},{"size":1882,"mtime":1672593376451,"results":"132","hashOfConfig":"78"},{"size":4505,"mtime":1672746973734,"results":"133","hashOfConfig":"78"},{"size":9897,"mtime":1672747116579,"results":"134","hashOfConfig":"78"},{"size":1341,"mtime":1672746814188,"results":"135","hashOfConfig":"78"},{"size":561,"mtime":1672593376457,"results":"136","hashOfConfig":"78"},{"size":1566,"mtime":1672593376451,"results":"137","hashOfConfig":"78"},{"size":1340,"mtime":1672596859884,"results":"138","hashOfConfig":"78"},{"size":1565,"mtime":1672596859885,"results":"139","hashOfConfig":"78"},{"size":557,"mtime":1672595685593,"results":"140","hashOfConfig":"78"},{"size":2741,"mtime":1672779069168,"results":"141","hashOfConfig":"78"},{"size":1793,"mtime":1672682745769,"results":"142","hashOfConfig":"78"},{"size":688,"mtime":1672681767487,"results":"143","hashOfConfig":"78"},{"size":3076,"mtime":1672684453772,"results":"144","hashOfConfig":"78"},{"size":2229,"mtime":1672685135890,"results":"145","hashOfConfig":"78"},{"size":4409,"mtime":1672688917387,"results":"146","hashOfConfig":"78"},{"size":624,"mtime":1672738432771,"results":"147","hashOfConfig":"78"},{"size":218,"mtime":1672738432774,"results":"148","hashOfConfig":"78"},{"size":753,"mtime":1672738755452,"results":"149","hashOfConfig":"78"},{"size":1187,"mtime":1672762429738,"results":"150","hashOfConfig":"78"},{"size":437,"mtime":1672762506493,"results":"151","hashOfConfig":"78"},{"size":1803,"mtime":1672768208358,"results":"152","hashOfConfig":"78"},{"size":7462,"mtime":1672780917401,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"5is5cj",{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"156"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"156"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"156"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"156"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"156"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"156"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"156"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"156"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"156"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"156"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"156"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"156"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"156"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"156"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"156"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"156"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"156"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"156"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"156"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"156"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"156"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"156"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"156"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"156"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"156"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"156"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"156"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/index.js",[],["351","352"],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/store.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/App.js",["353"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './components/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport MyProfileScreen from './screens/MyProfileScreen'\nimport MyBlogScreen from './screens/MyBlogScreen'\nimport BlogListScreen from './screens/BlogListScreen'\nimport CreateBlogScreen from './screens/CreateBlogScreen'\nimport BlogDetailScreen from './screens/BlogDetailScreen'\nimport FanatikaScreen from './screens/FanatikaScreen'\nimport GiftScreen from './screens/GiftScreen'\nimport Leaderboard from './screens/Leaderboard'\nimport Hakkımızda from './screens/Hakkımızda'\nimport Sıksorulanlar from './screens/Sıksorulanlar'\nimport AddCategory from './screens/AddCategory'\nimport CategoryListScreen from './screens/CategoryList'\nimport QuizAddScreen from './screens/QuizAddScreen'\nimport AnswerList from './screens/AnswerList'\nimport QuizCategory from './screens/QuizCategory'\nimport QuizAttemptScreen from './screens/QuizAttemptScreen'\nimport ResultPage from './screens/ResultPage'\nimport AdminPrizeAdd from './screens/AdminPrizeAdd'\nimport PrizeWinner from './screens/PrizeWinner'\nimport PlayerRatings from './screens/PlayerRatings'\nimport TeamStatistics from './screens/TeamStatistics'\nimport AddPlayer from './screens/AddPlayer'\nimport AllPlayer from './screens/AllPlayer'\nimport ScorePlayer from './screens/ScorePlayer'\nimport ProfilePage from './screens/ProfilePage'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/playerratings' component={PlayerRatings} />\n          <Route path='/teamstatistics' component={TeamStatistics} />\n          <Route path='/my/profile' component={MyProfileScreen} />\n          <Route path='/my/blog' component={MyBlogScreen} />\n          <Route path='/createblog' component={CreateBlogScreen} />\n          <Route path='/scoreplayer' component={ScorePlayer} />\n          <Route path='/bloglist' component={BlogListScreen} />\n          <Route path='/playerlist' component={AllPlayer} />\n          <Route path='/categorylist' component={CategoryListScreen} />\n          <Route path='/quizlist' component={QuizCategory} />\n          <Route path='/resultpage/:id/:point/:arr' component={ResultPage} />\n          <Route path='/attemptquiz/:id' component={QuizAttemptScreen} />\n          <Route path='/post/:slug' component={BlogDetailScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/addCategory' component={AddCategory} />\n          <Route path='/admin/addPlayer' component={AddPlayer} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/answer/list/:id/edit' component={AnswerList} />\n          <Route path='/category/list/:id/edit' component={QuizAddScreen} />\n          <Route path='/fanatika' component={FanatikaScreen} />\n          <Route path='/leaderboard' component={Leaderboard}/>\n          <Route path='/gift' component={GiftScreen}/>\n          <Route path='/FAQ' component={Sıksorulanlar} />\n          <Route path='/about' component={Hakkımızda} />\n          <Route path='/adminPrizeAdd' component={AdminPrizeAdd} />\n          <Route path='/PrizeWinner' component={PrizeWinner} />\n          <Route path='/profilepage' component={ProfilePage} />\n\n        </Container>\n      </main>\n      {/* <Footer /> */}\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reportWebVitals.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/quizReducers.js",["354","355"],"\nimport {\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_CREATE_RESET,\n    CATEGORY_LIST_CREATE_REQUEST,\n    CATEGORY_LIST_CREATE_SUCCESS,\n    CATEGORY_LIST_CREATE_FAIL,\n    CATEGORY_LIST_CREATE_RESET,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n    QUESTION_LIST_CREATE_REQUEST,\n    QUESTION_LIST_CREATE_SUCCESS,\n    QUESTION_LIST_CREATE_FAIL,\n    QUESTION_LIST_CREATE_RESET,\n    QUESTION_DELETE_REQUEST,\n    QUESTION_DELETE_SUCCESS,\n    QUESTION_DELETE_FAIL,\n    QUESTION_CREATE_REQUEST,\n    QUESTION_CREATE_SUCCESS,\n    QUESTION_CREATE_FAIL,\n    QUESTION_CREATE_RESET,\n\n    ANSWER_DELETE_REQUEST,\n    ANSWER_DELETE_SUCCESS,\n    ANSWER_DELETE_FAIL,\n    ANSWER_DELETE_RESET,\n\n    ANSWER_DETAIL_REQUEST,\n    ANSWER_DETAIL_SUCCESS,\n    ANSWER_DETAIL_FAIL,\n    ANSWER_DETAIL_RESET,\n\n    ANSWER_CREATE_REQUEST,\n    ANSWER_CREATE_SUCCESS,\n    ANSWER_CREATE_FAIL,\n    ANSWER_CREATE_RESET,\n\n    QUESTION_DELETE_RESET,\n} from '../constants/quizConstants'\n\nexport const CategoryCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CATEGORY_CREATE_REQUEST:\n            return { loading: true }\n\n        case CATEGORY_CREATE_SUCCESS:\n            return { loading: false, success: true, category: action.payload }\n\n        case CATEGORY_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case CATEGORY_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const categoryListReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n        case CATEGORY_LIST_CREATE_REQUEST:\n            return { loading: true }\n\n        case CATEGORY_LIST_CREATE_SUCCESS:\n            return { loading: false, categories: action.payload }\n\n        case CATEGORY_LIST_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case CATEGORY_LIST_CREATE_RESET:\n            return { categories: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const categoryDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CATEGORY_DELETE_REQUEST:\n            return { loading: true }\n\n        case CATEGORY_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case CATEGORY_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const categoryDetailsReducer = (state = { questions: [] }, action) => {\n    switch (action.type) {\n        case QUESTION_LIST_CREATE_REQUEST:\n            return { ...state, loading: true }\n\n        case QUESTION_LIST_CREATE_SUCCESS:\n            return { loading: false, questions: action.payload }\n\n        case QUESTION_LIST_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case QUESTION_LIST_CREATE_RESET:\n            return { questions: [] }\n\n\n        default:\n            return state\n    }\n}\n\nexport const questionDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case QUESTION_DELETE_REQUEST:\n            return { loading: true }\n\n        case QUESTION_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case QUESTION_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const PromptCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case QUESTION_CREATE_REQUEST:\n            return { loading: true }\n\n        case QUESTION_CREATE_SUCCESS:\n            return { loading: false, success: true, question: action.payload }\n\n        case QUESTION_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case QUESTION_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const AnswerListReducer = (state = { answers: [] }, action) => {\n    switch (action.type) {\n        case ANSWER_DETAIL_REQUEST:\n            return { loading: true }\n\n        case ANSWER_DETAIL_SUCCESS:\n            return { loading: false, answers: action.payload }\n\n        case ANSWER_DETAIL_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ANSWER_DETAIL_RESET:\n            return { answers: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const answerDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ANSWER_DELETE_REQUEST:\n            return { loading: true }\n\n        case ANSWER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case ANSWER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const answerCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ANSWER_CREATE_REQUEST:\n            return { loading: true }\n\n        case ANSWER_CREATE_SUCCESS:\n            return { loading: false, success: true, answerss: action.payload }\n\n        case ANSWER_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ANSWER_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/commentsReducers.js",["356","357","358","359"],"import {\n    COMMENTS_CREATE_REQUEST,\n    COMMENTS_CREATE_SUCCESS,\n    COMMENTS_CREATE_FAIL,\n    COMMENTS_CREATE_RESET,\n\n    COMMENTS_DETAILS_REQUEST,\n    COMMENTS_DETAILS_SUCCESS,\n    COMMENTS_DETAILS_FAIL,\n    COMMENTS_DETAILS_RESET,\n\n    COMMENTS_LIST_REQUEST,\n    COMMENTS_LIST_SUCCESS,\n    COMMENTS_LIST_FAIL,\n    COMMENTS_LIST_RESET,\n} from '../constants/commentsConstants'\n\n\nexport const commentCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case COMMENTS_CREATE_REQUEST:\n            return { loading: true }\n\n        case COMMENTS_CREATE_SUCCESS:\n            return { loading: false, success: true, comment: action.payload }\n\n        case COMMENTS_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case COMMENTS_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const CommentAllList = (state = { commentsAll: [] }, action) => {\n    switch (action.type) {\n        case COMMENTS_LIST_REQUEST:\n            return { loading: true }\n\n        case COMMENTS_LIST_SUCCESS:\n            return { loading: false, commentsAll: action.payload }\n\n        case COMMENTS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case COMMENTS_LIST_RESET:\n            return { commentsAll: [] }\n\n        default:\n            return state\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/blogReducers.js",["360","361","362","363"],"import {\n    POST_CREATE_REQUEST,\n    POST_CREATE_SUCCESS,\n    POST_CREATE_FAIL,\n    POST_CREATE_RESET,\n\n    POST_DETAILS_REQUEST,\n    POST_DETAILS_SUCCESS,\n    POST_DETAILS_FAIL,\n    POST_DETAILS_RESET,\n\n    POST_LIST_REQUEST,\n    POST_LIST_SUCCESS,\n    POST_LIST_FAIL,\n    POST_LIST_RESET,\n\n    POST_MYLIST_REQUEST,\n    POST_MYLIST_SUCCESS,\n    POST_MYLIST_FAIL,\n    POST_MYLIST_RESET,\n\n    POST_DELETE_REQUEST,\n    POST_DELETE_SUCCESS,\n    POST_DELETE_FAIL,\n} from '../constants/blogConstants'\n\nexport const postCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case POST_CREATE_REQUEST:\n            return { loading: true }\n\n        case POST_CREATE_SUCCESS:\n            return { loading: false, success: true, post: action.payload }\n\n        case POST_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case POST_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const postMyListReducer = (state = { Myposts: [] }, action) => {\n    switch (action.type) {\n        case POST_MYLIST_REQUEST:\n            return { loading: true }\n\n        case POST_MYLIST_SUCCESS:\n            return { loading: false, Myposts: action.payload }\n\n        case POST_MYLIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case POST_MYLIST_RESET:\n            return { Myposts: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const postAllListReducer = (state = { Allposts: [] }, action) => {\n    switch (action.type) {\n        case POST_LIST_REQUEST:\n            return { loading: true }\n\n        case POST_LIST_SUCCESS:\n            return { loading: false, Allposts: action.payload }\n\n        case POST_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case POST_LIST_RESET:\n            return { Allposts: [] }\n\n        default:\n            return state\n    }\n}\n\nexport const postDetailsReducer = (state = { post: { comments: [] } }, action) => {\n    switch (action.type) {\n        case POST_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case POST_DETAILS_SUCCESS:\n            return { loading: false, post: action.payload }\n\n        case POST_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/profileReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/userReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/LoginScreen.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Header.js",["364"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Fanatika</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n\n                        <Nav className=\"ml-auto\">\n\n                            {userInfo ? (\n                                <React.Fragment>\n                                    <LinkContainer to='/playerlist'>\n                                        <Navbar.Brand>Player Scores </Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/playerratings'>\n                                        <Navbar.Brand>Player Ratings</Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/teamstatistics'>\n                                        <Navbar.Brand>Team Statistics</Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/quizlist'>\n                                        <Navbar.Brand>Quizzes</Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/bloglist'>\n                                        <Navbar.Brand>Blogs</Navbar.Brand>\n                                    </LinkContainer>\n\n                                    <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Account Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/my/profile'>\n                                        <NavDropdown.Item>My Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/my/blog'>\n                                        <NavDropdown.Item>My Blog Posts</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/createblog'>\n                                        <NavDropdown.Item>Create Blog</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/scoreplayer'>\n                                        <NavDropdown.Item>Score Player</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n\n                                </React.Fragment>\n\n                            ) : (\n                                <Container>\n\n\n                                    <LinkContainer to='/about'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Hakkımızda</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/gift'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Ödüller</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/leaderboard'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Puan Tablosu</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/fanatika'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Fanatika Nedir?</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/FAQ'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>FAQ</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/PrizeWinner'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Ödül Kazananar</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Giriş Yap</Nav.Link>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/register'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Kayıt Ol</Nav.Link>\n                                    </LinkContainer>\n\n\n                                </Container>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <React.Fragment>\n                                    <NavDropdown title='Admin' id='adminmenue'>\n                                        <LinkContainer to='/admin/userlist'>\n                                            <NavDropdown.Item>Users</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer to='/admin/addCategory'>\n                                            <NavDropdown.Item>Add Category</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer id='addPlayer' to='/admin/addPlayer'>\n                                            <NavDropdown.Item>Add Player</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer to='/adminPrizeAdd'>\n                                            <NavDropdown.Item>Prize Add</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                    </NavDropdown>\n\n                                    <LinkContainer to='/categorylist'>\n                                        <Navbar.Brand>Categories</Navbar.Brand>\n                                    </LinkContainer>\n\n\n                                </React.Fragment>\n\n                            )}\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/MyProfileScreen.js",["365","366","367"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\nfunction MyProfileScreen({ history }) {\n\n    const [bio, setBio] = useState('')\n    const [team, setTeam] = useState('')\n    const [rating, setRating] = useState('')\n    const [birth_date, setBirth_date] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n\n    const { error, loading, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\n    const {success: successUpdate  } = usermyUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!Myuser.team || !Myuser || successUpdate || userInfo._id !== Myuser.id) {\n            dispatch({ type: USER_UPDATE_MYPROFILE_RESET })\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            setTeam(Myuser.team)\n            setBio(Myuser.bio)\n            setRating(Myuser.rating)\n            setBirth_date(Myuser.birth_date)\n        }\n\n    }, [dispatch, history, userInfo, Myuser, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateMyUserProfile({\n            'id': Myuser.id,\n            'user':Myuser.user,\n            'team': team,\n            'bio': bio,\n            'birth_date': birth_date,\n            'rating': rating\n        }))\n        setMessage('')\n\n\n    }\n\n    return (\n        <Row>\n            <Col md={4}>\n                <h2>{userInfo.name} Detail Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='team'>\n                        <Form.Label>Your Team</Form.Label>\n                        <Form.Control\n                            required\n                            type='team'\n                            placeholder='Enter your team'\n                            value={team}\n                            onChange={(e) => setTeam(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='bio'>\n                        <Form.Label>Your Bio</Form.Label>\n                        <Form.Control\n                            required\n                            type='bio'\n                            placeholder='Enter bio'\n                            value={bio}\n                            onChange={(e) => setBio(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='rating'>\n                        <Form.Label>Your rating</Form.Label>\n                        <Form.Control\n                            required\n                            type='rating'\n                            placeholder='Your Ream'\n                            value={rating}\n                            onChange={(e) => setRating(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='birth_date'>\n                        <Form.Label>Your birth date</Form.Label>\n                        <Form.Control\n                            type='birth_date'\n                            placeholder='change your birth_date'\n                            value={birth_date}\n                            onChange={(e) => setBirth_date(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default MyProfileScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/UserEditScreen.js",["368"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/RegisterScreen.js",["369"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [team, setTeam] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Şifre Aynı Değil')\n        } else {\n            dispatch(register(name, email, team, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Kayıt Ol</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>İsim</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='İsim Gir'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adresi</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Email Gir'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='team'>\n                    <Form.Label>Takım</Form.Label>\n                    <Form.Control\n                        required\n                        type='team'\n                        placeholder='Takımını Gir'\n                        value={team}\n                        onChange={(e) => setTeam(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Şifre</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Şifre Gir'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Şifre Onay</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Şifreni Tekrar Gir'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Kayıt Ol\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Zaten Hesabın Var Mı? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Giriş Yap\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/UserListScreen.js",["370"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/CreateBlogScreen.js",["371","372","373","374","375","376","377","378","379","380","381"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, ModalTitle } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { createPost } from '../actions/blogActions'\nimport { POST_CREATE_RESET } from '../constants/blogConstants'\n\n\nfunction CreateBlogScreen({ history }) {\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [short, setShort] = useState('')\n    const [published, setPublished] = useState(true)\n\n    const [message, setMessage] = useState('')\n\n    const postCreate = useSelector(state => state.postCreate)\n    const { error, loading, post } = postCreate\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (post) {\n            dispatch({ type: POST_CREATE_RESET })\n            history.push('/my/blog')\n        }\n    }, [history, post])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createPost(title,body,short,published))\n        setMessage('')\n\n    }\n    return (\n            <Col md={20}>\n                <h2>Blog Oluştur</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name' form-control-lg>\n                        <Form.Label>Başlık</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Başlık Ekle'\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\n                        <Form.Label>Blog</Form.Label>\n                        <textarea class=\"form-control\" id=\"form4Example3\" rows=\"4\" required type='name' placeholder='Blog Ekle ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n                    </Form.Group>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Açıklama Ekle</Form.Label>\n                        <Form.Control\n\n                            type='name'\n                            placeholder='Açıklama Ekle'\n                            value={short}\n                            onChange={(e) => setShort(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n\n                    <Button type='submit' variant='primary'>\n                        Oluştur\n                </Button>\n\n                </Form>\n            </Col>\n    )\n}\n\nexport default CreateBlogScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/BlogListScreen.js",["382","383","384","385","386","387","388"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listAllPosts } from '../actions/blogActions'\nimport Posts from '../components/Posts'\nimport { Carousel } from 'react-bootstrap'\n\n\nfunction BlogListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const postallList = useSelector(state => state.postallList)\n    const { loading, error, Allposts } = postallList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    useEffect(() => {\n        if (!userInfo ) {\n            history.push('/login')\n        } else {\n            dispatch(listAllPosts())\n\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Latest Posts</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                    <Row>\n                        {Allposts.map(post => (\n                            <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\n                                <Posts post={post} />\n                            </Col>\n                        ))}\n                    </Row>\n                </div>\n\n            }\n        </div>\n    )\n\n}\n\nexport default BlogListScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/BlogDetailScreen.js",["389","390","391","392","393","394","395","396","397","398","399","400"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { PostDetails } from '../actions/blogActions'\nimport cssClass from '../components/details.css'\nimport hr from '../components/HR/hr.js'\nimport { COMMENTS_CREATE_RESET } from '../constants/commentsConstants'\nimport { CommentList, createComment } from '../actions/commentsActions'\nimport Comments from '../components/comments'\nimport { POST_DETAILS_SUCCESS } from '../constants/blogConstants'\n\nfunction BlogDetailScreen({ match, history }) {\n    const [body, setBody] = useState('')\n\n    const dispatch = useDispatch()\n\n    const postdetails = useSelector(state => state.postdetails)\n    const { loading, error, post } = postdetails\n\n    const postcomment = useSelector(state => state.postcomment)\n    const { error:error1, loading:loading1, success, comment } = postcomment\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n\n\n        if(success){\n            setBody(\"\")\n            dispatch({ type: COMMENTS_CREATE_RESET})\n        }\n        dispatch(PostDetails(match.params.slug))\n\n\n    }, [dispatch, match, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createComment(match.params.slug,userInfo.name,body,userInfo.email))\n        setMessage('')\n\n    }\n\n\n    return (\n\n        <div>\n                {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div className={cssClass.PostBodyDiv}>\n                        <h1 className={cssClass.Title}>\n                            {post.title}\n                        </h1>\n\n                        <p className={cssClass.PublishedDate}>\n                            {new Date(\n                                post.published_on\n                            ).toDateString()}\n                        </p>\n                        <hr />\n                        <p className={cssClass.PostBody}>\n                            {post.body}\n                        </p>\n                        <hr />\n                        <div className={cssClass.PostInfo}>\n                            <p> - {post.author_full_name}</p>\n                        </div>\n                        <h1 className={cssClass.CommentHeading}>\n                            Comments: {post.total_comments}\n                        </h1>\n\n                        {post.comments_list && post.comments_list.map(comment => (\n                            <Col key={comment._id} sm={12} md={6} lg={4} xl={3}>\n                                <Comments comments={comment} />\n                            </Col>\n                        ))}\n\n                        <hr />\n                        <h1 className={cssClass.CommentHeading}>\n                            Add a comment\n                        </h1>\n                        <hr />\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group className=\"h-25\" controlId=\"formHorizontalPassword\">\n                                <textarea class=\"form-control\" id=\"form4Example3\" rows=\"5\" required type='name' placeholder='Enter Comment ' value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n                            </Form.Group>\n\n\n\n                            <Button type='submit' variant='primary'>\n                                Create\n                            </Button>\n\n                        </Form>\n                        </div>\n\n                    )}\n\n\n        </div>\n\n    )\n}\n\nexport default BlogDetailScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/FanatikaScreen.js",["401","402","403","404","405","406","407","408","409"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction FanatikaScreen({ history }) {\n    return (\n    <>\n            <h2\n                style={{\n                  fontWeight: \"regular\",\n                  fontSize: \"25px\",\n                  position: \"absolute\",\n                  left: 110,\n                  top: 320,\n                  textAlign: \"center\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"60px\",\n                    color: \"Green\",\n                  }}\n                >\n                  Fanatika Nedir?\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"44px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  <br />\n                  Taraftarında Futbolun içinde\n                  <br />\n                  Olduğu Hem Ligi Takip Ederken\n                  <br />\n                  Hem Hediyeler Kazandığı Futbol Sitesidir\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"regular\",\n                    fontSize: \"36px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  Taraftaların\n                  <br />\n                  Hem takımlar - Hem Federasyon\n                  <br/>\n                  Hakkında Fikirlerini Tartışabildiği Bir Ortam\n                </p>\n\n              </h2>\n\n              <h2\n                style={{\n                  fontWeight: \"regular\",\n                  fontSize: \"25px\",\n                  position: \"absolute\",\n                  right: 110,\n                  top: 1300,\n                  textAlign: \"center\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"60px\",\n                    color: \"Green\",\n                  }}\n                >\n                  Quiz\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"44px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  <br />\n                  Türkiye Futbol Ligi Hakkında Sorular\n                  <br />\n                  Hem O Haftanın Ligi Hakkında\n                  <br />\n                  Hem Desteklediğin Takım Hakkında Sorular\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"regular\",\n                    fontSize: \"36px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  Lig Hakkında 8\n                  <br />\n                  Takımın Hakkında 7 Soru\n                  <br/>\n                  Doğru Cevap Kadar Süreninde Önemi Var\n                </p>\n\n              </h2>\n\n              <h2\n                style={{\n                  fontWeight: \"regular\",\n                  fontSize: \"25px\",\n                  position: \"absolute\",\n                  left: 65,\n                  top: 2200,\n                  textAlign: \"center\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"60px\",\n                    color: \"green\",\n                  }}\n                >\n                  Ödüller\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"44px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  <br />\n                  Ödüller Her Ay Başı Belli Olur\n                  <br />\n                  Her Takım İçin Ödüller Farklı Olabilir\n                  <br />\n                  Ödülleri Takım Sahipleri Belirler\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"regular\",\n                    fontSize: \"36px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  Her Takımın İlk 3 Taraftarı Hediye Kazanır\n                  <br />\n                  Quizde Kazandığın Puanlara Göre Sıralaman Belirlenir\n                  <br/>\n                  Futbol Bilgine Ve Hızına Güveniyorsan \n                  <br/>\n                  Bedava Hediyenin Tadını Çıkar\n                </p>\n\n              </h2>\n\n              <h2\n                style={{\n                  fontWeight: \"regular\",\n                  fontSize: \"25px\",\n                  position: \"absolute\",\n                  right: 20,\n                  top: 3100,\n                  textAlign: \"center\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"60px\",\n                    color: \"green\",\n                  }}\n                >\n                  Blog - Chat\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"44px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  <br />\n                  Takımın Ve Lig Hakkında \n                  <br />\n                  Düşüncelerini Belirt, Federasyon Ne Hakkında\n                  <br />\n                   Daha İyi Olabilir, Yorumlarını Yaz\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"regular\",\n                    fontSize: \"36px\",\n                    color: \"#434343\",\n                    wordSpacing: 3,\n                  }}\n                >\n                  Blog Kısmında Diğer Taraftarlar İle Ligi Tartış\n                  <br />\n                  Chat Kısmında Maçlar Hakkında Düşüncelerini Belirt\n                  <br/>\n                  Hem Ligi Takip Et, Hem Sosyalleş\n                </p>\n\n              </h2>\n\n\n              <img \n                        style={{position: \"absolute\",\n                        right: 100,\n                        top: 200,\n                        width: \"900px\",\n                        height: \"800px\",}}\n                        \n                        src=\"./static/logo.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n              <img \n                        style={{position: \"absolute\",\n                        left: 230,\n                        top: 1195,\n                        width: \"700px\",\n                        height: \"700px\",}}\n                        \n                        src=\"./static/quiz.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n                <img \n                        style={{position: \"absolute\",\n                        right: 160,\n                        top: 2100,\n                        width: \"800px\",\n                        height: \"700px\",}}\n                        \n                        src=\"./static/asd.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n                <img \n                        style={{position: \"absolute\",\n                        left: 220,\n                        top: 3000,\n                        width: \"800px\",\n                        height: \"700px\",}}\n                        \n                        src=\"./static/comment.png\" class=\"img-thumbnail\" alt=\"...\"></img></>\n    )\n}\n\nexport default FanatikaScreen","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/MyBlogScreen.js",["410","411","412","413","414","415"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listMyPosts } from '../actions/blogActions'\nimport Posts from '../components/Posts'\n\n\n\nfunction MyBlogScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const postmyList = useSelector(state => state.postmyList)\n    const { loading, error, Myposts } = postmyList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo ) {\n            history.push('/login')\n        } else {\n            dispatch(listMyPosts())\n        }\n    }, [dispatch, history, userInfo])\n\n\n\n    return (\n        <div>\n            <h1>My Posts</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {Myposts.map(post => (\n                                <Col key={post._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Posts post={post} />\n                                </Col>\n                            ))}\n                        </Row>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default MyBlogScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/GiftScreen.js",["416","417","418","419","420","421","422","423"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listPrizes } from '../actions/prizeActions'\nimport { login } from '../actions/userActions'\nfunction GiftScreen({ location,history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n    const redirect = location.search ? location.search.split('=')[1] : '/profile'\n\n    const prizealllist = useSelector(state => state.prizealllist)\n    const { error:error1, loading:loading1, prizeAll } = prizealllist\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n        else{\n            dispatch(listPrizes())\n        }\n\n\n    }, [history, userInfo, dispatch,redirect])\n\n\n\n\n\n    return (\n        <div>\n        {loading1 && loading\n            ? (<Loader />)\n            : error\n                ? (<Message variant='danger'>{error}</Message>)\n                : (\n                    <div>\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>Prizes for Galatasaray winners</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {prizeAll?.map((prize,index) =>(\n                                    prize.prize_team === \"galatasaray\" ?(\n                                    <tr key={index}>\n                                        <td>{prize.prize_name}</td>\n                                        <td>{prize.prize_content}</td>\n                                        <td>{prize.winner_ladder}</td>\n                                    </tr>):null\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n                )}\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Fenerbahce winners</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                        {prizeAll?.map((prize,index) =>(\n                                    prize.prize_team === \"fenerbahce\" ?(\n                                    <tr key={index}>\n                                        <td>{prize.prize_name}</td>\n                                        <td>{prize.prize_content}</td>\n                                        <td>{prize.winner_ladder}</td>\n                                    </tr>):null\n                                ))}\n                        </tbody>\n                    </Table>\n                </div>\n\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Besiktas winners</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                        {prizeAll?.map((prize,index) =>(\n                                    prize.prize_team === \"besiktas\" ?(\n                                    <tr key={index}>\n                                        <td>{prize.prize_name}</td>\n                                        <td>{prize.prize_content}</td>\n                                        <td>{prize.winner_ladder}</td>\n                                    </tr>):null\n                                ))}\n                        </tbody>\n                    </Table>\n                </div>\n\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Trabzonspor winners</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                        {prizeAll?.map((prize,index) =>(\n                                    prize.prize_team === \"trabzonspor\" ?(\n                                    <tr key={index}>\n                                        <td>{prize.prize_name}</td>\n                                        <td>{prize.prize_content}</td>\n                                        <td>{prize.winner_ladder}</td>\n                                    </tr>):null\n                                ))}\n                        </tbody>\n                    </Table>\n                </div>\n    </div>\n\n\n\n\n    )\n}\nexport default GiftScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Hakkımızda.js",["424","425","426","427","428","429","430"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction Hakkımızda({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h2 style= {{position:'absolute', left:1100, top:180}}><a href=\"#\" class=\"text-danger\">BİZ KİMİZ?</a></h2>\n\n            <p style= {{position:'absolute', left:1090, top:230}}>2022 - 2023 Güz Dönemi</p>\n            <p style= {{position:'absolute', left:1100, top:250}}>CS 308 Öğrencileriyiz.</p>\n\n            <h4 style= {{position:'absolute', left:1050, top:340}}><a href=\"#\" class=\"text-info\">Takım ÜYELERİMİZ</a></h4>\n\n            <p style= {{position:'absolute', left:1130, top:380}}> Arda Göktaş</p>\n            <p style= {{position:'absolute', left:1100, top:400}}> Melike Sena Özgen</p>\n            <p style= {{position:'absolute', left:1080, top:420}}> Mustafa Sergen Haysal</p>\n            <p style= {{position:'absolute', left:1140, top:440}}> Ufuk Atay</p>\n            \n\n\n            \n            <img  style= {{position:'absolute', left:1050, top:520}} src=\"./static/TFF_logo.png\" class=\"img-fluid\" alt=\"...\"></img>\n          \n\n        \n\n           \n            <h5 style= {{position:'absolute', left:850, top:880}} class=\"font-weight-bold\"> <a href=\"#\" class=\"text-warning\"> Vİzyonumuz</a></h5>\n            <h5 style= {{position:'absolute', left:1410, top:880}} class=\"font-weight-bold\"> <a href=\"#\" class=\"text-warning\">Mİsyonumuz</a></h5>\n\n            <div style= {{position:'absolute', top:930}} class=\"container text-center\">\n                    \n                   \n                    <div class=\"row\">\n                        <div class=\"col\">\n                        Taraftarlar İçin \n                        </div>\n                        <div class=\"col\">\n                        Kullanıcı Dostu Ve Eğlenceli Ürünümüzle \n                        </div>\n                        \n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                        Quiz Sistemi İle Birlikte\n                        </div>\n                        <div class=\"col\">\n                        Taraftarların Futbolu Daha Sıkı\n                        </div>\n                        \n                    </div>   \n\n                    <div class=\"row \">\n                        <div class=\"col\">\n                        Futobol Sitesi Hizmeti Veren\n                        </div>\n                        <div class=\"col\">\n                         Takip Etmesini Sağlamak Bunu Yaparken \n                        </div>\n                        \n                    </div>   \n                    <div class=\"row \">\n                        <div class=\"col\">\n                        Siteler İçerisinde\n                        </div>\n                        <div class=\"col\">\n                        Kullanıcılarımızı Eğlendirmek Ve Aynı \n                        </div>\n                        \n                    </div>   \n\n                    <div class=\"row \">\n                        <div class=\"col\">\n                        1 Numara Olmak!\n                        </div>\n                        <div class=\"col\">\n                        Zamanda Ödüller Kazandırmaktır.\n                        </div>\n                        \n                    </div>   \n\n\n            </div>\n                        \n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n\n        \n    )\n}\n\nexport default Hakkımızda","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/CategoryList.js",["431"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listCategories, deleteCategory } from '../actions/quizActions'\n\nfunction CategoryListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const categoryList = useSelector(state => state.categoryList)\n    const { loading, error, categories } = categoryList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const categoryDelete = useSelector(state => state.categoryDelete)\n    const { success: successDelete } = categoryDelete\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listCategories())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history,successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this category?')) {\n            dispatch(deleteCategory(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Categories</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>TITLE</th>\n                                    <th>QUESTION_COUNT</th>\n                                    <th>DELETE</th>\n                                    <th>Add Question</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {categories.map(category => (\n                                    <tr key={category.id}>\n                                        <td>{category.id}</td>\n                                        <td>{category.title}</td>\n                                        <td>{category.question_count}</td>\n                                        <td>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(category.id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            <LinkContainer to={`/category/list/${category.id}/edit`}>\n                                                <Button variant='dark' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n\n    )\n}\n\nexport default CategoryListScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AddCategory.js",["432","433","434","435","436","437"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form,Col, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\n\nimport { createCategory } from '../actions/quizActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport {CATEGORY_CREATE_RESET} from '../constants/quizConstants'\n\nfunction AddCategory({ history }) {\n\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n\n\n    const [message, setMessage] = useState('')\n\n    const categorycreate = useSelector(state => state.categorycreate)\n    const { error, loading, category } = categorycreate\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (category) {\n            dispatch({ type: CATEGORY_CREATE_RESET })\n            history.push('/categorylist')\n        }\n    }, [history, category])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createCategory(userInfo.id,title))\n        setMessage('')\n\n    }\n\n\n\n\n\n    return (\n        <Col md={20}>\n        <h2>Category Oluştur</h2>\n\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId='name' form-control-lg>\n                <Form.Label>Category</Form.Label>\n                <Form.Control\n                    required\n                    type='name'\n                    placeholder='Category Ekle'\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n\n            <Button type='submit' variant='primary'>\n                Oluştur\n        </Button>\n\n        </Form>\n    </Col>\n\n    )\n}\n\nexport default AddCategory\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/HomeScreen.js",["438","439","440"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport Paginate from './Paginate'\nimport { Link } from 'react-router-dom'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <h2\n                        style={{\n                            position: \"absolute\",\n                            right: 40,\n                            color: \"#434343\",\n                            top: 500,\n                            fontWeight: \"bold\",\n                            fontSize: \"35px\",\n                            fontFamily: \"Verdana\",\n                            textAlign: \"center\",\n                            zIndex: 1,\n                        }}\n                        >\n                        Hem Takımını Destekle, Hem Ödülleri Kap\n                        <br />\n                        Futbolu Takip Ederken, Eğlen\n                        </h2>\n\n                        <Link to=\"/fanatika\">\n                        <button style={{position: \"absolute\",\n                        right: 450,\n                        top: 700,\n                        width: \"250px\",\n                        height: \"65px\",\n                        color: \"white\",\n                        fontWeight: \"bold\",\n                        fontSize: \"15px\",\n                        backgroundColor: \"black\",\n                        borderColor: \"red\",}}\n                        type=\"button\" class=\"btn btn-info\">Öğrenmeye Başla</button>\n                        </Link>\n\n\n                        <Link to=\"/leaderboard\">\n                        <button style={{position: \"absolute\",\n                        right: 1000,\n                        top: 1950,\n                        width: \"250px\",\n                        height: \"65px\",\n                        color: \"white\",\n                        fontWeight: \"bold\",\n                        fontSize: \"15px\",\n                        backgroundColor: \"black\",\n                        borderColor: \"red\",}}\n                        type=\"button\" class=\"btn btn-info\">GÖSTER</button>\n                        </Link>\n\n                        <h2\n                        style={{\n                            position: \"absolute\",\n                            right: 550,\n                            color: \"#434343\",\n                            top: 1800,\n                            fontWeight: \"bold\",\n                            fontSize: \"35px\",\n                            fontFamily: \"Verdana\",\n                            textAlign: \"center\",\n                            zIndex: 1,\n                        }}\n                        >\n                        Bu Ay Olan Ödüllerİ\n                        <br />\n                        Sıralamanın Nasıl Olduğunu Merak Ediyorsan\n                        </h2>\n\n\n\n\n                        <img\n                        style={{position: \"absolute\",\n                        left: 500,\n                        top: 1200,\n                        width: \"1350px\",\n                        height: \"500px\",}}\n\n                        src=\"./static/71179.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n                        <img\n                        style={{position: \"absolute\",\n                        left: 250,\n                        top: 250,\n                        width: \"1000px\",\n                        height: \"700px\",}}\n\n                        src=\"./static/bacground.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n\n\n                    </div>\n\n\n            }\n        </div>\n\n    )\n}\n\nexport default HomeScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Sıksorulanlar.js",["441","442","443","444","445","446","447","448","449","450"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\n\n\nfunction Sıksorulanlar({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state)\n    const { error, loading, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n\n    },[dispatch, keyword])\n\n    \n\n    return (\n\n        <div id=\"accordion\">\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingOne\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                Fanatika Hesabı Nasıl Oluştururum?\n                </button>\n            </h5>\n            </div>\n\n            <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\" >\n            <div class=\"card-body\">\n                Fanatika hesabını ana sayfada yer alan Kayıt Ol kısmından kullanıcı bilgilerin ve takım bilgilerinle yapabilirsin. Aramıza katılmana çok sevindik!\n            </div>\n            </div>\n\n            <div class=\"card-header\" id=\"headingOne\" >\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\n                Fanatika Hesabımla Neler Yapabilirim?\n                </button>\n            </h5>\n            </div>\n\n            <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\" >\n            <div class=\"card-body\" >\n                Fanatika hesabınla maçları canlı olarak takip edebilir, maç esnasında taraftarlarla konuşabilir, haftalık quizlere katılarak ödüller kazanabilirsin.\n            </div>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingTwo\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                Fanatika Takım Bilgilerimi Nasıl Değiştiririm?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseTwo\" class=\"collapse show\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Takım bilgilerini kişisel profil sayfasından değiştirebilir ve diğer takımlar için tasarladığımız arayüzleri inceleyebilirsin.  \n            </div>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Kullanıcı Olarak Bilgilerim Güvenli Saklanıyor Mu?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Kullanıcı bilgilerin Fanatika altyapısıyla güvenle saklanmaktadır. Kullandığımız yöntemler sayesinde dışarıdan yapılacak cyber saldırılara karşı güvenlikli bir databesimiz bulunmaktadır. \n            </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Diğer Kullanıcılarla Nasıl Etkileşime Geçebilirim?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Fanatika da bulunan Blog üzerinden yorumlarını paylaşabilir ve diğer kullanıcıların yorumlarını görebilirsin. Aynı zamanda kullanıcılarımız için oluşturduğumuz live chatbox dan maç esnasında yorumlar yapabilir ve maçları yayındayken yorumlayabilirsin.\n            </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Ödül Kazanırsam Ödülüm Bana Nasıl Ulaşacak?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Ödül kazandığın taktirde sana bir tebrik maili göndereceğiz ve bu mailde adres bilgilerini girmeni isteyeceğiz. Seçeceğin anlaşmalı firmalarımızdan kargonun teslimat sürecini takip edebilirsin.  \n            </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Takım Bilgilerim Neden gerekli?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Fanatika tuttuğun takıma özgü kişiselleştirilmiş profil sayfaları sunar. Daha iyi bir kullanıcı deneyimi ve kişiselleştirilmiş tasarımlarımızı görmeniz için takım bilgilerinizle giriş yapmanizi tavsiye ederiz.\n            </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Fanatika Gündeminden Nasıl Haberdar Olurum?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Fanatika sadece bir websitesi olmaktan öte sürekli futbol gündemiyle iç içe kalmanızı da hedefler. Bu amacımız doğrultusunda üyelik oluştururken bülten haberleri almak istiyorum seçeneğini seçerek günlük mail alabilir, futbolu yakından takipte kalabilirsiniz.\n            </div>\n            </div>\n        </div>\n\n        <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n            <h5 class=\"mb-0\">\n                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                Fanatika Hesabimi Nasıl Kapatabilirim?\n                </button>\n            </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse show\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                Aramızdan ayrılmana çok üzüldük! Fanatika hesabını kullanıcı profilinden hesabımı sil kısmından kapatabilirsin. Kendimizi geliştirmemiz için site hakkında yorumunu bizlerle paylaşabilirsin. \n            </div>\n            </div>\n        </div>\n\n\n        </div>\n\n\n\n        \n    )\n}\n\nexport default Sıksorulanlar","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizAddScreen.js",["451","452","453","454","455","456","457"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button , Col} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { getCategoryDetails,deleteQuestion,createQuestion } from '../actions/quizActions'\nimport { Table } from 'react-bootstrap'\n\nfunction QuizAddScreen({ match, history }) {\n\n    const catId = match.params.id\n    const [prompt, setPrompt] = useState('')\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const categoryDetail = useSelector(state => state.categoryDetail)\n    const { loading, error, questions } = categoryDetail\n\n    const questionCreate = useSelector(state => state.questionCreate)\n    const { error:error1, loading:loading1, success, question } = questionCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const questionDelete = useSelector(state => state.questionDelete)\n    const { success: successDelete } = questionDelete\n\n\n    useEffect(() => {\n        if(success)\n            setPrompt('')\n\n        dispatch(getCategoryDetails(catId))\n\n    }, [dispatch,catId,history,successDelete, success])\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this category?')) {\n            dispatch(deleteQuestion(id))\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createQuestion(catId,prompt))\n        setMessage('')\n\n    }\n\n\n    return (\n        <div>\n            <Link to='/categorylist'>\n                Go Back\n            </Link>\n            <h1>questions</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>PROMPT</th>\n                                    <th>DELETE</th>\n                                    <th>ADD ANSWERS</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {questions.map(questionss => (\n                                    <tr key={questionss.id}>\n                                        <td>{questionss.id}</td>\n                                        <td>{questionss.prompt}</td>\n                                        <td>\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(questionss.id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            <LinkContainer to={`/answer/list/${questionss.id}/edit`}>\n                                                <Button variant='dark' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                            <Form onSubmit={submitHandler}>\n\n                                <Form.Group controlId='Add an Question' form-control-lg>\n                                    <Form.Label>Add an Question</Form.Label>\n                                    <Form.Control\n                                        required\n                                        type='name'\n                                        placeholder='Soru Ekle'\n                                        value={prompt}\n                                        onChange={(e) => setPrompt(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n\n\n                                <hr></hr>\n\n                                <Button type='submit' variant='primary'>\n                                    Oluştur\n                                </Button>\n\n                            </Form>\n        </div>\n\n    )\n}\n\nexport default QuizAddScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AnswerList.js",["458","459","460","461","462","463"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button , Col} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport {listAnswers,deleteAnswer,createAnswer} from '../actions/quizActions'\nimport { Table } from 'react-bootstrap'\n\nfunction AnswerList({ match, history }) {\n\n    const question_id = match.params.id\n    const [answer, setAnswer] = useState('')\n    const [isCorrect, SetisCorrect] = useState(false)\n\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const answerList = useSelector(state => state.answerList)\n    const { loading, error, answers } = answerList\n\n    const answerCreate = useSelector(state => state.answerCreate)\n    const { error:error1, loading:loading1, success, answerss } = answerCreate\n\n    const answerDelete = useSelector(state => state.answerDelete)\n    const { success: successDelete } = answerDelete\n\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if(success)\n            setAnswer('')\n            SetisCorrect(false)\n\n        dispatch(listAnswers(question_id))\n\n    }, [dispatch,question_id,history,successDelete,success])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this category?')) {\n            dispatch(deleteAnswer(id))\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createAnswer(question_id,answer,isCorrect))\n        setMessage('')\n\n    }\n\n\n\n    return (\n        <div>\n            <Link to='/categorylist'>\n                Go Back\n            </Link>\n            <h1>Answers</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>TEXT</th>\n                                    <th>IS_CORRECT</th>\n                                    <th>DELETE</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {answers.map(answer => (\n                                    <tr key={answer.id}>\n                                        <td>{answer.id}</td>\n                                        <td>{answer.text}</td>\n                                        <td>{answer.correct}</td>\n                                        <td>\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(answer.id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n                        <Col md={4}>\n                            <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='Add an Answer' form-control-lg>\n                                    <Form.Label>Add an Answer</Form.Label>\n                                    <Form.Control\n                                        required\n                                        type='Answer'\n                                        placeholder='Cevap Ekle'\n                                        value={answer}\n                                        onChange={(e) => setAnswer(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Check type={\"checkbox\"}>\n                                        <Form.Check.Input\n                                        type={\"checkbox\"}\n                                        defaultChecked={false}\n                                        value = {true}\n                                        onClick={(e) => SetisCorrect(e.target.value)}\n                                        />\n                                        <Form.Check.Label>Is Correct</Form.Check.Label>\n                                    </Form.Check>\n                                </Form.Group>\n\n\n\n                                <hr></hr>\n\n                                <Button type='submit' variant='primary'>\n                                    Oluştur\n                                </Button>\n\n                            </Form>\n                        </Col>\n\n\n        </div>\n\n    )\n}\n\nexport default AnswerList\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizCategory.js",["464","465","466"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listCategories } from '../actions/quizActions'\nimport { getMyUserDetails} from '../actions/profileActions'\n\n\nfunction QuizCategory({ history }) {\n\n    const dispatch = useDispatch()\n\n    const categoryList = useSelector(state => state.categoryList)\n    const { loading, error, categories } = categoryList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error:error1, loading:loading1, Myuser } = usermyDetails\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(listCategories())\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n    return (\n        <div>\n            <h1>Categories</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>TITLE</th>\n                                    <th>QUESTION_COUNT</th>\n                                    <th>AttemptQuiz</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {categories.map(category => (\n                                    Myuser.team === category.title ?(\n                                    <tr key={category.id}>\n                                        <td>{category.title}</td>\n                                        <td>{category.question_count}</td>\n                                        <td>\n                                            <LinkContainer to={`attemptquiz/${category.id}`}>\n                                                <Button variant='dark' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>):null\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n\n    )\n}\n\nexport default QuizCategory\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/QuizAttemptScreen.js",["467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { useState, useEffect } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message1 from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { getCategoryDetails} from '../actions/quizActions'\nimport { Table } from 'react-bootstrap'\nimport Answers from '../components/answers'\nimport getLetter from '../utils/getLetter'\nimport {\n    Container,\n    Segment,\n    Item,\n    Divider,\n    Button,\n    Icon,\n    Message,\n    Menu,\n    Header\n  } from 'semantic-ui-react';\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\n\n\nfunction QuizAttemptScreen({ match, history }) {\n    const data = [];\n    const answers = [];\n    let point = 0;\n\n    const catId = match.params.id\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const categoryDetail = useSelector(state => state.categoryDetail)\n    const { loading, error, questions } = categoryDetail\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n\n    const { error:eror1, loading:loading1, Myuser } = usermyDetails\n\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [totalpoint, settotalpoint] = useState(0);\n\n    const [correctA, setcorrectA] = useState(\"\");\n    const [userSlectedAns, setUserSlectedAns] = useState(null);\n    const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n    if(questionIndex === 0)\n        questions[0].answers.map((answer) => {\n\n            if(answer.correct === true)\n                setcorrectA(answer.text)\n\n        })\n\n  };\n\n  const handleNext = () => {\n    setcorrectA(\"\")\n    if(questionIndex < questions?.length - 1)\n        questions[questionIndex+1].answers.map((answer) => {\n\n            if(answer.correct === true)\n                setcorrectA(answer.text)\n\n        })\n    if(questionIndex === questions?.length - 1)\n        questions[questionIndex].answers.map((answer) => {\n\n            if(answer.correct === true)\n                setcorrectA(answer.text)\n\n        })\n\n    if (userSlectedAns === correctA ) {\n        point = point + 1\n    }\n\n    const qna = questionsAndAnswers;\n    qna.push({\n      question: questions[questionIndex].prompt,\n      user_answer: userSlectedAns,\n      point\n    });\n\n\n    settotalpoint(totalpoint+point)\n\n    if (questionIndex === questions?.length - 1) {\n        dispatch(updateMyUserProfile({\n            'id': Myuser.id,\n            'user':Myuser.user,\n            'team': Myuser.team,\n            'bio': Myuser.bio,\n            'birth_date': Myuser.birth_date,\n            'rating': Myuser.rating+totalpoint\n        }))\n        history.push(`/resultpage/${catId}/${totalpoint}/${questionsAndAnswers}`)\n\n      }\n\n\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n    setQuestionsAndAnswers(qna);\n\n\n  };\n\n\n\n\n\n    useEffect(() => {\n        if(userInfo) {\n            dispatch(getCategoryDetails(catId))\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        }else{\n            history.push('/login')\n        }\n\n\n\n    }, [dispatch,catId,history])\n\n\n\n    return (\n            <Item.Header>\n                <Container>\n                    <Segment>\n                    <Item.Group divided>\n                        <Item>\n                        <Item.Content>\n                            <Item.Extra>\n                            <Header as=\"h1\" block floated=\"left\">\n                                <Icon name=\"info circle\" />\n                                <Header.Content>\n                                {`Question No.${questionIndex + 1} of ${questions.length}`}\n                                </Header.Content>\n                            </Header>\n\n                            </Item.Extra>\n                            <br />\n                            <Item.Meta>\n                            <h3>\n                                {questions[questionIndex]?.prompt ? (\n                                    <b>{`Q. ${questions[questionIndex]?.prompt }`}</b>\n                                ): <b>{`Q. `}</b>}\n\n                            </h3>\n                            <br />\n                            <Item.Description>\n                                <h4>Please choose one of the following answers:</h4>\n                            </Item.Description>\n                            <Divider />\n\n                            <Menu vertical fluid size=\"massive\">\n                            {questions[questionIndex]?.answers.map((answer,i) => {\n                                const letter = getLetter(i);\n                                const decodedOption = answer.text;\n\n                                return (\n                                    <Menu.Item\n                                    key={decodedOption}\n                                    name={decodedOption}\n                                    active={userSlectedAns === decodedOption}\n                                    onClick={handleItemClick}\n                                    >\n                                    <b style={{ marginRight: '8px' }}>{letter}</b>\n                                    {decodedOption}\n                                    </Menu.Item>\n                                );\n                                })}\n\n\n                            </Menu>\n                            </Item.Meta>\n                            <Divider />\n                            <Item.Extra>\n                            <Button\n                                primary\n                                content=\"Next\"\n                                onClick={handleNext}\n                                floated=\"right\"\n                                size=\"big\"\n                                icon=\"right chevron\"\n                                labelPosition=\"right\"\n                                disabled={!userSlectedAns}\n                            />\n                            </Item.Extra>\n                        </Item.Content>\n                        </Item>\n                    </Item.Group>\n                    </Segment>\n                    <br />\n                </Container>\n                </Item.Header>\n\n                )\n            }\n\nexport default QuizAttemptScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/PrizeWinner.js",["489","490","491","492","493","494","495","496","497","498","499"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Table } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listWinners } from '../actions/generalActions'\nimport { listPrizes } from '../actions/prizeActions'\nimport { login } from '../actions/userActions'\n\nfunction PrizeWinner({ location, history }) {\n    const gsprizearr=[]\n    const fbprizearr=[]\n    const tsprizearr=[]\n    const bjkprizearr=[]\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/profile'\n\n    const winnerlistreducer = useSelector(state => state.winnerlistreducer)\n    const { error:error1, loading:loading1, winners } = winnerlistreducer\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n        else{\n            dispatch(listWinners())\n        }\n\n    }, [history, userInfo, dispatch,redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <div>\n        {loading1 && loading\n            ? (<Loader />)\n            : error\n                ? (<Message variant='danger'>{error}</Message>)\n                : (\n                    <div>\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>Prize Winners for Galatasaray</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {winners?.sort((first,second) => second.rating - first.rating).slice(0,3).map((winner,index) =>(\n                                    winner.team === \"galatasaray\" ?(\n                                    <tr key={index}>\n                                        <td>{winner[\"user\"].name}</td>\n                                        <td>{winner.team}</td>\n                                        <td>{winner.rating}</td>\n                                        <td>kupa</td>\n                                    </tr>):null\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n                )}\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Fenerbahce</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {winners?.sort((first,second) => second.rating - first.rating ).map((winner,index) =>(\n                                winner.team === \"fenerbahce\" ?(\n                                <tr key={index}>\n                                    <td>{winner[\"user\"].name}</td>\n                                    <td>{winner.team}</td>\n                                    <td>{winner.rating}</td>\n                                    <td>kupa</td>\n                                </tr>):null\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Besiktas</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {winners?.sort((first,second) => second.rating - first.rating ).map((winner,index) =>(\n                                winner.team === \"besiktas\" ?(\n                                <tr key={index}>\n                                    <td>{winner[\"user\"].name}</td>\n                                    <td>{winner.team}</td>\n                                    <td>{winner.rating}</td>\n                                    <td>kupa</td>\n                                </tr>):null\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n\n                <div>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Prize Winners for Trabzonspor</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {winners?.sort((first,second) => second.rating - first.rating ).map((winner,index) =>(\n                                winner.team === \"trabzonspor\" ?(\n                                <tr key={index}>\n                                    <td>{winner[\"user\"].name}</td>\n                                    <td>{winner.team}</td>\n                                    <td>{winner.rating}</td>\n                                    <td>kupa</td>\n                                </tr>):null\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n    </div>\n\n\n\n\n\n\n\n    )\n}\n\nexport default PrizeWinner\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Footer.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AdminPrizeAdd.js",["500","501","502","503","504","505"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport { createPrize } from '../actions/prizeActions'\nimport {PRIZE_CREATE_RESET} from '../constants/prizeConstants'\n\nfunction AdminPrizeAdd({ location, history }) {\n    const [prize_team, setPrizeTeam] = useState('')\n    const [prize_name, setPrizeName] = useState('')\n    const [prize_content, setPrizeContent] = useState('')\n    const [winner_ladder, setWinnerLadder] = useState('')\n\n\n\n    const [message, setMessage] = useState('')\n    const dispatch = useDispatch()\n\n    const prizecreate = useSelector(state => state.prizecreate)\n    const { error , loading, success,prize } = prizecreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (success) {\n            setPrizeTeam(\"\")\n            setPrizeName(\"\")\n            setPrizeContent(\"\")\n            setWinnerLadder(\"\")\n            dispatch({ type: PRIZE_CREATE_RESET })\n        }\n    }, [history, success,dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createPrize(prize_name,prize_content,winner_ladder,prize_team))\n        setMessage('')\n\n    }\n\n    return (\n        <Col md={20}>\n        <h2>Ödül Oluştur</h2>\n\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId='name' form-control-lg>\n                <Form.Label>Ödülün İsmi</Form.Label>\n                <Form.Control\n                    required\n                    type='name'\n                    placeholder='Eklenecek ödülün ismini giriniz...'\n                    value={prize_name}\n                    onChange={(e) => setPrizeName(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n                <Form.Group controlId='name' form-control-lg>\n                    <Form.Label>Ödülün açıklaması</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Eklenecek ödülün açıklamasını giriniz...'\n                        value={prize_content}\n                        onChange={(e) => setPrizeContent(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='name' form-control-lg>\n                    <Form.Label>Ödülün kaçıncıya verilecegi</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Ödülün kaçıncıya verilecegini seçiniz...'\n                        value={winner_ladder}\n                        onChange={(e) => setWinnerLadder(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='name' form-control-lg>\n                    <Form.Label>Oyuncunun takımı</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Eklenecek ödülün hangi takıma ait olduğunu yazınız...'\n                        value={prize_team}\n                        onChange={(e) => setPrizeTeam(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n            <Button type='submit' variant='primary'>\n                Oluştur\n            </Button>\n\n        </Form>\n    </Col>\n\n    )\n}\n\nexport default AdminPrizeAdd\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ResultPage.js",["506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col,Button, Form } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { PostDetails } from '../actions/blogActions'\nimport cssClass from '../components/details.css'\nimport { getCategoryDetails} from '../actions/quizActions'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { Table } from 'semantic-ui-react';\n\nimport Comments from '../components/comments'\n\nimport { getMyUserDetails} from '../actions/profileActions'\n\n\nfunction ResultPage({ match, history }) {\n    const quizid = match.params.id\n    const earnedpoint = match.params.point\n    const qna = match.params.arr\n    console.log(qna)\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error:eror1, loading:loading1, Myuser } = usermyDetails\n\n    const categoryDetail = useSelector(state => state.categoryDetail)\n    const { loading, error, questions } = categoryDetail\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n\n        if(userInfo) {\n            dispatch(getCategoryDetails(quizid))\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        }else{\n            history.push('/login')\n        }\n\n\n    }, [dispatch,quizid,earnedpoint,qna, match])\n\n\n\n\n    return (\n        <div>\n            <h1>Bu quizden kazandiginiz puan {earnedpoint}</h1>\n            <hr />\n            <h1>Toplam Puanınız {Myuser.rating}</h1>\n\n\n\n            <Table celled striped selectable size=\"large\">\n            <Table.Header>\n                <Table.Row>\n                <Table.HeaderCell>No.</Table.HeaderCell>\n                <Table.HeaderCell>Questions</Table.HeaderCell>\n                <Table.HeaderCell>All Answers</Table.HeaderCell>\n                <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n                <Table.HeaderCell>Your Answer</Table.HeaderCell>\n                <Table.HeaderCell>Points</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {questions?.map((questionss, i) => (\n                <Table.Row key={i + 1}>\n                    <Table.Cell>{i + 1}</Table.Cell>\n                    <Table.Cell>{questionss?.prompt}</Table.Cell>\n                    <Table.Cell>\n                        {questions[i].answers.map((answers,i) => (\n                        <Table.Row Key={i+1}>\n                            <Table.Cell>{answers?.text}</Table.Cell>\n                        </Table.Row>\n                        ))}\n                    </Table.Cell>\n\n                    <Table.Cell>\n                        {questions[i].answers.map((answers,i) => {\n                            if(answers.correct === true)\n                            return(\n                                <Table.Row Key={i+1}>\n                                    <Table.Cell>{answers?.text}</Table.Cell>\n                                </Table.Row>)\n                            })}\n                    </Table.Cell>\n\n                    <Table.Cell>\n                                {qna[i].user_answer}\n                    </Table.Cell>\n\n                    <Table.Cell>1</Table.Cell>\n                </Table.Row>\n                ))}\n            </Table.Body>\n            </Table>\n\n            <hr />\n\n\n\n        </div>\n\n    )\n}\n\nexport default ResultPage\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ProfileScreen.js",["525","526","527"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    const userDetails = useSelector(state => state.userDetails)\n\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/Leaderboard.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Loader.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Message.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/FormContainer.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/comments.js",["528","529"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport cssClass from \"./comments.css\";\nimport hr from './HR/hr.js'\n\nfunction Comments({ comments }) {\n    return (\n\n        <div className={cssClass.Comment}>\n            <hr />\n            <div className={cssClass.Detail}>\n                <strong>Name:</strong> {comments.name}\n            </div>\n            <div className={cssClass.Body}>\n                <strong>Comment:</strong> {comments.body}\n            </div>\n            <div className={cssClass.Detail}>\n                <strong>On:</strong>{\" \"}\n                {new Date(comments.published_on).toDateString()}\n            </div>\n        </div>\n    )\n}\n\nexport default Comments\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/blogConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/commentsConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/userConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/quizConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/profileConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/profileActions.js",["530","531","532","533","534","535"],"import axios from 'axios'\nimport {\n    USER_MYDETAILS_FAIL,\n    USER_MYDETAILS_SUCCESS,\n    USER_MYDETAILS_REQUEST,\n    USER_MYDETAILS_RESET,\n    USER_UPDATE_MYPROFILE_REQUEST,\n    USER_UPDATE_MYPROFILE_SUCCESS,\n    USER_UPDATE_MYPROFILE_FAIL,\n    USER_UPDATE_MYPROFILE_RESET,\n    USER_MYLIST_REQUEST,\n    USER_MYLIST_SUCCESS,\n    USER_MYLIST_FAIL,\n    USER_MYLIST_RESET,\n} from '../constants/profileConstants'\n\nexport const getMyUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_MYDETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/my/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_MYDETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateMyUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/my/profile/${user.id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_MYDETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_MYPROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/quizActions.js",["536","537","538","539","540","541","542"],"import axios from 'axios'\nimport {\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_LIST_CREATE_REQUEST,\n    CATEGORY_LIST_CREATE_SUCCESS,\n    CATEGORY_LIST_CREATE_FAIL,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n    QUESTION_LIST_CREATE_REQUEST,\n    QUESTION_LIST_CREATE_SUCCESS,\n    QUESTION_LIST_CREATE_FAIL,\n    QUESTION_DELETE_REQUEST,\n    QUESTION_DELETE_SUCCESS,\n    QUESTION_DELETE_FAIL,\n    QUESTION_CREATE_REQUEST,\n    QUESTION_CREATE_SUCCESS,\n    QUESTION_CREATE_FAIL,\n\n    ANSWER_DELETE_REQUEST,\n    ANSWER_DELETE_SUCCESS,\n    ANSWER_DELETE_FAIL,\n    ANSWER_DELETE_RESET,\n    ANSWER_DETAIL_REQUEST,\n    ANSWER_DETAIL_SUCCESS,\n    ANSWER_DETAIL_FAIL,\n    ANSWER_DETAIL_RESET,\n    ANSWER_CREATE_REQUEST,\n    ANSWER_CREATE_SUCCESS,\n    ANSWER_CREATE_FAIL,\n    ANSWER_CREATE_RESET,\n\n    QUESTION_CREATE_RESET,\n\n    QUESTION_DELETE_RESET,\n    CATEGORY_LIST_CREATE_RESET,\n    CATEGORY_CREATE_RESET,\n} from '../constants/quizConstants'\n\nexport const createCategory = (author,title) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/v2/quizzes/`,\n            {'author':author,'title':title},\n            config\n        )\n        dispatch({\n            type: CATEGORY_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listCategories = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_LIST_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/v2/quizzes/`,\n            config\n        )\n\n        dispatch({\n            type: CATEGORY_LIST_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_LIST_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CATEGORY_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/v2/quizzes/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: CATEGORY_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: CATEGORY_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getCategoryDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: QUESTION_LIST_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/v2/quizzes/${id}/all_questions`,\n            config\n        )\n\n        dispatch({\n            type: QUESTION_LIST_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: QUESTION_LIST_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteQuestion = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: QUESTION_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/v2/questions/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: QUESTION_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: QUESTION_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createQuestion = (quiz_id,prompt) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: QUESTION_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/v2/questions/`,\n            {'quiz':quiz_id,'prompt':prompt},\n            config\n        )\n        dispatch({\n            type: QUESTION_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: QUESTION_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listAnswers = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ANSWER_DETAIL_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/v2/questions/${id}/answers/`,\n            config\n        )\n\n        dispatch({\n            type: ANSWER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ANSWER_DETAIL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteAnswer = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ANSWER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/v2/answers/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ANSWER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ANSWER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createAnswer = (quiz_id,text,correct) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ANSWER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/comments/questions/${quiz_id}/answerss`,\n            {'text':text,'correct':correct},\n            config\n        )\n        dispatch({\n            type: ANSWER_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ANSWER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/blogActions.js",["543","544","545","546","547","548","549"],"import axios from 'axios'\nimport {\n    POST_CREATE_REQUEST,\n    POST_CREATE_SUCCESS,\n    POST_CREATE_FAIL,\n    POST_CREATE_RESET,\n\n    POST_DETAILS_REQUEST,\n    POST_DETAILS_SUCCESS,\n    POST_DETAILS_FAIL,\n    POST_DETAILS_RESET,\n\n    POST_LIST_REQUEST,\n    POST_LIST_SUCCESS,\n    POST_LIST_FAIL,\n    POST_LIST_RESET,\n\n    POST_MYLIST_REQUEST,\n    POST_MYLIST_SUCCESS,\n    POST_MYLIST_FAIL,\n    POST_MYLIST_RESET,\n\n    POST_DELETE_REQUEST,\n    POST_DELETE_SUCCESS,\n    POST_DELETE_FAIL,\n} from '../constants/blogConstants'\n\nexport const createPost = (title,body,short,published) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: POST_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/posts/create-new-post/`,\n            {'title':title,'body':body,'short_description':short,'is_published':published},\n            config\n        )\n        dispatch({\n            type: POST_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: POST_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listMyPosts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: POST_MYLIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/posts/post-list/`,\n            config\n        )\n\n        dispatch({\n            type: POST_MYLIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: POST_MYLIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listAllPosts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: POST_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/posts/`,\n            config\n        )\n\n        dispatch({\n            type: POST_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: POST_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const PostDetails = (slug) => async (dispatch) => {\n    try {\n        dispatch({ type: POST_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/posts/view/${slug}`)\n\n        dispatch({\n            type: POST_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: POST_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/userActions.js",["550"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport {\n    USER_MYDETAILS_RESET,\n} from '../constants/profileConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    dispatch({ type: USER_MYDETAILS_RESET })\n}\n\n\nexport const register = (name, email,team, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'team': team, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/answers.js",["551","552"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport cssClass from \"./comments.css\";\nimport hr from './HR/hr.js'\n\nfunction Answers({ answers }) {\n    return (\n\n        <div className={cssClass.Comment}>\n            <hr />\n            <div className={cssClass.Body}>\n                {answers.text}\n            </div>\n        </div>\n    )\n}\n\nexport default Answers\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/HR/hr.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/utils/getLetter.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Paginate.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/components/Posts.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/commentsActions.js",["553","554","555","556","557","558"],"import axios from 'axios'\nimport {\n    COMMENTS_CREATE_REQUEST,\n    COMMENTS_CREATE_SUCCESS,\n    COMMENTS_CREATE_FAIL,\n    COMMENTS_CREATE_RESET,\n\n    COMMENTS_DETAILS_REQUEST,\n    COMMENTS_DETAILS_SUCCESS,\n    COMMENTS_DETAILS_FAIL,\n    COMMENTS_DETAILS_RESET,\n\n    COMMENTS_LIST_REQUEST,\n    COMMENTS_LIST_SUCCESS,\n    COMMENTS_LIST_FAIL,\n    COMMENTS_LIST_RESET,\n} from '../constants/commentsConstants'\n\n\nexport const createComment = (slug,name,body,email) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: COMMENTS_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/comments/create/${slug}/`,\n            {'name':name,'body':body,'email':email},\n            config\n        )\n        dispatch({\n            type: COMMENTS_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: COMMENTS_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const CommentList = (slug) => async (dispatch) => {\n    try {\n        dispatch({ type: COMMENTS_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/comments/${slug}`)\n\n        dispatch({\n            type: COMMENTS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: COMMENTS_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/PlayerRatings.js",["559","560","561","562","563","564","565"],"import { useState, useEffect ,React } from 'react'\nimport { Form,Col, Button , Table} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getMyUserDetails} from '../actions/profileActions'\n\nimport { GsRatingsAll } from '../actions/galatasarayActions'\nimport { FbRatingsAll } from '../actions/fenerbahceActions'\n\n\nfunction PlayerRatings({ history }) {\n\n    const dispatch = useDispatch()\n\n    const ratingsgslist = useSelector(state => state.ratingsgslist)\n    const { loading, error, Ratingsgs } = ratingsgslist\n\n    const ratingsfblist = useSelector(state => state.ratingsfblist)\n    const { loading:loading2, error:error2, Ratingsfb } = ratingsfblist\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error:error1, loading:loading1, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n            dispatch(GsRatingsAll())\n            dispatch(FbRatingsAll())\n\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n    const ratinggs = Ratingsgs\n\n    return (\n        <div>\n            {loading2 && loading1 && loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n\n                        <div>\n                            {(() => {\n                            if (Myuser?.team === \"galatasaray\") {\n                                return (\n                                <div>\n                                    <h1>Overall Player Ratings for {Myuser?.team}</h1>\n                                    <Table striped bordered hover responsive className='table-sm'>\n                                    <thead>\n                                        <tr>\n                                            <th>Rating</th>\n                                            <th>Player Name</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n                                        {Ratingsgs?.topPlayers?.rating.map((item,index) => (\n                                            <tr key={index}>\n                                                <td>{item[\"statistics\"]?.rating}</td>\n                                                <td>{item[\"player\"]?.name}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                    </Table>\n                                </div>\n                                )\n                            } else if (Myuser?.team === \"fenerbahce\") {\n                                return (\n                                <div>\n                                    <h1>Overall Player Ratings for {Myuser?.team}</h1>\n                                    <Table striped bordered hover responsive className='table-sm'>\n                                    <thead>\n                                        <tr>\n                                            <th>Rating</th>\n                                            <th>Player Name</th>\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n                                        {Ratingsfb?.topPlayers.rating && Ratingsfb[\"topPlayers\"]?.rating.map(item => (\n                                            <tr key={item}>\n                                                <td>{item[\"statistics\"]?.rating}</td>\n                                                <td>{item[\"player\"]?.name}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                    </Table>\n                                </div>\n                                )\n                            }else {\n                                return (\n                                  <div>catch all</div>\n                                )\n                              }\n                            })()}\n                      </div>\n                    )}\n        </div>\n\n    )\n\n}\n\nexport default PlayerRatings\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/TeamStatistics.js",["566","567","568","569","570","571"],"import { useState, useEffect, React } from 'react'\nimport { Form,Col, Button , Table} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getMyUserDetails} from '../actions/profileActions'\n\nimport { Gsstatisticsall } from '../actions/galatasarayActions'\nimport { Fbstatisticsall } from '../actions/fenerbahceActions'\n\n\nfunction TeamStatistics({ history }) {\n\n    const dispatch = useDispatch()\n\n    const statisticsgslist = useSelector(state => state.statisticsgslist)\n    const { loading, error, Statisticsgs } = statisticsgslist\n\n    const statisticsfblist = useSelector(state => state.statisticsfblist)\n    const { loading:loading2, error:error2, Statisticsfb } = statisticsfblist\n\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error:error1, loading:loading1, Myuser } = usermyDetails\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(Gsstatisticsall())\n            dispatch(Fbstatisticsall())\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n\n    return (\n        <div>\n            {loading1 && loading && loading2\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                            <div>\n                            {(() => {\n                            if (Myuser?.team === \"galatasaray\") {\n                                return (\n                                <div>\n                                <h1>Team Statistics for {Myuser?.team}</h1>\n                                <Table striped bordered hover size=\"sm\">\n                                <tr>\n                                    <th>Statistics</th>\n                                    <th>Number</th>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total assists</td>\n                                    <td>{Statisticsgs?.statistics?.assists}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total goal</td>\n                                    <td>{Statisticsgs?.statistics?.goalsScored}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total successfulDribbles</td>\n                                    <td>{Statisticsgs?.statistics?.successfulDribbles}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total yellowCardsAgainst</td>\n                                    <td>{Statisticsgs?.statistics?.yellowCardsAgainst}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total redCards</td>\n                                    <td>{Statisticsgs?.statistics?.redCards}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total yellowCards</td>\n                                    <td>{Statisticsgs?.statistics?.yellowCards}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total PassesAgainst</td>\n                                    <td>{Statisticsgs?.statistics?.totalPassesAgainst}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total shotsFromOutsideTheBoxAgainst</td>\n                                    <td>{Statisticsgs?.statistics?.shotsFromOutsideTheBoxAgainst}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total FinalThirdPassesAgainst</td>\n                                    <td>{Statisticsgs?.statistics?.totalFinalThirdPassesAgainst}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total shotsOnTarget</td>\n                                    <td>{Statisticsgs?.statistics?.shotsOnTarget}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total corners</td>\n                                    <td>{Statisticsgs?.statistics?.corners}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total freeKickShots</td>\n                                    <td>{Statisticsgs?.statistics?.freeKickShots}</td>\n                                </tr>\n                                <tr>\n                                    <td>Galatasaray total freeKickGoals</td>\n                                    <td>{Statisticsgs?.statistics?.freeKickGoals}</td>\n                                </tr>\n                                </Table>\n\n                                </div>\n                                )\n                            } else if (Myuser?.team === \"fenerbahce\") {\n                                return (\n                                <div>\n                                        <h1>Team Statistics for {Myuser?.team}</h1>\n                                        <Table striped bordered hover size=\"sm\">\n                                        <tr>\n                                            <th>Statistics</th>\n                                            <th>Number</th>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total assists</td>\n                                            <td>{Statisticsfb?.statistics?.assists}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total goal</td>\n                                            <td>{Statisticsfb?.statistics?.goalsScored}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total successfulDribbles</td>\n                                            <td>{Statisticsfb?.statistics?.successfulDribbles}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total yellowCardsAgainst</td>\n                                            <td>{Statisticsfb?.statistics?.yellowCardsAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total redCards</td>\n                                            <td>{Statisticsfb?.statistics?.redCards}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total yellowCards</td>\n                                            <td>{Statisticsfb?.statistics?.yellowCards}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total PassesAgainst</td>\n                                            <td>{Statisticsfb?.statistics?.totalPassesAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total shotsFromOutsideTheBoxAgainst</td>\n                                            <td>{Statisticsfb?.statistics?.shotsFromOutsideTheBoxAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total FinalThirdPassesAgainst</td>\n                                            <td>{Statisticsfb?.statistics?.totalFinalThirdPassesAgainst}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total shotsOnTarget</td>\n                                            <td>{Statisticsfb?.statistics?.shotsOnTarget}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total corners</td>\n                                            <td>{Statisticsfb?.statistics?.corners}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total freeKickShots</td>\n                                            <td>{Statisticsfb?.statistics?.freeKickShots}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>fenerbahce total freeKickGoals</td>\n                                            <td>{Statisticsfb?.statistics?.freeKickGoals}</td>\n                                        </tr>\n                                    </Table>\n                                </div>\n                                )\n                            }else {\n                                return (\n                                  <div>catch all</div>\n                                )\n                              }\n                            })()}\n                        </div>\n                    )}\n        </div>\n\n    )\n\n}\n\nexport default TeamStatistics\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/galatasarayReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/galatasarayConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/galatasarayActions.js",["572","573"],"\nimport axios from 'axios'\nimport {\n    GSSTATISTICS_DETAILS_REQUEST,\n    GSSTATISTICS_DETAILS_SUCCESS,\n    GSSTATISTICS_DETAILS_FAIL,\n    GSSTATISTICS_DETAILS_RESET,\n\n    GSRATINGS_DETAILS_REQUEST,\n    GSRATINGS_DETAILS_SUCCESS,\n    GSRATINGS_DETAILS_FAIL,\n    GSRATINGS_DETAILS_RESET,\n} from '../constants/galatasarayConstants'\n\n\nexport const Gsstatisticsall = () => async (dispatch) => {\n    try {\n        dispatch({ type: GSSTATISTICS_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://api.sofascore.com/api/v1/team/3061/unique-tournament/52/season/42632/statistics/overall`)\n\n        dispatch({\n            type: GSSTATISTICS_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GSSTATISTICS_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const GsRatingsAll = () => async (dispatch) => {\n    try {\n        dispatch({ type: GSRATINGS_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://api.sofascore.com/api/v1/team/3061/unique-tournament/52/season/42632/top-players/overall`)\n\n        dispatch({\n            type: GSRATINGS_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GSRATINGS_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/fenerbahceReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/fenerbahceActions.js",["574","575"],"import axios from 'axios'\nimport {\n    FBSTATISTICS_DETAILS_REQUEST,\n    FBSTATISTICS_DETAILS_SUCCESS,\n    FBSTATISTICS_DETAILS_FAIL,\n    FBSTATISTICS_DETAILS_RESET,\n\n    FBRATINGS_DETAILS_REQUEST,\n    FBRATINGS_DETAILS_SUCCESS,\n    FBRATINGS_DETAILS_FAIL,\n    FBRATINGS_DETAILS_RESET,\n} from '../constants/fenerbahceConstants'\n\n\nexport const Fbstatisticsall = () => async (dispatch) => {\n    try {\n        dispatch({ type: FBSTATISTICS_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://api.sofascore.com/api/v1/team/3052/unique-tournament/52/season/42632/statistics/overall `)\n\n        dispatch({\n            type: FBSTATISTICS_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FBSTATISTICS_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const FbRatingsAll = () => async (dispatch) => {\n    try {\n        dispatch({ type: FBRATINGS_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`https://api.sofascore.com/api/v1/team/3052/unique-tournament/52/season/42632/top-players/overall`)\n\n        dispatch({\n            type: FBRATINGS_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FBRATINGS_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/fenerbahceConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AddPlayer.js",["576","577"],"import React, { useState, useEffect } from 'react'\nimport { Form,Col, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nimport { createPlayer } from '../actions/playerActions'\nimport {PLAYER_CREATE_RESET} from '../constants/playerConstants'\n\nfunction AddPlayer({ location,history }) {\n\n    const [playerteam, setPlayeerTeam] = useState('')\n    const [playername, setplayer] = useState('')\n\n    const redirect = location.search ? location.search.split('=')[1] : '/login'\n\n    const [message, setMessage] = useState('')\n\n    const playercreatereducer = useSelector(state => state.playercreatereducer)\n    const { error, loading, success,player } = playercreatereducer\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n\n        if (!userInfo && !userInfo?.isAdmin) {\n            history.push(redirect)\n        }\n\n        if (success) {\n            setPlayeerTeam(\"\")\n            setplayer(\"\")\n            dispatch({ type: PLAYER_CREATE_RESET })\n        }\n    }, [history, success,dispatch,redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createPlayer(playerteam,playername))\n        setMessage('')\n\n    }\n\n\n\n\n\n    return (\n        <Col md={20}>\n        <h2>Oyuncu Oluştur</h2>\n\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId='hello' form-control-lg>\n                <Form.Label>Oyuncu İsmi</Form.Label>\n                <Form.Control\n                    required\n                    type='name'\n                    placeholder='Eklenecek oyuncunun ismini giriniz...'\n                    value={playername}\n                    onChange={(e) => setplayer(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='name' form-control-lg>\n                <Form.Label>Oyuncunun takımı</Form.Label>\n                <Form.Control\n                    required\n                    type='name'\n                    placeholder='Eklenecek oyuncunun takımını giriniz...'\n                    value={playerteam}\n                    onChange={(e) => setPlayeerTeam(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n\n            <Button type='submit' variant='primary'>\n                Oluştur\n            </Button>\n\n        </Form>\n    </Col>\n\n    )\n}\n\nexport default AddPlayer\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/playerReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/playerConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/playerActions.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/AllPlayer.js",["578","579","580","581"],"import React, { useState, useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listPlayers } from '../actions/playerActions'\nimport { getMyUserDetails} from '../actions/profileActions'\n\n\nfunction AllPlayer({ history }) {\n\n    const dispatch = useDispatch()\n\n    const playeralllist = useSelector(state => state.playeralllist)\n    const { loading, error, playerAll } = playeralllist\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error:error1, loading:loading1, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(listPlayers())\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n    return (\n        <div>\n            <h1>{Myuser.team} Player's ratings given by the users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>Player Name</th>\n                                    <th>Score</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {playerAll.map(player => (\n                                    Myuser.team === player.team_player ?(\n                                    <tr key={player.id}>\n                                        <td>{player.player}</td>\n                                        <td>{player.score}</td>\n                                    </tr>):null\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n\n    )\n}\n\nexport default AllPlayer\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ScorePlayer.js",["582","583","584"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table,Dropdown } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { PLAYER_UPDATE_RESET } from '../constants/playerConstants'\nimport { getMyUserDetails} from '../actions/profileActions'\nimport { listPlayers,updatePlayer} from '../actions/playerActions'\n\nfunction ScorePlayer({ history }) {\n\n    const scorearr =[1,2,3,4,5,6,7,8,9,10]\n\n    const [score, setScore] = useState('')\n    const [playerid, setPlayerId] = useState('')\n    const [playercurrentscore, setCurrentScore] = useState('')\n    const [playerteam, setPlayerTeam] = useState('')\n    const [selectedPlayer, setSelectedPlayer] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n    const { error, loading, Myuser } = usermyDetails\n\n    const playeralllist = useSelector(state => state.playeralllist)\n    const { loading:loading1, error:error1, playerAll } = playeralllist\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const platerupdatereducer = useSelector(state => state.platerupdatereducer)\n    const {success: successUpdate  } = platerupdatereducer\n\n\n\n    useEffect(() => {\n        if (userInfo) {\n            dispatch(listPlayers())\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n        } else {\n            history.push('/login')\n        }\n        if(successUpdate)\n            {\n                setScore('')\n                setPlayerId('')\n                setPlayerTeam('')\n                setSelectedPlayer('')\n                setCurrentScore('')\n                dispatch({ type: PLAYER_UPDATE_RESET })\n\n            }\n\n    }, [dispatch, history, userInfo, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updatePlayer({\n            'id': playerid,\n            'team_player':playerteam,\n            'score':playercurrentscore+score,\n            'player':selectedPlayer,\n        }))\n        setMessage('')\n\n\n    }\n\n    const handler = (player) => {\n        setSelectedPlayer(player?.player)\n        setPlayerId(player?.id)\n        setPlayerTeam(player?.team_player)\n        setCurrentScore(player?.score)\n\n      }\n\n    return (\n        <Row>\n            <Col md={20}>\n                <h2>{Myuser.team} Player's Scoring System</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n\n\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='team'>\n                        <Dropdown variant=\"dark\">\n                            <Dropdown.Toggle id=\"dropdown-button-dark-example1\" variant=\"dark\">\n                                {selectedPlayer?selectedPlayer:\"Select a player\"}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu variant=\"dark\">\n                            {playerAll?.map(player => (\n                                Myuser.team === player.team_player ?(<Dropdown.Item onSelect={()=>handler(player)}>{player?.player}</Dropdown.Item>):null\n\n                            ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Form.Group>\n\n                    <Form.Group controlId='team'>\n                        <Dropdown variant=\"dark\">\n                            <Dropdown.Toggle id=\"dropdown-button-dark-example2\" variant=\"dark\">\n                                {score?score:\"Select a score\"}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu variant=\"dark\">\n                            {scorearr?.map(scores => (\n                                <Dropdown.Item onSelect={()=>setScore(scores)}>{scores}</Dropdown.Item>\n                            ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ScorePlayer\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/generalReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/generalConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/generalActions.js",["585"],"import axios from 'axios'\nimport {\n    WINNER_LIST_REQUEST,\n    WINNER_LIST_SUCCESS,\n    WINNER_LIST_FAIL,\n    WINNER_LIST_RESET,\n\n} from '../constants/generalConstants'\n\n\nexport const listWinners = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: WINNER_LIST_REQUEST\n        })\n\n        const { data } = await axios.get(\n            `/api/users/my/profile/all-users`,\n        )\n\n        dispatch({\n            type: WINNER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: WINNER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","/Users/ardagoktas/deneme12/Team17-backend/frontend/src/reducers/prizeReducers.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/constants/prizeConstants.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/actions/prizeActions.js",[],"/Users/ardagoktas/deneme12/Team17-backend/frontend/src/screens/ProfilePage.js",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { USER_UPDATE_MYPROFILE_RESET } from '../constants/profileConstants'\nimport { getMyUserDetails,updateMyUserProfile} from '../actions/profileActions'\n\nfunction ProfilePage({ history }) {\n\n    const dispatch = useDispatch()\n\n    const usermyDetails = useSelector(state => state.usermyDetails)\n\n    const { error, loading, Myuser } = usermyDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const usermyUpdateProfile = useSelector(state => state.usermyUpdateProfile)\n    const {success: successUpdate  } = usermyUpdateProfile\n\n\n    useEffect(() => {\n        if (userInfo) {\n\n            dispatch(getMyUserDetails(`profile/${userInfo._id}`))\n\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n    return (\n\n        <div>\n\n        <div>\n        {(() => {\n        if (Myuser?.team === \"galatasaray\") {\n            return (\n                <div\n                >\n                <h2\n                                style={{\n                                    fontWeight: \"regular\",\n                                    fontSize: \"25px\",\n                                    position: \"absolute\",\n                                    left: 150,\n                                    top: 90,\n                                    textAlign: \"center\",\n                                    color:\"red\"\n                                  }}>HOŞGELDİN {userInfo.name}!</h2>\n\n                <img\n                        style={{position: \"absolute\",\n                        left: 800,\n                        top: 600,\n                        width: \"800px \",\n                        height: \"627px\",}}\n\n                        src=\"./static/galatasaray.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n\n\n                        <><h1 style={{color:\"red\"}}><center>Ocak Ayı Maç tablosu</center></h1>\n        <br></br>\n        <table class=\"table table-dark\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Karşı Takım</th>\n                    <th scope=\"col\">Saha ismi</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Galatasaray</td>\n                    <td>Nef Stadium</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Fenerbahçe</td>\n                    <td>Şükrü Saracoğlu Stadium</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">3</th>\n                    <td>HataySpor</td>\n                    <td>Nef Stadium</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">4</th>\n                    <td>AlanyaSpor</td>\n                    <td>Bahçesehir Okullari Stadium</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">5</th>\n                    <td>Antalya Spor</td>\n                    <td>Nef Stadium</td>\n                </tr>\n\n            </tbody>\n        </table></>\n                        </div>\n\n                                )\n                            } else if (Myuser?.team === \"fenerbahce\") {\n                                return (\n                                    <div\n                                    >\n                                    <h2\n                                                    style={{\n                                                        fontWeight: \"regular\",\n                                                        fontSize: \"25px\",\n                                                        position: \"absolute\",\n                                                        left: 150,\n                                                        top: 90,\n                                                        textAlign: \"center\",\n                                                        color:\"red\"\n                                                      }}>HOŞGELDİN {userInfo.name}!</h2>\n\n                                    <img\n                                            style={{position: \"absolute\",\n                                            left: 800,\n                                            top: 600,\n                                            width: \"800px \",\n                                            height: \"627px\",}}\n\n                                            src=\"./static/fenerbahce.png\" class=\"img-thumbnail\" alt=\"...\"></img>\n\n\n                                            <><h1 style={{color:\"red\"}}><center>Ocak Ayı Maç tablosu</center></h1>\n                            <br></br>\n                            <table class=\"table table-dark\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">Karşı Takım</th>\n                                        <th scope=\"col\">Saha ismi</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <th scope=\"row\">1</th>\n                                        <td>Galatasaray</td>\n                                        <td>Şükrü Saracoğlu Stadium</td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">2</th>\n                                        <td>Gaziantep FK</td>\n                                        <td>Gaziantep Stadium</td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">3</th>\n                                        <td>RizeSpor Stadium</td>\n                                        <td>Şükrü Saracoğlu Stadium</td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">4</th>\n                                        <td>Ümraniyespor</td>\n                                        <td>Ümraniye Belediyesi Sehir Stadi</td>\n                                    </tr>\n                                    <tr>\n                                        <th scope=\"row\">5</th>\n                                        <td>Kasımpaşa</td>\n                                        <td>Şükrü Saracoğlu Stadium</td>\n                                    </tr>\n\n                                </tbody>\n                            </table></>\n                                            </div>\n                                )\n\n                            }\n                            else {\n                                return (\n                                  <div>catch all</div>\n                                )\n                            }\n\n                            })()}\n                        </div>\n\n        </div>\n\n\n    )\n\n}\n\nexport default ProfilePage\n",{"ruleId":"601","replacedBy":"602"},{"ruleId":"603","replacedBy":"604"},{"ruleId":"605","severity":1,"message":"606","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":14},{"ruleId":"605","severity":1,"message":"609","line":29,"column":5,"nodeType":"607","messageId":"608","endLine":29,"endColumn":24},{"ruleId":"605","severity":1,"message":"610","line":41,"column":5,"nodeType":"607","messageId":"608","endLine":41,"endColumn":26},{"ruleId":"605","severity":1,"message":"611","line":7,"column":5,"nodeType":"607","messageId":"608","endLine":7,"endColumn":29},{"ruleId":"605","severity":1,"message":"612","line":8,"column":5,"nodeType":"607","messageId":"608","endLine":8,"endColumn":29},{"ruleId":"605","severity":1,"message":"613","line":9,"column":5,"nodeType":"607","messageId":"608","endLine":9,"endColumn":26},{"ruleId":"605","severity":1,"message":"614","line":10,"column":5,"nodeType":"607","messageId":"608","endLine":10,"endColumn":27},{"ruleId":"605","severity":1,"message":"615","line":10,"column":5,"nodeType":"607","messageId":"608","endLine":10,"endColumn":23},{"ruleId":"605","severity":1,"message":"616","line":22,"column":5,"nodeType":"607","messageId":"608","endLine":22,"endColumn":24},{"ruleId":"605","severity":1,"message":"617","line":23,"column":5,"nodeType":"607","messageId":"608","endLine":23,"endColumn":24},{"ruleId":"605","severity":1,"message":"618","line":24,"column":5,"nodeType":"607","messageId":"608","endLine":24,"endColumn":21},{"ruleId":"605","severity":1,"message":"619","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":37},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"623","severity":1,"message":"624","line":43,"column":8,"nodeType":"625","endLine":43,"endColumn":46,"suggestions":"626"},{"ruleId":"627","severity":1,"message":"628","line":35,"column":22,"nodeType":"629","messageId":"630","endLine":35,"endColumn":24},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"619","line":3,"column":24,"nodeType":"607","messageId":"608","endLine":3,"endColumn":27},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"632","line":3,"column":41,"nodeType":"607","messageId":"608","endLine":3,"endColumn":51},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"605","severity":1,"message":"633","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":24},{"ruleId":"605","severity":1,"message":"634","line":8,"column":26,"nodeType":"607","messageId":"608","endLine":8,"endColumn":43},{"ruleId":"605","severity":1,"message":"635","line":9,"column":10,"nodeType":"607","messageId":"608","endLine":9,"endColumn":35},{"ruleId":"605","severity":1,"message":"636","line":19,"column":23,"nodeType":"607","messageId":"608","endLine":19,"endColumn":35},{"ruleId":"605","severity":1,"message":"637","line":29,"column":13,"nodeType":"607","messageId":"608","endLine":29,"endColumn":21},{"ruleId":"623","severity":1,"message":"624","line":36,"column":8,"nodeType":"625","endLine":36,"endColumn":23,"suggestions":"638"},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"639","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"640","line":3,"column":16,"nodeType":"607","messageId":"608","endLine":3,"endColumn":22},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"605","severity":1,"message":"641","line":10,"column":10,"nodeType":"607","messageId":"608","endLine":10,"endColumn":18},{"ruleId":"605","severity":1,"message":"620","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"619","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":13},{"ruleId":"605","severity":1,"message":"642","line":4,"column":20,"nodeType":"607","messageId":"608","endLine":4,"endColumn":25},{"ruleId":"605","severity":1,"message":"643","line":4,"column":27,"nodeType":"607","messageId":"608","endLine":4,"endColumn":36},{"ruleId":"605","severity":1,"message":"644","line":4,"column":46,"nodeType":"607","messageId":"608","endLine":4,"endColumn":50},{"ruleId":"605","severity":1,"message":"645","line":9,"column":8,"nodeType":"607","messageId":"608","endLine":9,"endColumn":10},{"ruleId":"605","severity":1,"message":"646","line":11,"column":10,"nodeType":"607","messageId":"608","endLine":11,"endColumn":21},{"ruleId":"605","severity":1,"message":"647","line":13,"column":10,"nodeType":"607","messageId":"608","endLine":13,"endColumn":30},{"ruleId":"605","severity":1,"message":"648","line":24,"column":19,"nodeType":"607","messageId":"608","endLine":24,"endColumn":25},{"ruleId":"605","severity":1,"message":"649","line":24,"column":35,"nodeType":"607","messageId":"608","endLine":24,"endColumn":43},{"ruleId":"605","severity":1,"message":"650","line":24,"column":54,"nodeType":"607","messageId":"608","endLine":24,"endColumn":61},{"ruleId":"605","severity":1,"message":"651","line":29,"column":12,"nodeType":"607","messageId":"608","endLine":29,"endColumn":19},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"652","line":1,"column":27,"nodeType":"607","messageId":"608","endLine":1,"endColumn":36},{"ruleId":"605","severity":1,"message":"653","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":21},{"ruleId":"605","severity":1,"message":"654","line":2,"column":23,"nodeType":"607","messageId":"608","endLine":2,"endColumn":34},{"ruleId":"605","severity":1,"message":"619","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":13},{"ruleId":"605","severity":1,"message":"655","line":3,"column":15,"nodeType":"607","messageId":"608","endLine":3,"endColumn":18},{"ruleId":"605","severity":1,"message":"656","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":14},{"ruleId":"605","severity":1,"message":"657","line":5,"column":8,"nodeType":"607","messageId":"608","endLine":5,"endColumn":15},{"ruleId":"605","severity":1,"message":"658","line":6,"column":8,"nodeType":"607","messageId":"608","endLine":6,"endColumn":16},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"639","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"640","line":3,"column":16,"nodeType":"607","messageId":"608","endLine":3,"endColumn":22},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"660","line":9,"column":10,"nodeType":"607","messageId":"608","endLine":9,"endColumn":15},{"ruleId":"605","severity":1,"message":"661","line":12,"column":12,"nodeType":"607","messageId":"608","endLine":12,"endColumn":17},{"ruleId":"605","severity":1,"message":"662","line":12,"column":19,"nodeType":"607","messageId":"608","endLine":12,"endColumn":27},{"ruleId":"605","severity":1,"message":"663","line":13,"column":12,"nodeType":"607","messageId":"608","endLine":13,"endColumn":20},{"ruleId":"605","severity":1,"message":"664","line":13,"column":22,"nodeType":"607","messageId":"608","endLine":13,"endColumn":33},{"ruleId":"605","severity":1,"message":"648","line":19,"column":19,"nodeType":"607","messageId":"608","endLine":19,"endColumn":25},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"619","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":13},{"ruleId":"605","severity":1,"message":"655","line":3,"column":15,"nodeType":"607","messageId":"608","endLine":3,"endColumn":18},{"ruleId":"665","severity":1,"message":"666","line":23,"column":68,"nodeType":"667","endLine":23,"endColumn":100},{"ruleId":"665","severity":1,"message":"666","line":28,"column":68,"nodeType":"667","endLine":28,"endColumn":98},{"ruleId":"665","severity":1,"message":"666","line":44,"column":93,"nodeType":"667","endLine":44,"endColumn":126},{"ruleId":"665","severity":1,"message":"666","line":45,"column":94,"nodeType":"667","endLine":45,"endColumn":127},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"668","line":10,"column":10,"nodeType":"607","messageId":"608","endLine":10,"endColumn":27},{"ruleId":"605","severity":1,"message":"669","line":16,"column":12,"nodeType":"607","messageId":"608","endLine":16,"endColumn":18},{"ruleId":"605","severity":1,"message":"670","line":16,"column":20,"nodeType":"607","messageId":"608","endLine":16,"endColumn":29},{"ruleId":"623","severity":1,"message":"624","line":34,"column":8,"nodeType":"625","endLine":34,"endColumn":27,"suggestions":"671"},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"619","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":13},{"ruleId":"605","severity":1,"message":"655","line":3,"column":15,"nodeType":"607","messageId":"608","endLine":3,"endColumn":18},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"619","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":13},{"ruleId":"605","severity":1,"message":"655","line":3,"column":15,"nodeType":"607","messageId":"608","endLine":3,"endColumn":18},{"ruleId":"605","severity":1,"message":"656","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":14},{"ruleId":"605","severity":1,"message":"657","line":5,"column":8,"nodeType":"607","messageId":"608","endLine":5,"endColumn":15},{"ruleId":"605","severity":1,"message":"658","line":6,"column":8,"nodeType":"607","messageId":"608","endLine":6,"endColumn":16},{"ruleId":"605","severity":1,"message":"672","line":13,"column":13,"nodeType":"607","messageId":"608","endLine":13,"endColumn":18},{"ruleId":"605","severity":1,"message":"673","line":13,"column":20,"nodeType":"607","messageId":"608","endLine":13,"endColumn":27},{"ruleId":"605","severity":1,"message":"674","line":13,"column":29,"nodeType":"607","messageId":"608","endLine":13,"endColumn":33},{"ruleId":"605","severity":1,"message":"675","line":13,"column":35,"nodeType":"607","messageId":"608","endLine":13,"endColumn":40},{"ruleId":"605","severity":1,"message":"655","line":3,"column":25,"nodeType":"607","messageId":"608","endLine":3,"endColumn":28},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"651","line":16,"column":12,"nodeType":"607","messageId":"608","endLine":16,"endColumn":19},{"ruleId":"605","severity":1,"message":"648","line":23,"column":19,"nodeType":"607","messageId":"608","endLine":23,"endColumn":25},{"ruleId":"605","severity":1,"message":"649","line":23,"column":35,"nodeType":"607","messageId":"608","endLine":23,"endColumn":43},{"ruleId":"605","severity":1,"message":"676","line":23,"column":54,"nodeType":"607","messageId":"608","endLine":23,"endColumn":62},{"ruleId":"605","severity":1,"message":"637","line":27,"column":13,"nodeType":"607","messageId":"608","endLine":27,"endColumn":21},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"651","line":17,"column":12,"nodeType":"607","messageId":"608","endLine":17,"endColumn":19},{"ruleId":"605","severity":1,"message":"648","line":24,"column":19,"nodeType":"607","messageId":"608","endLine":24,"endColumn":25},{"ruleId":"605","severity":1,"message":"649","line":24,"column":35,"nodeType":"607","messageId":"608","endLine":24,"endColumn":43},{"ruleId":"605","severity":1,"message":"677","line":24,"column":54,"nodeType":"607","messageId":"608","endLine":24,"endColumn":62},{"ruleId":"605","severity":1,"message":"637","line":32,"column":13,"nodeType":"607","messageId":"608","endLine":32,"endColumn":21},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"648","line":22,"column":19,"nodeType":"607","messageId":"608","endLine":22,"endColumn":25},{"ruleId":"605","severity":1,"message":"649","line":22,"column":35,"nodeType":"607","messageId":"608","endLine":22,"endColumn":43},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"678","line":2,"column":16,"nodeType":"607","messageId":"608","endLine":2,"endColumn":24},{"ruleId":"605","severity":1,"message":"639","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"656","line":5,"column":8,"nodeType":"607","messageId":"608","endLine":5,"endColumn":14},{"ruleId":"605","severity":1,"message":"679","line":6,"column":8,"nodeType":"607","messageId":"608","endLine":6,"endColumn":16},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"622","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":23},{"ruleId":"605","severity":1,"message":"621","line":10,"column":10,"nodeType":"607","messageId":"608","endLine":10,"endColumn":15},{"ruleId":"605","severity":1,"message":"680","line":11,"column":8,"nodeType":"607","messageId":"608","endLine":11,"endColumn":15},{"ruleId":"605","severity":1,"message":"657","line":20,"column":5,"nodeType":"607","messageId":"608","endLine":20,"endColumn":12},{"ruleId":"605","severity":1,"message":"681","line":28,"column":11,"nodeType":"607","messageId":"608","endLine":28,"endColumn":15},{"ruleId":"605","severity":1,"message":"682","line":29,"column":11,"nodeType":"607","messageId":"608","endLine":29,"endColumn":18},{"ruleId":"605","severity":1,"message":"651","line":33,"column":12,"nodeType":"607","messageId":"608","endLine":33,"endColumn":19},{"ruleId":"605","severity":1,"message":"683","line":33,"column":21,"nodeType":"607","messageId":"608","endLine":33,"endColumn":31},{"ruleId":"605","severity":1,"message":"673","line":37,"column":13,"nodeType":"607","messageId":"608","endLine":37,"endColumn":20},{"ruleId":"605","severity":1,"message":"672","line":37,"column":22,"nodeType":"607","messageId":"608","endLine":37,"endColumn":27},{"ruleId":"605","severity":1,"message":"684","line":44,"column":19,"nodeType":"607","messageId":"608","endLine":44,"endColumn":24},{"ruleId":"605","severity":1,"message":"649","line":44,"column":34,"nodeType":"607","messageId":"608","endLine":44,"endColumn":42},{"ruleId":"685","severity":1,"message":"686","line":57,"column":43,"nodeType":"687","messageId":"688","endLine":57,"endColumn":45},{"ruleId":"685","severity":1,"message":"686","line":69,"column":57,"nodeType":"687","messageId":"688","endLine":69,"endColumn":59},{"ruleId":"685","severity":1,"message":"686","line":76,"column":55,"nodeType":"687","messageId":"688","endLine":76,"endColumn":57},{"ruleId":"623","severity":1,"message":"689","line":132,"column":8,"nodeType":"625","endLine":132,"endColumn":32,"suggestions":"690"},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"691","line":9,"column":10,"nodeType":"607","messageId":"608","endLine":9,"endColumn":20},{"ruleId":"605","severity":1,"message":"692","line":13,"column":11,"nodeType":"607","messageId":"608","endLine":13,"endColumn":21},{"ruleId":"605","severity":1,"message":"693","line":14,"column":11,"nodeType":"607","messageId":"608","endLine":14,"endColumn":21},{"ruleId":"605","severity":1,"message":"694","line":15,"column":11,"nodeType":"607","messageId":"608","endLine":15,"endColumn":21},{"ruleId":"605","severity":1,"message":"695","line":16,"column":11,"nodeType":"607","messageId":"608","endLine":16,"endColumn":22},{"ruleId":"605","severity":1,"message":"662","line":18,"column":19,"nodeType":"607","messageId":"608","endLine":18,"endColumn":27},{"ruleId":"605","severity":1,"message":"664","line":19,"column":22,"nodeType":"607","messageId":"608","endLine":19,"endColumn":33},{"ruleId":"605","severity":1,"message":"648","line":26,"column":19,"nodeType":"607","messageId":"608","endLine":26,"endColumn":25},{"ruleId":"605","severity":1,"message":"696","line":41,"column":11,"nodeType":"607","messageId":"608","endLine":41,"endColumn":24},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"619","line":3,"column":24,"nodeType":"607","messageId":"608","endLine":3,"endColumn":27},{"ruleId":"605","severity":1,"message":"659","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"660","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":15},{"ruleId":"605","severity":1,"message":"697","line":24,"column":38,"nodeType":"607","messageId":"608","endLine":24,"endColumn":43},{"ruleId":"605","severity":1,"message":"637","line":28,"column":13,"nodeType":"607","messageId":"608","endLine":28,"endColumn":21},{"ruleId":"605","severity":1,"message":"620","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"619","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":13},{"ruleId":"605","severity":1,"message":"655","line":4,"column":15,"nodeType":"607","messageId":"608","endLine":4,"endColumn":18},{"ruleId":"605","severity":1,"message":"640","line":4,"column":19,"nodeType":"607","messageId":"608","endLine":4,"endColumn":25},{"ruleId":"605","severity":1,"message":"639","line":4,"column":27,"nodeType":"607","messageId":"608","endLine":4,"endColumn":31},{"ruleId":"605","severity":1,"message":"656","line":5,"column":8,"nodeType":"607","messageId":"608","endLine":5,"endColumn":14},{"ruleId":"605","severity":1,"message":"657","line":6,"column":8,"nodeType":"607","messageId":"608","endLine":6,"endColumn":15},{"ruleId":"605","severity":1,"message":"698","line":7,"column":10,"nodeType":"607","messageId":"608","endLine":7,"endColumn":21},{"ruleId":"605","severity":1,"message":"699","line":8,"column":8,"nodeType":"607","messageId":"608","endLine":8,"endColumn":16},{"ruleId":"605","severity":1,"message":"622","line":10,"column":10,"nodeType":"607","messageId":"608","endLine":10,"endColumn":23},{"ruleId":"605","severity":1,"message":"700","line":14,"column":8,"nodeType":"607","messageId":"608","endLine":14,"endColumn":16},{"ruleId":"605","severity":1,"message":"684","line":27,"column":19,"nodeType":"607","messageId":"608","endLine":27,"endColumn":24},{"ruleId":"605","severity":1,"message":"649","line":27,"column":34,"nodeType":"607","messageId":"608","endLine":27,"endColumn":42},{"ruleId":"605","severity":1,"message":"673","line":30,"column":13,"nodeType":"607","messageId":"608","endLine":30,"endColumn":20},{"ruleId":"605","severity":1,"message":"672","line":30,"column":22,"nodeType":"607","messageId":"608","endLine":30,"endColumn":27},{"ruleId":"605","severity":1,"message":"651","line":36,"column":12,"nodeType":"607","messageId":"608","endLine":36,"endColumn":19},{"ruleId":"605","severity":1,"message":"683","line":36,"column":21,"nodeType":"607","messageId":"608","endLine":36,"endColumn":31},{"ruleId":"623","severity":1,"message":"701","line":48,"column":8,"nodeType":"625","endLine":48,"endColumn":48,"suggestions":"702"},{"ruleId":"685","severity":1,"message":"703","line":86,"column":63,"nodeType":"687","messageId":"704","endLine":86,"endColumn":65},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"645","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":10},{"ruleId":"605","severity":1,"message":"705","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":6,"endColumn":25},{"ruleId":"605","severity":1,"message":"706","line":10,"column":5,"nodeType":"607","messageId":"608","endLine":10,"endColumn":32},{"ruleId":"605","severity":1,"message":"707","line":11,"column":5,"nodeType":"607","messageId":"608","endLine":11,"endColumn":24},{"ruleId":"605","severity":1,"message":"708","line":12,"column":5,"nodeType":"607","messageId":"608","endLine":12,"endColumn":24},{"ruleId":"605","severity":1,"message":"709","line":13,"column":5,"nodeType":"607","messageId":"608","endLine":13,"endColumn":21},{"ruleId":"605","severity":1,"message":"710","line":14,"column":5,"nodeType":"607","messageId":"608","endLine":14,"endColumn":22},{"ruleId":"605","severity":1,"message":"609","line":25,"column":5,"nodeType":"607","messageId":"608","endLine":25,"endColumn":24},{"ruleId":"605","severity":1,"message":"711","line":29,"column":5,"nodeType":"607","messageId":"608","endLine":29,"endColumn":24},{"ruleId":"605","severity":1,"message":"712","line":33,"column":5,"nodeType":"607","messageId":"608","endLine":33,"endColumn":24},{"ruleId":"605","severity":1,"message":"713","line":35,"column":5,"nodeType":"607","messageId":"608","endLine":35,"endColumn":26},{"ruleId":"605","severity":1,"message":"610","line":37,"column":5,"nodeType":"607","messageId":"608","endLine":37,"endColumn":26},{"ruleId":"605","severity":1,"message":"714","line":38,"column":5,"nodeType":"607","messageId":"608","endLine":38,"endColumn":31},{"ruleId":"605","severity":1,"message":"715","line":39,"column":5,"nodeType":"607","messageId":"608","endLine":39,"endColumn":26},{"ruleId":"605","severity":1,"message":"716","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":6,"endColumn":22},{"ruleId":"605","severity":1,"message":"615","line":11,"column":5,"nodeType":"607","messageId":"608","endLine":11,"endColumn":23},{"ruleId":"605","severity":1,"message":"717","line":16,"column":5,"nodeType":"607","messageId":"608","endLine":16,"endColumn":20},{"ruleId":"605","severity":1,"message":"718","line":21,"column":5,"nodeType":"607","messageId":"608","endLine":21,"endColumn":22},{"ruleId":"605","severity":1,"message":"616","line":23,"column":5,"nodeType":"607","messageId":"608","endLine":23,"endColumn":24},{"ruleId":"605","severity":1,"message":"617","line":24,"column":5,"nodeType":"607","messageId":"608","endLine":24,"endColumn":24},{"ruleId":"605","severity":1,"message":"618","line":25,"column":5,"nodeType":"607","messageId":"608","endLine":25,"endColumn":21},{"ruleId":"605","severity":1,"message":"635","line":21,"column":5,"nodeType":"607","messageId":"608","endLine":21,"endColumn":30},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"645","line":4,"column":8,"nodeType":"607","messageId":"608","endLine":4,"endColumn":10},{"ruleId":"605","severity":1,"message":"719","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":6,"endColumn":26},{"ruleId":"605","severity":1,"message":"611","line":8,"column":5,"nodeType":"607","messageId":"608","endLine":8,"endColumn":29},{"ruleId":"605","severity":1,"message":"612","line":9,"column":5,"nodeType":"607","messageId":"608","endLine":9,"endColumn":29},{"ruleId":"605","severity":1,"message":"613","line":10,"column":5,"nodeType":"607","messageId":"608","endLine":10,"endColumn":26},{"ruleId":"605","severity":1,"message":"614","line":11,"column":5,"nodeType":"607","messageId":"608","endLine":11,"endColumn":27},{"ruleId":"605","severity":1,"message":"720","line":16,"column":5,"nodeType":"607","messageId":"608","endLine":16,"endColumn":24},{"ruleId":"605","severity":1,"message":"631","line":1,"column":10,"nodeType":"607","messageId":"608","endLine":1,"endColumn":18},{"ruleId":"605","severity":1,"message":"639","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"655","line":2,"column":15,"nodeType":"607","messageId":"608","endLine":2,"endColumn":18},{"ruleId":"605","severity":1,"message":"640","line":2,"column":20,"nodeType":"607","messageId":"608","endLine":2,"endColumn":26},{"ruleId":"605","severity":1,"message":"721","line":20,"column":37,"nodeType":"607","messageId":"608","endLine":20,"endColumn":43},{"ruleId":"605","severity":1,"message":"648","line":23,"column":19,"nodeType":"607","messageId":"608","endLine":23,"endColumn":25},{"ruleId":"605","severity":1,"message":"722","line":41,"column":11,"nodeType":"607","messageId":"608","endLine":41,"endColumn":19},{"ruleId":"605","severity":1,"message":"631","line":1,"column":10,"nodeType":"607","messageId":"608","endLine":1,"endColumn":18},{"ruleId":"605","severity":1,"message":"639","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"655","line":2,"column":15,"nodeType":"607","messageId":"608","endLine":2,"endColumn":18},{"ruleId":"605","severity":1,"message":"640","line":2,"column":20,"nodeType":"607","messageId":"608","endLine":2,"endColumn":26},{"ruleId":"605","severity":1,"message":"721","line":20,"column":37,"nodeType":"607","messageId":"608","endLine":20,"endColumn":43},{"ruleId":"605","severity":1,"message":"648","line":24,"column":19,"nodeType":"607","messageId":"608","endLine":24,"endColumn":25},{"ruleId":"605","severity":1,"message":"723","line":7,"column":5,"nodeType":"607","messageId":"608","endLine":7,"endColumn":31},{"ruleId":"605","severity":1,"message":"724","line":12,"column":5,"nodeType":"607","messageId":"608","endLine":12,"endColumn":28},{"ruleId":"605","severity":1,"message":"725","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":6,"endColumn":31},{"ruleId":"605","severity":1,"message":"726","line":11,"column":5,"nodeType":"607","messageId":"608","endLine":11,"endColumn":28},{"ruleId":"605","severity":1,"message":"727","line":20,"column":37,"nodeType":"607","messageId":"608","endLine":20,"endColumn":43},{"ruleId":"623","severity":1,"message":"689","line":38,"column":8,"nodeType":"625","endLine":38,"endColumn":44,"suggestions":"728"},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"640","line":2,"column":17,"nodeType":"607","messageId":"608","endLine":2,"endColumn":23},{"ruleId":"605","severity":1,"message":"648","line":18,"column":19,"nodeType":"607","messageId":"608","endLine":18,"endColumn":25},{"ruleId":"605","severity":1,"message":"649","line":18,"column":35,"nodeType":"607","messageId":"608","endLine":18,"endColumn":43},{"ruleId":"605","severity":1,"message":"621","line":2,"column":34,"nodeType":"607","messageId":"608","endLine":2,"endColumn":39},{"ruleId":"605","severity":1,"message":"649","line":27,"column":21,"nodeType":"607","messageId":"608","endLine":27,"endColumn":29},{"ruleId":"605","severity":1,"message":"648","line":27,"column":37,"nodeType":"607","messageId":"608","endLine":27,"endColumn":43},{"ruleId":"605","severity":1,"message":"729","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":6,"endColumn":22},{"ruleId":"605","severity":1,"message":"631","line":1,"column":17,"nodeType":"607","messageId":"608","endLine":1,"endColumn":25},{"ruleId":"605","severity":1,"message":"620","line":2,"column":10,"nodeType":"607","messageId":"608","endLine":2,"endColumn":14},{"ruleId":"605","severity":1,"message":"639","line":3,"column":10,"nodeType":"607","messageId":"608","endLine":3,"endColumn":14},{"ruleId":"605","severity":1,"message":"640","line":3,"column":16,"nodeType":"607","messageId":"608","endLine":3,"endColumn":22},{"ruleId":"605","severity":1,"message":"619","line":3,"column":24,"nodeType":"607","messageId":"608","endLine":3,"endColumn":27},{"ruleId":"605","severity":1,"message":"655","line":3,"column":29,"nodeType":"607","messageId":"608","endLine":3,"endColumn":32},{"ruleId":"605","severity":1,"message":"621","line":3,"column":34,"nodeType":"607","messageId":"608","endLine":3,"endColumn":39},{"ruleId":"605","severity":1,"message":"622","line":4,"column":10,"nodeType":"607","messageId":"608","endLine":4,"endColumn":23},{"ruleId":"605","severity":1,"message":"656","line":6,"column":8,"nodeType":"607","messageId":"608","endLine":6,"endColumn":14},{"ruleId":"605","severity":1,"message":"657","line":7,"column":8,"nodeType":"607","messageId":"608","endLine":7,"endColumn":15},{"ruleId":"605","severity":1,"message":"706","line":8,"column":10,"nodeType":"607","messageId":"608","endLine":8,"endColumn":37},{"ruleId":"605","severity":1,"message":"730","line":9,"column":27,"nodeType":"607","messageId":"608","endLine":9,"endColumn":46},{"ruleId":"605","severity":1,"message":"672","line":17,"column":13,"nodeType":"607","messageId":"608","endLine":17,"endColumn":18},{"ruleId":"605","severity":1,"message":"673","line":17,"column":20,"nodeType":"607","messageId":"608","endLine":17,"endColumn":27},{"ruleId":"605","severity":1,"message":"731","line":23,"column":21,"nodeType":"607","messageId":"608","endLine":23,"endColumn":34},"no-native-reassign",["732"],"no-negated-in-lhs",["733"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'ANSWER_DELETE_RESET' is defined but never used.","'QUESTION_DELETE_RESET' is defined but never used.","'COMMENTS_DETAILS_REQUEST' is defined but never used.","'COMMENTS_DETAILS_SUCCESS' is defined but never used.","'COMMENTS_DETAILS_FAIL' is defined but never used.","'COMMENTS_DETAILS_RESET' is defined but never used.","'POST_DETAILS_RESET' is defined but never used.","'POST_DELETE_REQUEST' is defined but never used.","'POST_DELETE_SUCCESS' is defined but never used.","'POST_DELETE_FAIL' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["734"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'ModalTitle' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'setPublished' is assigned a value but never used.","'userInfo' is assigned a value but never used.",["735"],"'Form' is defined but never used.","'Button' is defined but never used.","'Carousel' is defined but never used.","'Image' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'hr' is defined but never used.","'CommentList' is defined but never used.","'POST_DETAILS_SUCCESS' is defined but never used.","'error1' is assigned a value but never used.","'loading1' is assigned a value but never used.","'comment' is assigned a value but never used.","'message' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Col' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'Paginate' is defined but never used.","'FormContainer' is defined but never used.","'login' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'USER_UPDATE_RESET' is defined but never used.","'author' is assigned a value but never used.","'setAuthor' is assigned a value but never used.",["736"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'page' is assigned a value but never used.","'pages' is assigned a value but never used.","'question' is assigned a value but never used.","'answerss' is assigned a value but never used.","'Redirect' is defined but never used.","'Message1' is defined but never used.","'Answers' is defined but never used.","'data' is assigned a value but never used.","'answers' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'eror1' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["737"],"'listPrizes' is defined but never used.","'gsprizearr' is assigned a value but never used.","'fbprizearr' is assigned a value but never used.","'tsprizearr' is assigned a value but never used.","'bjkprizearr' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'prize' is assigned a value but never used.","'PostDetails' is defined but never used.","'cssClass' is defined but never used.","'Comments' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["738"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'USER_MYDETAILS_RESET' is defined but never used.","'USER_UPDATE_MYPROFILE_RESET' is defined but never used.","'USER_MYLIST_REQUEST' is defined but never used.","'USER_MYLIST_SUCCESS' is defined but never used.","'USER_MYLIST_FAIL' is defined but never used.","'USER_MYLIST_RESET' is defined but never used.","'ANSWER_DETAIL_RESET' is defined but never used.","'ANSWER_CREATE_RESET' is defined but never used.","'QUESTION_CREATE_RESET' is defined but never used.","'CATEGORY_LIST_CREATE_RESET' is defined but never used.","'CATEGORY_CREATE_RESET' is defined but never used.","'POST_CREATE_RESET' is defined but never used.","'POST_LIST_RESET' is defined but never used.","'POST_MYLIST_RESET' is defined but never used.","'COMMENTS_CREATE_RESET' is defined but never used.","'COMMENTS_LIST_RESET' is defined but never used.","'error2' is assigned a value but never used.","'ratinggs' is assigned a value but never used.","'GSSTATISTICS_DETAILS_RESET' is defined but never used.","'GSRATINGS_DETAILS_RESET' is defined but never used.","'FBSTATISTICS_DETAILS_RESET' is defined but never used.","'FBRATINGS_DETAILS_RESET' is defined but never used.","'player' is assigned a value but never used.",["739"],"'WINNER_LIST_RESET' is defined but never used.","'updateMyUserProfile' is defined but never used.","'successUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"752","text":"753"},"Update the dependencies array to be: [dispatch, history, post]",{"range":"754","text":"755"},"Update the dependencies array to be: [history, category, dispatch]",{"range":"756","text":"757"},"Update the dependencies array to be: [dispatch, catId, history, userInfo]",{"range":"758","text":"759"},"Update the dependencies array to be: [dispatch, quizid, earnedpoint, qna, match, userInfo, history]",{"range":"760","text":"761"},"Update the dependencies array to be: [history, success, dispatch, redirect, userInfo]",{"range":"762","text":"763"},[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1286,1301],"[dispatch, history, post]",[1118,1137],"[history, category, dispatch]",[3427,3451],"[dispatch, catId, history, userInfo]",[1508,1548],"[dispatch, quizid, earnedpoint, qna, match, userInfo, history]",[1188,1224],"[history, success, dispatch, redirect, userInfo]"]